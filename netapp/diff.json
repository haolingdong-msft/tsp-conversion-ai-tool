{
  "info": {
    "x-ms-code-generation-settings__deleted": {
      "name": "AzureNetAppFilesManagementClient"
    },
    "title": {
      "__old": "Microsoft NetApp",
      "__new": "NetAppManagementClient"
    },
    "description": {
      "__old": "Microsoft NetApp Azure Resource Provider specification",
      "__new": "Microsoft NetApp Files Azure Resource Provider specification"
    }
  },
  "paths": {
    "/providers/microsoft.NetApp/operations": {
      "get": {
        "x-ms-examples": {
          "OperationList": {
            "$ref": {
              "__old": "examples/OperationList.json",
              "__new": "./examples/OperationList.json"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/microsoft.NetApp/locations/{location}/checkFilePathAvailability": {
      "post": {
        "parameters": [
          [
            "+",
            {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/LocationParameter"
            }
          ],
          [
            " "
          ],
          [
            "-",
            {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/LocationParameter"
            }
          ]
        ],
        "x-ms-examples": {
          "CheckFilePathAvailability": {
            "$ref": {
              "__old": "examples/CheckFilePathAvailability.json",
              "__new": "./examples/CheckFilePathAvailability.json"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/microsoft.NetApp/locations/{location}/checkNameAvailability": {
      "post": {
        "parameters": [
          [
            "+",
            {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/LocationParameter"
            }
          ],
          [
            " "
          ],
          [
            "-",
            {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/LocationParameter"
            }
          ]
        ],
        "x-ms-examples": {
          "CheckNameAvailability": {
            "$ref": {
              "__old": "examples/CheckNameAvailability.json",
              "__new": "./examples/CheckNameAvailability.json"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/microsoft.NetApp/locations/{location}/checkQuotaAvailability": {
      "post": {
        "parameters": [
          [
            "+",
            {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/LocationParameter"
            }
          ],
          [
            " "
          ],
          [
            "-",
            {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/LocationParameter"
            }
          ]
        ],
        "x-ms-examples": {
          "CheckQuotaAvailability": {
            "$ref": {
              "__old": "examples/CheckQuotaAvailability.json",
              "__new": "./examples/CheckQuotaAvailability.json"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/microsoft.NetApp/locations/{location}/queryNetworkSiblingSet": {
      "post": {
        "parameters": [
          [
            "+",
            {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/LocationParameter"
            }
          ],
          [
            " "
          ],
          [
            "-",
            {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/LocationParameter"
            }
          ]
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": {
                "__old": "#/definitions/networkSiblingSet",
                "__new": "#/definitions/NetworkSiblingSet"
              }
            }
          }
        },
        "x-ms-examples": {
          "NetworkSiblingSet_Query": {
            "$ref": {
              "__old": "examples/NetworkSiblingSet_Query.json",
              "__new": "./examples/NetworkSiblingSet_Query.json"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/microsoft.NetApp/locations/{location}/quotaLimits": {
      "get": {
        "x-ms-examples": {
          "QuotaLimits": {
            "$ref": {
              "__old": "examples/QuotaLimits_List.json",
              "__new": "./examples/QuotaLimits_List.json"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/microsoft.NetApp/locations/{location}/quotaLimits/{quotaLimitName}": {
      "get": {
        "x-ms-examples": {
          "QuotaLimits": {
            "$ref": {
              "__old": "examples/QuotaLimits_Get.json",
              "__new": "./examples/QuotaLimits_Get.json"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/microsoft.NetApp/locations/{location}/regionInfo": {
      "get": {
        "parameters": [
          [
            "~",
            {
              "$ref": {
                "__old": "../../../../../common-types/resource-management/v6/types.json#/parameters/LocationParameter",
                "__new": "../../../../../common-types/resource-management/v5/types.json#/parameters/LocationParameter"
              }
            }
          ]
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": {
                "__old": "#/definitions/regionInfo",
                "__new": "#/definitions/RegionInfo"
              }
            }
          }
        },
        "x-ms-examples": {
          "RegionInfo_Query": {
            "$ref": {
              "__old": "examples/RegionInfo.json",
              "__new": "./examples/RegionInfo.json"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/microsoft.NetApp/locations/{location}/regionInfos": {
      "get": {
        "responses": {
          "200": {
            "schema": {
              "$ref": {
                "__old": "#/definitions/regionInfosList",
                "__new": "#/definitions/RegionInfosList"
              }
            }
          }
        },
        "x-ms-examples": {
          "RegionInfos_List": {
            "$ref": {
              "__old": "examples/RegionInfos_List.json",
              "__new": "./examples/RegionInfos_List.json"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/microsoft.NetApp/locations/{location}/regionInfos/default": {
      "get": {
        "responses": {
          "200": {
            "schema": {
              "$ref": {
                "__old": "#/definitions/regionInfoResource",
                "__new": "#/definitions/RegionInfoResource"
              }
            }
          }
        },
        "x-ms-examples": {
          "RegionInfos_Get": {
            "$ref": {
              "__old": "examples/RegionInfos_Get.json",
              "__new": "./examples/RegionInfos_Get.json"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/microsoft.NetApp/locations/{location}/updateNetworkSiblingSet": {
      "post": {
        "parameters": [
          [
            "+",
            {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/LocationParameter"
            }
          ],
          [
            " "
          ],
          [
            "-",
            {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/LocationParameter"
            }
          ]
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": {
                "__old": "#/definitions/networkSiblingSet",
                "__new": "#/definitions/NetworkSiblingSet"
              }
            }
          }
        },
        "x-ms-examples": {
          "NetworkFeatures_Update": {
            "$ref": {
              "__old": "examples/NetworkSiblingSet_Update.json",
              "__new": "./examples/NetworkSiblingSet_Update.json"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/microsoft.NetApp/locations/{location}/usages": {
      "get": {
        "parameters": [
          [
            "~",
            {
              "$ref": {
                "__old": "../../../../../common-types/resource-management/v6/types.json#/parameters/LocationParameter",
                "__new": "../../../../../common-types/resource-management/v5/types.json#/parameters/LocationParameter"
              }
            }
          ]
        ],
        "x-ms-examples": {
          "Usages_List": {
            "$ref": {
              "__old": "examples/Usages_List.json",
              "__new": "./examples/Usages_List.json"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/microsoft.NetApp/locations/{location}/usages/{usageType}": {
      "get": {
        "x-ms-examples": {
          "Usages_Get": {
            "$ref": {
              "__old": "examples/Usages_Get.json",
              "__new": "./examples/Usages_Get.json"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/microsoft.NetApp/netAppAccounts": {
      "get": {
        "responses": {
          "200": {
            "schema": {
              "$ref": {
                "__old": "#/definitions/netAppAccountList",
                "__new": "#/definitions/NetAppAccountList"
              }
            }
          }
        },
        "x-ms-examples": {
          "Accounts_List__deleted": {
            "$ref": "examples/Accounts_List.json"
          },
          "Accounts_ListBySubscription__added": {
            "$ref": "./examples/Accounts_ListBySubscription.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.NetApp/netAppAccounts": {
      "get": {
        "responses": {
          "200": {
            "schema": {
              "$ref": {
                "__old": "#/definitions/netAppAccountList",
                "__new": "#/definitions/NetAppAccountList"
              }
            }
          }
        },
        "x-ms-examples": {
          "Accounts_List": {
            "$ref": {
              "__old": "examples/Accounts_List.json",
              "__new": "./examples/Accounts_List.json"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.NetApp/netAppAccounts/{accountName}": {
      "get": {
        "responses": {
          "200": {
            "schema": {
              "$ref": {
                "__old": "#/definitions/netAppAccount",
                "__new": "#/definitions/NetAppAccount"
              }
            }
          }
        },
        "x-ms-examples": {
          "Accounts_Get": {
            "$ref": {
              "__old": "examples/Accounts_Get.json",
              "__new": "./examples/Accounts_Get.json"
            }
          }
        }
      },
      "put": {
        "parameters": [
          [
            "+",
            {
              "name": "accountName",
              "in": "path",
              "required": true,
              "type": "string",
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
            }
          ],
          [
            "~",
            {
              "schema": {
                "$ref": {
                  "__old": "#/definitions/netAppAccount",
                  "__new": "#/definitions/NetAppAccount"
                }
              }
            }
          ],
          [
            "-",
            {
              "name": "accountName",
              "in": "path",
              "required": true,
              "type": "string",
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
            }
          ]
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": {
                "__old": "#/definitions/netAppAccount",
                "__new": "#/definitions/NetAppAccount"
              }
            }
          },
          "201": {
            "schema": {
              "$ref": {
                "__old": "#/definitions/netAppAccount",
                "__new": "#/definitions/NetAppAccount"
              }
            }
          }
        },
        "x-ms-examples": {
          "Accounts_CreateOrUpdate": {
            "$ref": {
              "__old": "examples/Accounts_CreateOrUpdate.json",
              "__new": "./examples/Accounts_CreateOrUpdate.json"
            }
          },
          "Accounts_CreateOrUpdateWithActiveDirectory": {
            "$ref": {
              "__old": "examples/Accounts_CreateOrUpdateAD.json",
              "__new": "./examples/Accounts_CreateOrUpdateAD.json"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-schema__added": "#/definitions/NetAppAccount"
        }
      },
      "patch": {
        "parameters": [
          [
            "+",
            {
              "name": "accountName",
              "in": "path",
              "required": true,
              "type": "string",
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
            }
          ],
          [
            "~",
            {
              "schema": {
                "$ref": {
                  "__old": "#/definitions/netAppAccountPatch",
                  "__new": "#/definitions/NetAppAccountPatch"
                }
              }
            }
          ],
          [
            "-",
            {
              "name": "accountName",
              "in": "path",
              "required": true,
              "type": "string",
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
            }
          ]
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": {
                "__old": "#/definitions/netAppAccount",
                "__new": "#/definitions/NetAppAccount"
              }
            }
          },
          "202": {
            "schema": {
              "$ref": {
                "__old": "#/definitions/netAppAccount",
                "__new": "#/definitions/NetAppAccount"
              }
            }
          }
        },
        "x-ms-examples": {
          "Accounts_Update": {
            "$ref": {
              "__old": "examples/Accounts_Update.json",
              "__new": "./examples/Accounts_Update.json"
            }
          }
        }
      },
      "delete": {
        "x-ms-examples": {
          "Accounts_Delete": {
            "$ref": {
              "__old": "examples/Accounts_Delete.json",
              "__new": "./examples/Accounts_Delete.json"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.NetApp/netAppAccounts/{accountName}/backupPolicies": {
      "get": {
        "responses": {
          "200": {
            "schema": {
              "$ref": {
                "__old": "#/definitions/backupPoliciesList",
                "__new": "#/definitions/BackupPoliciesList"
              }
            }
          }
        },
        "x-ms-examples": {
          "BackupPolicies_List": {
            "$ref": {
              "__old": "examples/BackupPolicies_List.json",
              "__new": "./examples/BackupPolicies_List.json"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.NetApp/netAppAccounts/{accountName}/backupPolicies/{backupPolicyName}": {
      "get": {
        "responses": {
          "200": {
            "schema": {
              "$ref": {
                "__old": "#/definitions/backupPolicy",
                "__new": "#/definitions/BackupPolicy"
              }
            }
          }
        },
        "x-ms-examples": {
          "Backups_Get": {
            "$ref": {
              "__old": "examples/BackupPolicies_Get.json",
              "__new": "./examples/BackupPolicies_Get.json"
            }
          }
        }
      },
      "put": {
        "parameters": [
          [
            " "
          ],
          [
            " "
          ],
          [
            "~",
            {
              "schema": {
                "$ref": {
                  "__old": "#/definitions/backupPolicy",
                  "__new": "#/definitions/BackupPolicy"
                }
              }
            }
          ]
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": {
                "__old": "#/definitions/backupPolicy",
                "__new": "#/definitions/BackupPolicy"
              }
            }
          },
          "201": {
            "schema": {
              "$ref": {
                "__old": "#/definitions/backupPolicy",
                "__new": "#/definitions/BackupPolicy"
              }
            }
          }
        },
        "x-ms-examples": {
          "BackupPolicies_Create": {
            "$ref": {
              "__old": "examples/BackupPolicies_Create.json",
              "__new": "./examples/BackupPolicies_Create.json"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-schema__added": "#/definitions/BackupPolicy"
        }
      },
      "patch": {
        "parameters": [
          [
            " "
          ],
          [
            " "
          ],
          [
            "~",
            {
              "schema": {
                "$ref": {
                  "__old": "#/definitions/backupPolicyPatch",
                  "__new": "#/definitions/BackupPolicyPatch"
                }
              }
            }
          ]
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": {
                "__old": "#/definitions/backupPolicy",
                "__new": "#/definitions/BackupPolicy"
              }
            }
          },
          "202": {
            "schema": {
              "$ref": {
                "__old": "#/definitions/backupPolicy",
                "__new": "#/definitions/BackupPolicy"
              }
            }
          }
        },
        "x-ms-examples": {
          "BackupPolicies_Update": {
            "$ref": {
              "__old": "examples/BackupPolicies_Update.json",
              "__new": "./examples/BackupPolicies_Update.json"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-schema__added": "#/definitions/BackupPolicy"
        }
      },
      "delete": {
        "x-ms-examples": {
          "BackupPolicies_Delete": {
            "$ref": {
              "__old": "examples/BackupPolicies_Delete.json",
              "__new": "./examples/BackupPolicies_Delete.json"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.NetApp/netAppAccounts/{accountName}/backupVaults": {
      "get": {
        "responses": {
          "200": {
            "schema": {
              "$ref": {
                "__old": "#/definitions/backupVaultsList",
                "__new": "#/definitions/BackupVaultsList"
              }
            }
          }
        },
        "x-ms-examples": {
          "BackupVaults_List": {
            "$ref": {
              "__old": "examples/BackupVaults_List.json",
              "__new": "./examples/BackupVaults_List.json"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.NetApp/netAppAccounts/{accountName}/backupVaults/{backupVaultName}": {
      "get": {
        "responses": {
          "200": {
            "schema": {
              "$ref": {
                "__old": "#/definitions/backupVault",
                "__new": "#/definitions/BackupVault"
              }
            }
          }
        },
        "x-ms-examples": {
          "BackupVaults_Get": {
            "$ref": {
              "__old": "examples/BackupVaults_Get.json",
              "__new": "./examples/BackupVaults_Get.json"
            }
          }
        }
      },
      "put": {
        "parameters": [
          [
            " "
          ],
          [
            " "
          ],
          [
            "~",
            {
              "schema": {
                "$ref": {
                  "__old": "#/definitions/backupVault",
                  "__new": "#/definitions/BackupVault"
                }
              }
            }
          ]
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": {
                "__old": "#/definitions/backupVault",
                "__new": "#/definitions/BackupVault"
              }
            }
          },
          "201": {
            "schema": {
              "$ref": {
                "__old": "#/definitions/backupVault",
                "__new": "#/definitions/BackupVault"
              }
            }
          }
        },
        "x-ms-examples": {
          "BackupVault_CreateOrUpdate": {
            "$ref": {
              "__old": "examples/BackupVaults_Create.json",
              "__new": "./examples/BackupVaults_Create.json"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-schema__added": "#/definitions/BackupVault"
        }
      },
      "patch": {
        "parameters": [
          [
            " "
          ],
          [
            " "
          ],
          [
            "~",
            {
              "schema": {
                "$ref": {
                  "__old": "#/definitions/backupVaultPatch",
                  "__new": "#/definitions/BackupVaultPatch"
                }
              }
            }
          ]
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": {
                "__old": "#/definitions/backupVault",
                "__new": "#/definitions/BackupVault"
              }
            }
          },
          "202": {
            "schema": {
              "$ref": {
                "__old": "#/definitions/backupVault",
                "__new": "#/definitions/BackupVault"
              }
            }
          }
        },
        "x-ms-examples": {
          "BackupVaults_Update": {
            "$ref": {
              "__old": "examples/BackupVaults_Update.json",
              "__new": "./examples/BackupVaults_Update.json"
            }
          }
        }
      },
      "delete": {
        "x-ms-examples": {
          "BackupVaults_Delete": {
            "$ref": {
              "__old": "examples/BackupVaults_Delete.json",
              "__new": "./examples/BackupVaults_Delete.json"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.NetApp/netAppAccounts/{accountName}/backupVaults/{backupVaultName}/backups": {
      "get": {
        "responses": {
          "200": {
            "schema": {
              "$ref": {
                "__old": "#/definitions/backupsList",
                "__new": "#/definitions/BackupsList"
              }
            }
          }
        },
        "x-ms-examples": {
          "Backups_List": {
            "$ref": {
              "__old": "examples/BackupsUnderBackupVault_List.json",
              "__new": "./examples/BackupsUnderBackupVault_List.json"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.NetApp/netAppAccounts/{accountName}/backupVaults/{backupVaultName}/backups/{backupName}": {
      "get": {
        "responses": {
          "200": {
            "schema": {
              "$ref": {
                "__old": "#/definitions/backup",
                "__new": "#/definitions/Backup"
              }
            }
          }
        },
        "x-ms-examples": {
          "BackupsUnderBackupVault_Get": {
            "$ref": {
              "__old": "examples/BackupsUnderBackupVault_Get.json",
              "__new": "./examples/BackupsUnderBackupVault_Get.json"
            }
          }
        }
      },
      "put": {
        "parameters": [
          [
            " "
          ],
          [
            " "
          ],
          [
            " "
          ],
          [
            "~",
            {
              "schema": {
                "$ref": {
                  "__old": "#/definitions/backup",
                  "__new": "#/definitions/Backup"
                }
              }
            }
          ]
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": {
                "__old": "#/definitions/backup",
                "__new": "#/definitions/Backup"
              }
            }
          },
          "201": {
            "schema": {
              "$ref": {
                "__old": "#/definitions/backup",
                "__new": "#/definitions/Backup"
              }
            }
          }
        },
        "x-ms-examples": {
          "BackupsUnderBackupVault_Create": {
            "$ref": {
              "__old": "examples/BackupsUnderBackupVault_Create.json",
              "__new": "./examples/BackupsUnderBackupVault_Create.json"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-schema__added": "#/definitions/Backup"
        }
      },
      "patch": {
        "parameters": [
          [
            " "
          ],
          [
            " "
          ],
          [
            " "
          ],
          [
            "~",
            {
              "schema": {
                "$ref": {
                  "__old": "#/definitions/backupPatch",
                  "__new": "#/definitions/BackupPatch"
                }
              }
            }
          ]
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": {
                "__old": "#/definitions/backup",
                "__new": "#/definitions/Backup"
              }
            }
          },
          "202": {
            "schema": {
              "$ref": {
                "__old": "#/definitions/backup",
                "__new": "#/definitions/Backup"
              }
            }
          }
        },
        "x-ms-examples": {
          "BackupsUnderBackupVault_Update": {
            "$ref": {
              "__old": "examples/BackupsUnderBackupVault_Update.json",
              "__new": "./examples/BackupsUnderBackupVault_Update.json"
            }
          }
        }
      },
      "delete": {
        "x-ms-examples": {
          "BackupsUnderBackupVault_Delete": {
            "$ref": {
              "__old": "examples/BackupsUnderBackupVault_Delete.json",
              "__new": "./examples/BackupsUnderBackupVault_Delete.json"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.NetApp/netAppAccounts/{accountName}/backupVaults/{backupVaultName}/backups/{backupName}/restoreFiles": {
      "post": {
        "parameters": [
          [
            "-",
            {
              "name": "body",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/backupRestoreFiles"
              }
            }
          ],
          [
            " "
          ],
          [
            " "
          ],
          [
            " "
          ],
          [
            "+",
            {
              "name": "body",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/BackupRestoreFiles"
              }
            }
          ]
        ],
        "x-ms-examples": {
          "Backups_SingleFileRestore": {
            "$ref": {
              "__old": "examples/BackupsUnderBackupVault_SingleFileRestore.json",
              "__new": "./examples/BackupsUnderBackupVault_SingleFileRestore.json"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.NetApp/netAppAccounts/{accountName}/capacityPools": {
      "get": {
        "responses": {
          "200": {
            "schema": {
              "$ref": {
                "__old": "#/definitions/capacityPoolList",
                "__new": "#/definitions/CapacityPoolList"
              }
            }
          }
        },
        "x-ms-examples": {
          "Pools_List": {
            "$ref": {
              "__old": "examples/Pools_List.json",
              "__new": "./examples/Pools_List.json"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}": {
      "get": {
        "responses": {
          "200": {
            "schema": {
              "$ref": {
                "__old": "#/definitions/capacityPool",
                "__new": "#/definitions/CapacityPool"
              }
            }
          }
        },
        "x-ms-examples": {
          "Pools_Get": {
            "$ref": {
              "__old": "examples/Pools_Get.json",
              "__new": "./examples/Pools_Get.json"
            }
          },
          "Pools_Get_CustomThroughput": {
            "$ref": {
              "__old": "examples/Pools_Get_CustomThroughput.json",
              "__new": "./examples/Pools_Get_CustomThroughput.json"
            }
          }
        }
      },
      "put": {
        "parameters": [
          [
            "-",
            {
              "name": "body",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/capacityPool"
              }
            }
          ],
          [
            " "
          ],
          [
            " "
          ],
          [
            "+",
            {
              "name": "body",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/CapacityPool"
              }
            }
          ]
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": {
                "__old": "#/definitions/capacityPool",
                "__new": "#/definitions/CapacityPool"
              }
            }
          },
          "201": {
            "schema": {
              "$ref": {
                "__old": "#/definitions/capacityPool",
                "__new": "#/definitions/CapacityPool"
              }
            }
          }
        },
        "x-ms-examples": {
          "Pools_CreateOrUpdate": {
            "$ref": {
              "__old": "examples/Pools_CreateOrUpdate.json",
              "__new": "./examples/Pools_CreateOrUpdate.json"
            }
          },
          "Pools_CreateOrUpdate_CustomThroughput": {
            "$ref": {
              "__old": "examples/Pools_CreateOrUpdate_CustomThroughput.json",
              "__new": "./examples/Pools_CreateOrUpdate_CustomThroughput.json"
            }
          }
        }
      },
      "patch": {
        "parameters": [
          [
            "-",
            {
              "name": "body",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/capacityPoolPatch"
              }
            }
          ],
          [
            " "
          ],
          [
            " "
          ],
          [
            "+",
            {
              "name": "body",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/CapacityPoolPatch"
              }
            }
          ]
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": {
                "__old": "#/definitions/capacityPool",
                "__new": "#/definitions/CapacityPool"
              }
            }
          }
        },
        "x-ms-examples": {
          "Pools_Update": {
            "$ref": {
              "__old": "examples/Pools_Update.json",
              "__new": "./examples/Pools_Update.json"
            }
          },
          "Pools_Update_CustomThroughput": {
            "$ref": {
              "__old": "examples/Pools_Update_CustomThroughput.json",
              "__new": "./examples/Pools_Update_CustomThroughput.json"
            }
          }
        }
      },
      "delete": {
        "x-ms-examples": {
          "Pools_Delete": {
            "$ref": {
              "__old": "examples/Pools_Delete.json",
              "__new": "./examples/Pools_Delete.json"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes": {
      "get": {
        "responses": {
          "200": {
            "schema": {
              "$ref": {
                "__old": "#/definitions/volumeList",
                "__new": "#/definitions/VolumeList"
              }
            }
          }
        },
        "x-ms-examples": {
          "Volumes_List": {
            "$ref": {
              "__old": "examples/Volumes_List.json",
              "__new": "./examples/Volumes_List.json"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}": {
      "get": {
        "responses": {
          "200": {
            "schema": {
              "$ref": {
                "__old": "#/definitions/volume",
                "__new": "#/definitions/Volume"
              }
            }
          }
        },
        "x-ms-examples": {
          "Volumes_Get": {
            "$ref": {
              "__old": "examples/Volumes_Get.json",
              "__new": "./examples/Volumes_Get.json"
            }
          }
        }
      },
      "put": {
        "parameters": [
          [
            "-",
            {
              "name": "body",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/volume"
              }
            }
          ],
          [
            " "
          ],
          [
            " "
          ],
          [
            " "
          ],
          [
            "+",
            {
              "name": "body",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/Volume"
              }
            }
          ]
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": {
                "__old": "#/definitions/volume",
                "__new": "#/definitions/Volume"
              }
            }
          },
          "201": {
            "schema": {
              "$ref": {
                "__old": "#/definitions/volume",
                "__new": "#/definitions/Volume"
              }
            }
          }
        },
        "x-ms-examples": {
          "Volumes_CreateOrUpdate": {
            "$ref": {
              "__old": "examples/Volumes_CreateOrUpdate.json",
              "__new": "./examples/Volumes_CreateOrUpdate.json"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-schema__added": "#/definitions/Volume"
        }
      },
      "patch": {
        "parameters": [
          [
            "-",
            {
              "name": "body",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/volumePatch"
              }
            }
          ],
          [
            " "
          ],
          [
            " "
          ],
          [
            " "
          ],
          [
            "+",
            {
              "name": "body",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/VolumePatch"
              }
            }
          ]
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": {
                "__old": "#/definitions/volume",
                "__new": "#/definitions/Volume"
              }
            }
          }
        },
        "x-ms-examples": {
          "Volumes_Update": {
            "$ref": {
              "__old": "examples/Volumes_Update.json",
              "__new": "./examples/Volumes_Update.json"
            }
          }
        }
      },
      "delete": {
        "x-ms-examples": {
          "Volumes_Delete": {
            "$ref": {
              "__old": "examples/Volumes_Delete.json",
              "__new": "./examples/Volumes_Delete.json"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/authorizeExternalReplication": {
      "post": {
        "responses": {
          "200": {
            "schema": {
              "$ref": {
                "__old": "#/definitions/svmPeerCommandResponse",
                "__new": "#/definitions/SvmPeerCommandResponse"
              }
            }
          }
        },
        "x-ms-examples": {
          "Volumes_AuthorizeExternalReplication": {
            "$ref": {
              "__old": "examples/Volumes_AuthorizeExternalReplication.json",
              "__new": "./examples/Volumes_AuthorizeExternalReplication.json"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/authorizeReplication": {
      "post": {
        "parameters": [
          [
            " "
          ],
          [
            " "
          ],
          [
            " "
          ],
          [
            "~",
            {
              "schema": {
                "$ref": {
                  "__old": "#/definitions/authorizeRequest",
                  "__new": "#/definitions/AuthorizeRequest"
                }
              }
            }
          ]
        ],
        "x-ms-examples": {
          "Volumes_AuthorizeReplication": {
            "$ref": {
              "__old": "examples/Volumes_AuthorizeReplication.json",
              "__new": "./examples/Volumes_AuthorizeReplication.json"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/breakFileLocks": {
      "post": {
        "parameters": [
          [
            " "
          ],
          [
            " "
          ],
          [
            " "
          ],
          [
            "~",
            {
              "schema": {
                "$ref": {
                  "__old": "#/definitions/breakFileLocksRequest",
                  "__new": "#/definitions/BreakFileLocksRequest"
                }
              }
            }
          ]
        ],
        "x-ms-examples": {
          "Volumes_BreakFileLocks": {
            "$ref": {
              "__old": "examples/Volumes_BreakFileLocks.json",
              "__new": "./examples/Volumes_BreakFileLocks.json"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/breakReplication": {
      "post": {
        "parameters": [
          [
            " "
          ],
          [
            " "
          ],
          [
            " "
          ],
          [
            "~",
            {
              "schema": {
                "$ref": {
                  "__old": "#/definitions/breakReplicationRequest",
                  "__new": "#/definitions/BreakReplicationRequest"
                }
              }
            }
          ]
        ],
        "x-ms-examples": {
          "Volumes_BreakReplication": {
            "$ref": {
              "__old": "examples/Volumes_BreakReplication.json",
              "__new": "./examples/Volumes_BreakReplication.json"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/deleteReplication": {
      "post": {
        "x-ms-examples": {
          "Volumes_DeleteReplication": {
            "$ref": {
              "__old": "examples/Volumes_DeleteReplication.json",
              "__new": "./examples/Volumes_DeleteReplication.json"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/finalizeExternalReplication": {
      "post": {
        "x-ms-examples": {
          "Volumes_FinalizeExternalReplication": {
            "$ref": {
              "__old": "examples/Volumes_FinalizeExternalReplication.json",
              "__new": "./examples/Volumes_FinalizeExternalReplication.json"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/finalizeRelocation": {
      "post": {
        "x-ms-examples": {
          "Volumes_FinalizeRelocation": {
            "$ref": {
              "__old": "examples/Volumes_FinalizeRelocation.json",
              "__new": "./examples/Volumes_FinalizeRelocation.json"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/getGroupIdListForLdapUser": {
      "post": {
        "parameters": [
          [
            " "
          ],
          [
            " "
          ],
          [
            " "
          ],
          [
            "~",
            {
              "schema": {
                "$ref": {
                  "__old": "#/definitions/getGroupIdListForLDAPUserRequest",
                  "__new": "#/definitions/GetGroupIdListForLdapUserRequest"
                }
              }
            }
          ]
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": {
                "__old": "#/definitions/getGroupIdListForLDAPUserResponse",
                "__new": "#/definitions/GetGroupIdListForLdapUserResponse"
              }
            }
          }
        },
        "x-ms-examples": {
          "GetGroupIdListForUser": {
            "$ref": {
              "__old": "examples/GroupIdListForLDAPUser.json",
              "__new": "./examples/GroupIdListForLDAPUser.json"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/latestBackupStatus/current": {
      "get": {
        "responses": {
          "200": {
            "schema": {
              "$ref": {
                "__old": "#/definitions/backupStatus",
                "__new": "#/definitions/BackupStatus"
              }
            }
          }
        },
        "x-ms-examples": {
          "Volumes_BackupStatus": {
            "$ref": {
              "__old": "examples/Volumes_LatestBackupStatus.json",
              "__new": "./examples/Volumes_LatestBackupStatus.json"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/latestRestoreStatus/current": {
      "get": {
        "responses": {
          "200": {
            "schema": {
              "$ref": {
                "__old": "#/definitions/restoreStatus",
                "__new": "#/definitions/RestoreStatus"
              }
            }
          }
        },
        "x-ms-examples": {
          "Volumes_RestoreStatus": {
            "$ref": {
              "__old": "examples/Volumes_LatestRestoreStatus.json",
              "__new": "./examples/Volumes_LatestRestoreStatus.json"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/listReplications": {
      "post": {
        "responses": {
          "200": {
            "schema": {
              "$ref": {
                "__old": "#/definitions/listReplications",
                "__new": "#/definitions/ListReplications"
              }
            }
          }
        },
        "x-ms-examples": {
          "Volumes_ListReplications": {
            "$ref": {
              "__old": "examples/Volumes_ListReplications.json",
              "__new": "./examples/Volumes_ListReplications.json"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/migrateBackups": {
      "post": {
        "parameters": [
          [
            "-",
            {
              "name": "body",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/backupsMigrationRequest"
              }
            }
          ],
          [
            " "
          ],
          [
            " "
          ],
          [
            " "
          ],
          [
            "+",
            {
              "name": "body",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/BackupsMigrationRequest"
              }
            }
          ]
        ],
        "x-ms-examples": {
          "BackupsUnderVolume_Migrate": {
            "$ref": {
              "__old": "examples/BackupsUnderVolume_Migrate.json",
              "__new": "./examples/BackupsUnderVolume_Migrate.json"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/peerExternalCluster": {
      "post": {
        "parameters": [
          [
            " "
          ],
          [
            " "
          ],
          [
            " "
          ],
          [
            "~",
            {
              "schema": {
                "$ref": {
                  "__old": "#/definitions/peerClusterForVolumeMigrationRequest",
                  "__new": "#/definitions/PeerClusterForVolumeMigrationRequest"
                }
              }
            }
          ]
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": {
                "__old": "#/definitions/clusterPeerCommandResponse",
                "__new": "#/definitions/ClusterPeerCommandResponse"
              }
            }
          }
        },
        "x-ms-examples": {
          "Volumes_PeerExternalCluster": {
            "$ref": {
              "__old": "examples/Volumes_PeerExternalCluster.json",
              "__new": "./examples/Volumes_PeerExternalCluster.json"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/performReplicationTransfer": {
      "post": {
        "x-ms-examples": {
          "Volumes_PerformReplicationTransfer": {
            "$ref": {
              "__old": "examples/Volumes_PerformReplicationTransfer.json",
              "__new": "./examples/Volumes_PerformReplicationTransfer.json"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/poolChange": {
      "post": {
        "parameters": [
          [
            " "
          ],
          [
            " "
          ],
          [
            " "
          ],
          [
            "~",
            {
              "schema": {
                "$ref": {
                  "__old": "#/definitions/poolChangeRequest",
                  "__new": "#/definitions/PoolChangeRequest"
                }
              }
            }
          ]
        ],
        "x-ms-examples": {
          "Volumes_AuthorizeReplication": {
            "$ref": {
              "__old": "examples/Volumes_PoolChange.json",
              "__new": "./examples/Volumes_PoolChange.json"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/populateAvailabilityZone": {
      "post": {
        "responses": {
          "200": {
            "schema": {
              "$ref": {
                "__old": "#/definitions/volume",
                "__new": "#/definitions/Volume"
              }
            }
          }
        },
        "x-ms-examples": {
          "Volumes_PopulateAvailabilityZones": {
            "$ref": {
              "__old": "examples/Volumes_PopulateAvailabilityZones.json",
              "__new": "./examples/Volumes_PopulateAvailabilityZones.json"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/reestablishReplication": {
      "post": {
        "parameters": [
          [
            " "
          ],
          [
            " "
          ],
          [
            " "
          ],
          [
            "~",
            {
              "schema": {
                "$ref": {
                  "__old": "#/definitions/reestablishReplicationRequest",
                  "__new": "#/definitions/ReestablishReplicationRequest"
                }
              }
            }
          ]
        ],
        "x-ms-examples": {
          "Volumes_ReestablishReplication": {
            "$ref": {
              "__old": "examples/Volumes_ReestablishReplication.json",
              "__new": "./examples/Volumes_ReestablishReplication.json"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/reinitializeReplication": {
      "post": {
        "x-ms-examples": {
          "Volumes_ReInitializeReplication": {
            "$ref": {
              "__old": "examples/Volumes_ReInitializeReplication.json",
              "__new": "./examples/Volumes_ReInitializeReplication.json"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/relocate": {
      "post": {
        "parameters": [
          [
            " "
          ],
          [
            " "
          ],
          [
            " "
          ],
          [
            "~",
            {
              "schema": {
                "$ref": {
                  "__old": "#/definitions/relocateVolumeRequest",
                  "__new": "#/definitions/RelocateVolumeRequest"
                }
              }
            }
          ]
        ],
        "x-ms-examples": {
          "Volumes_Relocate": {
            "$ref": {
              "__old": "examples/Volumes_Relocate.json",
              "__new": "./examples/Volumes_Relocate.json"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/replicationStatus": {
      "get": {
        "responses": {
          "200": {
            "schema": {
              "$ref": {
                "__old": "#/definitions/replicationStatus",
                "__new": "#/definitions/ReplicationStatus"
              }
            }
          }
        },
        "x-ms-examples": {
          "Volumes_ReplicationStatus": {
            "$ref": {
              "__old": "examples/Volumes_ReplicationStatus.json",
              "__new": "./examples/Volumes_ReplicationStatus.json"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/resetCifsPassword": {
      "post": {
        "x-ms-examples": {
          "Volumes_ResetCifsPassword": {
            "$ref": {
              "__old": "examples/Volumes_ResetCifsPassword.json",
              "__new": "./examples/Volumes_ResetCifsPassword.json"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/resyncReplication": {
      "post": {
        "x-ms-examples": {
          "Volumes_ResyncReplication": {
            "$ref": {
              "__old": "examples/Volumes_ResyncReplication.json",
              "__new": "./examples/Volumes_ResyncReplication.json"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/revert": {
      "post": {
        "parameters": [
          [
            " "
          ],
          [
            " "
          ],
          [
            " "
          ],
          [
            "~",
            {
              "schema": {
                "$ref": {
                  "__old": "#/definitions/volumeRevert",
                  "__new": "#/definitions/VolumeRevert"
                }
              }
            }
          ]
        ],
        "x-ms-examples": {
          "Volumes_Revert": {
            "$ref": {
              "__old": "examples/Volumes_Revert.json",
              "__new": "./examples/Volumes_Revert.json"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/revertRelocation": {
      "post": {
        "x-ms-examples": {
          "Volumes_RevertRelocation": {
            "$ref": {
              "__old": "examples/Volumes_RevertRelocation.json",
              "__new": "./examples/Volumes_RevertRelocation.json"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/snapshots": {
      "get": {
        "responses": {
          "200": {
            "schema": {
              "$ref": {
                "__old": "#/definitions/snapshotsList",
                "__new": "#/definitions/SnapshotsList"
              }
            }
          }
        },
        "x-ms-examples": {
          "Snapshots_List": {
            "$ref": {
              "__old": "examples/Snapshots_List.json",
              "__new": "./examples/Snapshots_List.json"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/snapshots/{snapshotName}": {
      "get": {
        "responses": {
          "200": {
            "schema": {
              "$ref": {
                "__old": "#/definitions/snapshot",
                "__new": "#/definitions/Snapshot"
              }
            }
          }
        },
        "x-ms-examples": {
          "Snapshots_Get": {
            "$ref": {
              "__old": "examples/Snapshots_Get.json",
              "__new": "./examples/Snapshots_Get.json"
            }
          }
        }
      },
      "put": {
        "parameters": [
          [
            "-",
            {
              "name": "body",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/snapshot"
              }
            }
          ],
          [
            " "
          ],
          [
            " "
          ],
          [
            " "
          ],
          [
            " "
          ],
          [
            "+",
            {
              "name": "body",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/Snapshot"
              }
            }
          ]
        ],
        "responses": {
          "201": {
            "schema": {
              "$ref": {
                "__old": "#/definitions/snapshot",
                "__new": "#/definitions/Snapshot"
              }
            }
          }
        },
        "x-ms-examples": {
          "Snapshots_Create": {
            "$ref": {
              "__old": "examples/Snapshots_Create.json",
              "__new": "./examples/Snapshots_Create.json"
            }
          }
        }
      },
      "patch": {
        "parameters": [
          [
            "-",
            {
              "name": "body",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/snapshotPatch"
              }
            }
          ],
          [
            " "
          ],
          [
            " "
          ],
          [
            " "
          ],
          [
            " "
          ],
          [
            "+",
            {
              "name": "body",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/SnapshotPatch"
              }
            }
          ]
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": {
                "__old": "#/definitions/snapshot",
                "__new": "#/definitions/Snapshot"
              }
            }
          }
        },
        "x-ms-examples": {
          "Snapshots_Update": {
            "$ref": {
              "__old": "examples/Snapshots_Update.json",
              "__new": "./examples/Snapshots_Update.json"
            }
          }
        }
      },
      "delete": {
        "x-ms-examples": {
          "Snapshots_Delete": {
            "$ref": {
              "__old": "examples/Snapshots_Delete.json",
              "__new": "./examples/Snapshots_Delete.json"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/snapshots/{snapshotName}/restoreFiles": {
      "post": {
        "parameters": [
          [
            "-",
            {
              "name": "body",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/snapshotRestoreFiles"
              }
            }
          ],
          [
            " "
          ],
          [
            " "
          ],
          [
            " "
          ],
          [
            " "
          ],
          [
            "+",
            {
              "name": "body",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/SnapshotRestoreFiles"
              }
            }
          ]
        ],
        "x-ms-examples": {
          "Snapshots_SingleFileRestore": {
            "$ref": {
              "__old": "examples/Snapshots_SingleFileRestore.json",
              "__new": "./examples/Snapshots_SingleFileRestore.json"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/splitCloneFromParent": {
      "post": {
        "responses": {
          "200": {
            "schema": {
              "$ref": {
                "__old": "#/definitions/volume",
                "__new": "#/definitions/Volume"
              }
            }
          }
        },
        "x-ms-examples": {
          "Volumes_SplitClone": {
            "$ref": {
              "__old": "examples/Volumes_SplitClone.json",
              "__new": "./examples/Volumes_SplitClone.json"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/subvolumes": {
      "get": {
        "responses": {
          "200": {
            "schema": {
              "$ref": {
                "__old": "#/definitions/subvolumesList",
                "__new": "#/definitions/SubvolumesList"
              }
            }
          }
        },
        "x-ms-examples": {
          "Subvolumes_List": {
            "$ref": {
              "__old": "examples/Subvolumes_List.json",
              "__new": "./examples/Subvolumes_List.json"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/subvolumes/{subvolumeName}": {
      "get": {
        "responses": {
          "200": {
            "schema": {
              "$ref": {
                "__old": "#/definitions/subvolumeInfo",
                "__new": "#/definitions/SubvolumeInfo"
              }
            }
          }
        },
        "x-ms-examples": {
          "Subvolumes_Get": {
            "$ref": {
              "__old": "examples/Subvolumes_Get.json",
              "__new": "./examples/Subvolumes_Get.json"
            }
          }
        }
      },
      "put": {
        "parameters": [
          [
            "-",
            {
              "name": "body",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/subvolumeInfo"
              }
            }
          ],
          [
            " "
          ],
          [
            " "
          ],
          [
            " "
          ],
          [
            " "
          ],
          [
            "+",
            {
              "name": "body",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/SubvolumeInfo"
              }
            }
          ]
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": {
                "__old": "#/definitions/subvolumeInfo",
                "__new": "#/definitions/SubvolumeInfo"
              }
            }
          },
          "201": {
            "schema": {
              "$ref": {
                "__old": "#/definitions/subvolumeInfo",
                "__new": "#/definitions/SubvolumeInfo"
              }
            }
          }
        },
        "x-ms-examples": {
          "Subvolumes_Create": {
            "$ref": {
              "__old": "examples/Subvolumes_Create.json",
              "__new": "./examples/Subvolumes_Create.json"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-schema__added": "#/definitions/SubvolumeInfo"
        }
      },
      "patch": {
        "parameters": [
          [
            "-",
            {
              "name": "body",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/subvolumePatchRequest"
              }
            }
          ],
          [
            " "
          ],
          [
            " "
          ],
          [
            " "
          ],
          [
            " "
          ],
          [
            "+",
            {
              "name": "body",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/SubvolumePatchRequest"
              }
            }
          ]
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": {
                "__old": "#/definitions/subvolumeInfo",
                "__new": "#/definitions/SubvolumeInfo"
              }
            }
          }
        },
        "x-ms-examples": {
          "Subvolumes_Update": {
            "$ref": {
              "__old": "examples/Subvolumes_Update.json",
              "__new": "./examples/Subvolumes_Update.json"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-schema__added": "#/definitions/SubvolumeInfo"
        }
      },
      "delete": {
        "x-ms-examples": {
          "Subvolumes_Delete": {
            "$ref": {
              "__old": "examples/Subvolumes_Delete.json",
              "__new": "./examples/Subvolumes_Delete.json"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/subvolumes/{subvolumeName}/getMetadata": {
      "post": {
        "responses": {
          "200": {
            "schema": {
              "$ref": {
                "__old": "#/definitions/subvolumeModel",
                "__new": "#/definitions/SubvolumeModel"
              }
            }
          }
        },
        "x-ms-examples": {
          "Subvolumes_Metadata": {
            "$ref": {
              "__old": "examples/Subvolumes_Metadata.json",
              "__new": "./examples/Subvolumes_Metadata.json"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-schema__added": "#/definitions/SubvolumeModel"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/volumeQuotaRules": {
      "get": {
        "responses": {
          "200": {
            "schema": {
              "$ref": {
                "__old": "#/definitions/volumeQuotaRulesList",
                "__new": "#/definitions/VolumeQuotaRulesList"
              }
            }
          }
        },
        "x-ms-examples": {
          "VolumeQuotaRules_List": {
            "$ref": {
              "__old": "examples/VolumeQuotaRules_List.json",
              "__new": "./examples/VolumeQuotaRules_List.json"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/volumeQuotaRules/{volumeQuotaRuleName}": {
      "get": {
        "responses": {
          "200": {
            "schema": {
              "$ref": {
                "__old": "#/definitions/volumeQuotaRule",
                "__new": "#/definitions/VolumeQuotaRule"
              }
            }
          }
        },
        "x-ms-examples": {
          "VolumeQuotaRules_Get": {
            "$ref": {
              "__old": "examples/VolumeQuotaRules_Get.json",
              "__new": "./examples/VolumeQuotaRules_Get.json"
            }
          }
        }
      },
      "put": {
        "parameters": [
          [
            "-",
            {
              "name": "body",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/volumeQuotaRule"
              }
            }
          ],
          [
            " "
          ],
          [
            " "
          ],
          [
            " "
          ],
          [
            " "
          ],
          [
            "+",
            {
              "name": "body",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/VolumeQuotaRule"
              }
            }
          ]
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": {
                "__old": "#/definitions/volumeQuotaRule",
                "__new": "#/definitions/VolumeQuotaRule"
              }
            }
          },
          "201": {
            "schema": {
              "$ref": {
                "__old": "#/definitions/volumeQuotaRule",
                "__new": "#/definitions/VolumeQuotaRule"
              }
            }
          }
        },
        "x-ms-examples": {
          "VolumeQuotaRules_Create": {
            "$ref": {
              "__old": "examples/VolumeQuotaRules_Create.json",
              "__new": "./examples/VolumeQuotaRules_Create.json"
            }
          }
        }
      },
      "patch": {
        "parameters": [
          [
            "-",
            {
              "name": "body",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/volumeQuotaRulePatch"
              }
            }
          ],
          [
            " "
          ],
          [
            " "
          ],
          [
            " "
          ],
          [
            " "
          ],
          [
            "+",
            {
              "name": "body",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/VolumeQuotaRulePatch"
              }
            }
          ]
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": {
                "__old": "#/definitions/volumeQuotaRule",
                "__new": "#/definitions/VolumeQuotaRule"
              }
            }
          }
        },
        "x-ms-examples": {
          "VolumeQuotaRules_Update": {
            "$ref": {
              "__old": "examples/VolumeQuotaRules_Update.json",
              "__new": "./examples/VolumeQuotaRules_Update.json"
            }
          }
        }
      },
      "delete": {
        "x-ms-examples": {
          "VolumeQuotaRules_Delete": {
            "$ref": {
              "__old": "examples/VolumeQuotaRules_Delete.json",
              "__new": "./examples/VolumeQuotaRules_Delete.json"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.NetApp/netAppAccounts/{accountName}/changeKeyVault": {
      "post": {
        "parameters": [
          [
            " "
          ],
          [
            "~",
            {
              "schema": {
                "$ref": {
                  "__old": "#/definitions/changeKeyVault",
                  "__new": "#/definitions/ChangeKeyVault"
                }
              }
            }
          ]
        ],
        "x-ms-examples": {
          "Accounts_ChangeKeyVault": {
            "$ref": {
              "__old": "examples/Accounts_ChangeKeyVault.json",
              "__new": "./examples/Accounts_ChangeKeyVault.json"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.NetApp/netAppAccounts/{accountName}/getKeyVaultStatus": {
      "post": {
        "responses": {
          "200": {
            "schema": {
              "$ref": {
                "__old": "#/definitions/getKeyVaultStatusResponse",
                "__new": "#/definitions/GetKeyVaultStatusResponse"
              }
            }
          }
        },
        "x-ms-examples": {
          "Accounts_GetChangeKeyVaultInformation": {
            "$ref": {
              "__old": "examples/Accounts_GetChangeKeyVaultInformation.json",
              "__new": "./examples/Accounts_GetChangeKeyVaultInformation.json"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-schema__added": "#/definitions/GetKeyVaultStatusResponse"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.NetApp/netAppAccounts/{accountName}/migrateBackups": {
      "post": {
        "parameters": [
          [
            "+",
            {
              "name": "accountName",
              "in": "path",
              "required": true,
              "type": "string",
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
            }
          ],
          [
            "~",
            {
              "schema": {
                "$ref": {
                  "__old": "#/definitions/backupsMigrationRequest",
                  "__new": "#/definitions/BackupsMigrationRequest"
                }
              }
            }
          ],
          [
            "-",
            {
              "name": "accountName",
              "in": "path",
              "required": true,
              "type": "string",
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
            }
          ]
        ],
        "x-ms-examples": {
          "BackupsUnderAccount_Migrate": {
            "$ref": {
              "__old": "examples/BackupsUnderAccount_Migrate.json",
              "__new": "./examples/BackupsUnderAccount_Migrate.json"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.NetApp/netAppAccounts/{accountName}/renewCredentials": {
      "post": {
        "x-ms-examples": {
          "Accounts_RenewCredentials": {
            "$ref": {
              "__old": "examples/Accounts_RenewCredentials.json",
              "__new": "./examples/Accounts_RenewCredentials.json"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.NetApp/netAppAccounts/{accountName}/snapshotPolicies": {
      "get": {
        "responses": {
          "200": {
            "schema": {
              "$ref": {
                "__old": "#/definitions/snapshotPoliciesList",
                "__new": "#/definitions/SnapshotPoliciesList"
              }
            }
          }
        },
        "x-ms-examples": {
          "SnapshotPolicies_List": {
            "$ref": {
              "__old": "examples/SnapshotPolicies_List.json",
              "__new": "./examples/SnapshotPolicies_List.json"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.NetApp/netAppAccounts/{accountName}/snapshotPolicies/{snapshotPolicyName}": {
      "get": {
        "responses": {
          "200": {
            "schema": {
              "$ref": {
                "__old": "#/definitions/snapshotPolicy",
                "__new": "#/definitions/SnapshotPolicy"
              }
            }
          }
        },
        "x-ms-examples": {
          "SnapshotPolicies_Get": {
            "$ref": {
              "__old": "examples/SnapshotPolicies_Get.json",
              "__new": "./examples/SnapshotPolicies_Get.json"
            }
          }
        }
      },
      "put": {
        "parameters": [
          [
            "-",
            {
              "name": "body",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/snapshotPolicy"
              }
            }
          ],
          [
            " "
          ],
          [
            " "
          ],
          [
            "+",
            {
              "name": "body",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/SnapshotPolicy"
              }
            }
          ]
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": {
                "__old": "#/definitions/snapshotPolicy",
                "__new": "#/definitions/SnapshotPolicy"
              }
            }
          },
          "201": {
            "schema": {
              "$ref": {
                "__old": "#/definitions/snapshotPolicy",
                "__new": "#/definitions/SnapshotPolicy"
              }
            }
          }
        },
        "x-ms-examples": {
          "SnapshotPolicies_Create": {
            "$ref": {
              "__old": "examples/SnapshotPolicies_Create.json",
              "__new": "./examples/SnapshotPolicies_Create.json"
            }
          }
        }
      },
      "patch": {
        "parameters": [
          [
            "-",
            {
              "name": "body",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/snapshotPolicyPatch"
              }
            }
          ],
          [
            " "
          ],
          [
            " "
          ],
          [
            "+",
            {
              "name": "body",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/SnapshotPolicyPatch"
              }
            }
          ]
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": {
                "__old": "#/definitions/snapshotPolicy",
                "__new": "#/definitions/SnapshotPolicy"
              }
            }
          },
          "202": {
            "schema": {
              "$ref": {
                "__old": "#/definitions/snapshotPolicy",
                "__new": "#/definitions/SnapshotPolicy"
              }
            }
          }
        },
        "x-ms-examples": {
          "SnapshotPolicies_Update": {
            "$ref": {
              "__old": "examples/SnapshotPolicies_Update.json",
              "__new": "./examples/SnapshotPolicies_Update.json"
            }
          }
        }
      },
      "delete": {
        "x-ms-examples": {
          "SnapshotPolicies_Delete": {
            "$ref": {
              "__old": "examples/SnapshotPolicies_Delete.json",
              "__new": "./examples/SnapshotPolicies_Delete.json"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.NetApp/netAppAccounts/{accountName}/snapshotPolicies/{snapshotPolicyName}/volumes": {
      "get": {
        "responses": {
          "200": {
            "schema": {
              "$ref": {
                "__old": "#/definitions/snapshotPolicyVolumeList",
                "__new": "#/definitions/SnapshotPolicyVolumeList"
              }
            }
          }
        },
        "x-ms-examples": {
          "SnapshotPolicies_ListVolumes": {
            "$ref": {
              "__old": "examples/SnapshotPolicies_ListVolumes.json",
              "__new": "./examples/SnapshotPolicies_ListVolumes.json"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.NetApp/netAppAccounts/{accountName}/transitiontocmk": {
      "post": {
        "parameters": [
          [
            " "
          ],
          [
            "~",
            {
              "schema": {
                "$ref": {
                  "__old": "#/definitions/encryptionTransitionRequest",
                  "__new": "#/definitions/EncryptionTransitionRequest"
                }
              }
            }
          ]
        ],
        "x-ms-examples": {
          "Accounts_MigrateEncryptionKey": {
            "$ref": {
              "__old": "examples/Accounts_TransitionEncryptionKey.json",
              "__new": "./examples/Accounts_TransitionEncryptionKey.json"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.NetApp/netAppAccounts/{accountName}/volumeGroups": {
      "get": {
        "responses": {
          "200": {
            "schema": {
              "$ref": {
                "__old": "#/definitions/volumeGroupList",
                "__new": "#/definitions/VolumeGroupList"
              }
            }
          }
        },
        "x-ms-examples": {
          "VolumeGroups_List_Oracle": {
            "$ref": {
              "__old": "examples/VolumeGroups_List_Oracle.json",
              "__new": "./examples/VolumeGroups_List_Oracle.json"
            }
          },
          "VolumeGroups_List_SapHana": {
            "$ref": {
              "__old": "examples/VolumeGroups_List_SapHana.json",
              "__new": "./examples/VolumeGroups_List_SapHana.json"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.NetApp/netAppAccounts/{accountName}/volumeGroups/{volumeGroupName}": {
      "get": {
        "responses": {
          "200": {
            "schema": {
              "$ref": {
                "__old": "#/definitions/volumeGroupDetails",
                "__new": "#/definitions/VolumeGroupDetails"
              }
            }
          }
        },
        "x-ms-examples": {
          "VolumeGroups_Get_Oracle": {
            "$ref": {
              "__old": "examples/VolumeGroups_Get_Oracle.json",
              "__new": "./examples/VolumeGroups_Get_Oracle.json"
            }
          },
          "VolumeGroups_Get_SapHana": {
            "$ref": {
              "__old": "examples/VolumeGroups_Get_SapHana.json",
              "__new": "./examples/VolumeGroups_Get_SapHana.json"
            }
          }
        }
      },
      "put": {
        "parameters": [
          [
            "-",
            {
              "name": "body",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/volumeGroupDetails"
              }
            }
          ],
          [
            " "
          ],
          [
            " "
          ],
          [
            "+",
            {
              "name": "body",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/VolumeGroupDetails"
              }
            }
          ]
        ],
        "responses": {
          "201": {
            "schema": {
              "$ref": {
                "__old": "#/definitions/volumeGroupDetails",
                "__new": "#/definitions/VolumeGroupDetails"
              }
            }
          }
        },
        "x-ms-examples": {
          "VolumeGroups_Create_Oracle": {
            "$ref": {
              "__old": "examples/VolumeGroups_Create_Oracle.json",
              "__new": "./examples/VolumeGroups_Create_Oracle.json"
            }
          },
          "VolumeGroups_Create_SapHana": {
            "$ref": {
              "__old": "examples/VolumeGroups_Create_SapHana.json",
              "__new": "./examples/VolumeGroups_Create_SapHana.json"
            }
          }
        }
      },
      "delete": {
        "x-ms-examples": {
          "VolumeGroups_Delete": {
            "$ref": {
              "__old": "examples/VolumeGroups_Delete.json",
              "__new": "./examples/VolumeGroups_Delete.json"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "accountEncryption__deleted": {
      "type": "object",
      "properties": {
        "keySource": {
          "type": "string",
          "default": "Microsoft.NetApp",
          "enum": [
            "Microsoft.NetApp",
            "Microsoft.KeyVault"
          ],
          "x-ms-enum": {
            "name": "KeySource",
            "modelAsString": true
          }
        },
        "keyVaultProperties": {
          "$ref": "#/definitions/KeyVaultProperties"
        },
        "identity": {
          "$ref": "#/definitions/EncryptionIdentity"
        }
      }
    },
    "accountProperties__deleted": {
      "type": "object",
      "properties": {
        "provisioningState": {
          "type": "string",
          "readOnly": true
        },
        "activeDirectories": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/activeDirectory"
          },
          "x-ms-identifiers": [
            "activeDirectoryId"
          ]
        },
        "encryption": {
          "$ref": "#/definitions/accountEncryption"
        },
        "disableShowmount": {
          "type": "boolean",
          "x-nullable": true,
          "readOnly": true
        },
        "nfsV4IDDomain": {
          "type": "string",
          "maxLength": 255,
          "pattern": "^[a-zA-Z0-9][a-zA-Z0-9.-]{0,253}[a-zA-Z0-9]$",
          "x-nullable": true,
          "example": "defaultv4iddomain.com"
        },
        "multiAdStatus": {
          "type": "string",
          "title": "multiAdStatus",
          "enum": [
            "Disabled",
            "Enabled"
          ],
          "x-ms-enum": {
            "name": "MultiAdStatus",
            "modelAsString": true
          },
          "readOnly": true,
          "example": "Enabled"
        }
      }
    },
    "activeDirectory__deleted": {
      "type": "object",
      "properties": {
        "activeDirectoryId": {
          "type": "string",
          "x-nullable": true
        },
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string",
          "maxLength": 64,
          "x-ms-secret": true
        },
        "domain": {
          "type": "string"
        },
        "dns": {
          "type": "string",
          "pattern": "^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)((, ?)(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?))*$",
          "example": "101.102.103.104,101.102.103.105"
        },
        "status": {
          "type": "string",
          "enum": [
            "Created",
            "Updating",
            "InUse",
            "Deleted",
            "Error"
          ],
          "x-ms-enum": {
            "name": "ActiveDirectoryStatus",
            "modelAsString": true
          },
          "readOnly": true
        },
        "statusDetails": {
          "type": "string",
          "readOnly": true
        },
        "smbServerName": {
          "type": "string"
        },
        "organizationalUnit": {
          "type": "string",
          "default": "CN=Computers"
        },
        "site": {
          "type": "string"
        },
        "backupOperators": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255
          },
          "example": [
            "user1",
            "user2"
          ]
        },
        "administrators": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255
          },
          "example": [
            "user1",
            "user2"
          ]
        },
        "kdcIP": {
          "type": "string",
          "pattern": "^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$",
          "example": "101.102.103.104"
        },
        "adName": {
          "type": "string",
          "minLength": 1,
          "maxLength": 64,
          "example": "ADServerName"
        },
        "serverRootCACertificate": {
          "type": "string",
          "minLength": 1,
          "maxLength": 10240,
          "example": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURuVENDQW9XZ0F3SUJBZ0lRR3FXdnRxeHBvSTFJV3Z4VGdJbElWREFOQmdrcWhraUc5dzBCQVFzRkFEQlYKTVJNd0VRWUtDWkltaVpQeUxHUUJHUllEWTI5dE1SY3dGUVlLQ1pJbWlaUHlMR1FCR1JZSGFHRnlhV3R5WWpFbApNQ01HQTFVRUF4TWNhR0Z5YVd0eVlpMVhTVTR0TWtKUFZrRkZTMEkwTkVJdFEwRXRNakFlRncweU1EQTFNRFV3Ck56TTVORGxhRncweU1EQTFNRFl3TnpRNU5EaGFNRlV4RXpBUkJnb0praWFKay9Jc1pBRVpGZ05qYjIweEZ6QVYKQmdvSmtpYUprL0lzWkFFWkZnZG9ZWEpwYTNKaU1TVXdJd1lEVlFRREV4eG9ZWEpwYTNKaUxWZEpUaTB5UWs5VwpRVVZMUWpRMFFpMURRUzB5TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUFqMHByCnhaaXpNaDBqYnRwN1ZOc0JrRVJ2MVpZT0MzMEtqaGRWdEExRm1MeFM2cXlycmpMZUdXOXRSd2ZnUkR0eVBodTIKZVJTcVpTUjF6Z1hZR0s0Nys3Y3F0YnB2UElOektCb0dOWERIVTNxVWlleXJWSjFDVzRKNjJodUdrbUV1VVVkMApKMXBxNTVxbjk1SmRUbWh1dmZlTUxxeHB5c01nbGVnY281ZFhoN0hsQkhwaTNKMFN4ZnhVWmxKMVZiOFJZVEZhCkJiMGFlTVZaRzRKeVREaktiMlR1TmFXOG1aUE5vOFBMRDRocjdndFNZUEQvQ1dVVGV5QlpoZC9LTzNPczlWVEIKYmpLUGtWd0J2WEs2SlFMSGprNFBHS3VYZDhaWVFyajBtOWNIZDNmcWNYTXlQUnQ2TlJ4ak0yMTUxckFzSkVhNgpWZC9ta056akpXalBrT2VZUVFJREFRQUJvMmt3WnpBVEJna3JCZ0VFQVlJM0ZBSUVCaDRFQUVNQVFUQU9CZ05WCkhROEJBZjhFQkFNQ0FZWXdEd1lEVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVVDVEc2ODJSay9kMysKWGtHa0VMakRFMjI4ZjNnd0VBWUpLd1lCQkFHQ054VUJCQU1DQVFBd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQgpBR1RjTTNnWExIU05wS014RHEvUFpZbWZCMmNlN3VhMmxxbXpzZSt4QmthSTE0WXdzZE5ZQjZBVTNFWDM3QWpZCjd3bm9xQzY1N0U2RVhTODVDckoyNXJNTHo4OEtONGI3cUg5RUowSS9XVHg5YTdUT0ZENENWQThuL0xwNGh1Ym4KNlBFalY5NFlZWXBXTG1hTkkvbGFReWsxSHVJbDFSTCttVDFnSWQ4ZWZXZ1UvNmlVVEw3eGMrdjkyNHBuTHhISwpOSnNTV3c0NFk5a0R5SU9KOXFjWUlBN1lhTkxPZTRjSysvQlRvdDh0dVVKT1hHLzdBRmtxR2EyQVA4MmFZOStKCnkwSmU2OG5nTHJ1dVU4VHpneVpqdkFHcTRrVEVOdWFoaFdHVC9KWkEzOXhSNUV4MmNMUUplcE5NdnlZbUZ3Z1UKME8zYlA0OWNBVFVCMXoyQ3Y5aTRQbVk9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
          "x-ms-secret": true
        },
        "aesEncryption": {
          "type": "boolean"
        },
        "ldapSigning": {
          "type": "boolean"
        },
        "securityOperators": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255
          },
          "example": [
            "user1",
            "user2"
          ]
        },
        "ldapOverTLS": {
          "type": "boolean"
        },
        "allowLocalNfsUsersWithLdap": {
          "type": "boolean"
        },
        "encryptDCConnections": {
          "type": "boolean"
        },
        "ldapSearchScope": {
          "$ref": "#/definitions/ldapSearchScopeOpt"
        },
        "preferredServersForLdapClient": {
          "type": "string",
          "maxLength": 32,
          "pattern": "^((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)((, ?)(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?))?)?$",
          "example": "101.102.103.104, 101.102.103.105"
        }
      }
    },
    "authorizeRequest__deleted": {
      "type": "object",
      "properties": {
        "remoteVolumeResourceId": {
          "type": "string"
        }
      }
    },
    "backup__deleted": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/backupProperties",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "backupPatch__deleted": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/backupPatchProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "backupPatchProperties__deleted": {
      "type": "object",
      "properties": {
        "label": {
          "type": "string"
        }
      }
    },
    "backupPoliciesList__deleted": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/backupPolicy"
          }
        }
      }
    },
    "backupPolicy__deleted": {
      "type": "object",
      "properties": {
        "etag": {
          "type": "string",
          "readOnly": true
        },
        "properties": {
          "$ref": "#/definitions/backupPolicyProperties",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "location",
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "backupPolicyPatch__deleted": {
      "type": "object",
      "properties": {
        "location": {
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "id": {
          "type": "string",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "readOnly": true
        },
        "tags": {
          "$ref": "#/definitions/resourceTags"
        },
        "properties": {
          "$ref": "#/definitions/backupPolicyProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "backupPolicyProperties__deleted": {
      "type": "object",
      "properties": {
        "backupPolicyId": {
          "type": "string",
          "readOnly": true
        },
        "provisioningState": {
          "type": "string",
          "readOnly": true
        },
        "dailyBackupsToKeep": {
          "type": "integer",
          "format": "int32"
        },
        "weeklyBackupsToKeep": {
          "type": "integer",
          "format": "int32"
        },
        "monthlyBackupsToKeep": {
          "type": "integer",
          "format": "int32"
        },
        "volumesAssigned": {
          "type": "integer",
          "format": "int32",
          "readOnly": true
        },
        "enabled": {
          "type": "boolean"
        },
        "volumeBackups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/volumeBackups"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "volumeName"
          ]
        }
      }
    },
    "backupProperties__deleted": {
      "type": "object",
      "properties": {
        "backupId": {
          "type": "string",
          "title": "backupId",
          "minLength": 36,
          "maxLength": 36,
          "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
          "readOnly": true,
          "example": "9760acf5-4638-11e7-9bdb-020073ca3333"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time",
          "title": "creationDate",
          "readOnly": true,
          "example": "2017-08-15 13:23:33"
        },
        "snapshotCreationDate": {
          "type": "string",
          "format": "date-time",
          "title": "snapshotCreationDate",
          "x-nullable": true,
          "readOnly": true,
          "example": "2018-11-29T20:32:50.459Z"
        },
        "completionDate": {
          "type": "string",
          "format": "date-time",
          "title": "completionDate",
          "x-nullable": true,
          "readOnly": true,
          "example": "2018-11-29T20:32:50.459Z"
        },
        "provisioningState": {
          "type": "string",
          "readOnly": true
        },
        "size": {
          "type": "integer",
          "format": "int64",
          "readOnly": true
        },
        "label": {
          "type": "string"
        },
        "backupType": {
          "type": "string",
          "title": "backupType",
          "enum": [
            "Manual",
            "Scheduled"
          ],
          "x-ms-enum": {
            "name": "BackupType",
            "modelAsString": true
          },
          "readOnly": true,
          "example": "Manual"
        },
        "failureReason": {
          "type": "string",
          "readOnly": true
        },
        "volumeResourceId": {
          "type": "string",
          "format": "arm-id",
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.NetApp/netAppAccounts/capacityPools/volumes"
              }
            ]
          }
        },
        "useExistingSnapshot": {
          "type": "boolean",
          "default": false,
          "example": true,
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "snapshotName": {
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "backupPolicyResourceId": {
          "type": "string",
          "format": "arm-id",
          "readOnly": true,
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.NetApp/netAppAccounts/backupPolicies"
              }
            ]
          }
        },
        "isLargeVolume": {
          "type": "boolean",
          "readOnly": true,
          "example": false
        }
      },
      "required": [
        "volumeResourceId"
      ]
    },
    "backupRestoreFiles__deleted": {
      "type": "object",
      "properties": {
        "fileList": {
          "type": "array",
          "minItems": 1,
          "maxItems": 8,
          "items": {
            "type": "string",
            "minLength": 1,
            "maxLength": 1024
          },
          "example": [
            "/dir1/customer1.db",
            "/dir1/customer2.db"
          ]
        },
        "restoreFilePath": {
          "type": "string",
          "pattern": "^\\/.*$",
          "example": "/AVSdataStore"
        },
        "destinationVolumeId": {
          "type": "string",
          "example": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myRG/providers/Microsoft.NetApp/netAppAccounts/account1/capacityPools/pool1/volumes/volume1"
        }
      },
      "required": [
        "destinationVolumeId",
        "fileList"
      ]
    },
    "backupStatus__deleted": {
      "type": "object",
      "properties": {
        "healthy": {
          "type": "boolean",
          "readOnly": true
        },
        "relationshipStatus": {
          "type": "string",
          "enum": [
            "Idle",
            "Transferring",
            "Failed",
            "Unknown"
          ],
          "x-ms-enum": {
            "name": "RelationshipStatus",
            "modelAsString": true
          },
          "readOnly": true
        },
        "mirrorState": {
          "type": "string",
          "enum": [
            "Uninitialized",
            "Mirrored",
            "Broken"
          ],
          "x-ms-enum": {
            "name": "MirrorState",
            "modelAsString": true
          },
          "readOnly": true
        },
        "unhealthyReason": {
          "type": "string",
          "readOnly": true
        },
        "errorMessage": {
          "type": "string",
          "readOnly": true
        },
        "lastTransferSize": {
          "type": "integer",
          "format": "int64",
          "readOnly": true
        },
        "lastTransferType": {
          "type": "string",
          "readOnly": true
        },
        "totalTransferBytes": {
          "type": "integer",
          "format": "int64",
          "readOnly": true
        },
        "transferProgressBytes": {
          "type": "integer",
          "format": "int64",
          "readOnly": true
        }
      }
    },
    "backupVault__deleted": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/backupVaultProperties",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "location"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "backupVaultPatch__deleted": {
      "type": "object",
      "properties": {
        "tags": {
          "$ref": "#/definitions/resourceTags"
        }
      }
    },
    "backupVaultProperties__deleted": {
      "type": "object",
      "properties": {
        "provisioningState": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "backupVaultsList__deleted": {
      "type": "object",
      "description": "[Placeholder] Discription for page model",
      "properties": {
        "value": {
          "type": "array",
          "description": "[Placeholder] Discription for value property",
          "items": {
            "$ref": "#/definitions/backupVault"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "[Placeholder] Discription for nextLink property"
        }
      }
    },
    "backupsList__deleted": {
      "type": "object",
      "description": "[Placeholder] Discription for page model",
      "properties": {
        "value": {
          "type": "array",
          "description": "[Placeholder] Discription for value property",
          "items": {
            "$ref": "#/definitions/backup"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "[Placeholder] Discription for nextLink property"
        }
      }
    },
    "backupsMigrationRequest__deleted": {
      "type": "object",
      "properties": {
        "backupVaultId": {
          "type": "string",
          "format": "arm-id",
          "example": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myRG/providers/Microsoft.NetApp/netAppAccounts/account1/backupVaults/backupVault1",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.NetApp/netAppAccounts/backupVaults"
              }
            ]
          }
        }
      },
      "required": [
        "backupVaultId"
      ]
    },
    "breakFileLocksRequest__deleted": {
      "type": "object",
      "properties": {
        "clientIp": {
          "type": "string",
          "pattern": "^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$",
          "example": "101.102.103.104"
        },
        "confirmRunningDisruptiveOperation": {
          "type": "boolean",
          "default": false
        }
      }
    },
    "breakReplicationRequest__deleted": {
      "type": "object",
      "properties": {
        "forceBreakReplication": {
          "type": "boolean"
        }
      }
    },
    "capacityPool__deleted": {
      "type": "object",
      "properties": {
        "etag": {
          "type": "string",
          "readOnly": true
        },
        "properties": {
          "$ref": "#/definitions/poolProperties",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "location",
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "capacityPoolList__deleted": {
      "type": "object",
      "description": "[Placeholder] Discription for page model",
      "properties": {
        "value": {
          "type": "array",
          "description": "[Placeholder] Discription for value property",
          "items": {
            "$ref": "#/definitions/capacityPool"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "[Placeholder] Discription for nextLink property"
        }
      }
    },
    "capacityPoolPatch__deleted": {
      "type": "object",
      "properties": {
        "location": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "readOnly": true
        },
        "tags": {
          "$ref": "#/definitions/resourceTags"
        },
        "properties": {
          "$ref": "#/definitions/poolPatchProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "changeKeyVault__deleted": {
      "type": "object",
      "properties": {
        "keyVaultUri": {
          "type": "string",
          "format": "uri",
          "title": "keyVaultUri",
          "example": "https://my-key-vault.managedhsm.azure.net"
        },
        "keyName": {
          "type": "string",
          "title": "keyName",
          "example": "rsaKeyName"
        },
        "keyVaultResourceId": {
          "type": "string",
          "format": "arm-id",
          "title": "keyVaultResourceId",
          "example": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myRG/providers/Microsoft.KeyVault/managedHSMs/my-hsm",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.KeyVault/vaults"
              }
            ]
          }
        },
        "keyVaultPrivateEndpoints": {
          "type": "array",
          "title": "keyVaultPrivateEndpoints",
          "items": {
            "$ref": "#/definitions/keyVaultPrivateEndpoint"
          },
          "x-ms-identifiers": [
            "virtualNetworkId"
          ]
        }
      },
      "required": [
        "keyName",
        "keyVaultPrivateEndpoints",
        "keyVaultUri"
      ]
    },
    "cloudError__deleted": {
      "type": "object",
      "properties": {
        "error": {
          "$ref": "#/definitions/cloudErrorBody"
        }
      },
      "x-ms-external": true
    },
    "cloudErrorBody__deleted": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      },
      "x-ms-external": true
    },
    "clusterPeerCommandResponse__deleted": {
      "type": "object",
      "properties": {
        "peerAcceptCommand": {
          "type": "string"
        }
      }
    },
    "dailySchedule__deleted": {
      "type": "object",
      "properties": {
        "snapshotsToKeep": {
          "type": "integer",
          "format": "int32"
        },
        "hour": {
          "type": "integer",
          "format": "int32",
          "example": 11
        },
        "minute": {
          "type": "integer",
          "format": "int32",
          "example": 30
        },
        "usedBytes": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "destinationReplication__deleted": {
      "type": "object",
      "properties": {
        "resourceId": {
          "type": "string",
          "format": "arm-id",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.NetApp/netAppAccounts/capacityPools/volumes"
              }
            ]
          }
        },
        "replicationType": {
          "type": "string",
          "enum": [
            "CrossRegionReplication",
            "CrossZoneReplication"
          ],
          "x-ms-enum": {
            "name": "ReplicationType",
            "modelAsString": true
          }
        },
        "region": {
          "type": "string"
        },
        "zone": {
          "type": "string"
        }
      }
    },
    "encryptionTransitionRequest__deleted": {
      "type": "object",
      "properties": {
        "virtualNetworkId": {
          "type": "string",
          "format": "arm-id",
          "title": "virtualNetworkId",
          "example": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myRG/providers/Microsoft.Network/virtualNetworks/vnet1",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Network/virtualNetworks"
              }
            ]
          }
        },
        "privateEndpointId": {
          "type": "string",
          "format": "arm-id",
          "title": "privateEndpointId",
          "example": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myRG/providers/Microsoft.Network/privateEndpoints/privateIP1",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Network/privateEndpoints"
              }
            ]
          }
        }
      },
      "required": [
        "privateEndpointId",
        "virtualNetworkId"
      ]
    },
    "exportPolicyRule__deleted": {
      "type": "object",
      "properties": {
        "ruleIndex": {
          "type": "integer",
          "format": "int32"
        },
        "unixReadOnly": {
          "type": "boolean"
        },
        "unixReadWrite": {
          "type": "boolean"
        },
        "kerberos5ReadOnly": {
          "type": "boolean",
          "default": false,
          "example": false
        },
        "kerberos5ReadWrite": {
          "type": "boolean",
          "default": false,
          "example": false
        },
        "kerberos5iReadOnly": {
          "type": "boolean",
          "default": false,
          "example": false
        },
        "kerberos5iReadWrite": {
          "type": "boolean",
          "default": false,
          "example": false
        },
        "kerberos5pReadOnly": {
          "type": "boolean",
          "default": false,
          "example": false
        },
        "kerberos5pReadWrite": {
          "type": "boolean",
          "default": false,
          "example": false
        },
        "cifs": {
          "type": "boolean"
        },
        "nfsv3": {
          "type": "boolean"
        },
        "nfsv41": {
          "type": "boolean"
        },
        "allowedClients": {
          "type": "string"
        },
        "hasRootAccess": {
          "type": "boolean",
          "default": true,
          "example": true
        },
        "chownMode": {
          "type": "string",
          "default": "Restricted",
          "enum": [
            "Restricted",
            "Unrestricted"
          ],
          "x-ms-enum": {
            "name": "ChownMode",
            "modelAsString": true
          }
        }
      }
    },
    "getGroupIdListForLDAPUserRequest__deleted": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255
        }
      },
      "required": [
        "username"
      ]
    },
    "getGroupIdListForLDAPUserResponse__deleted": {
      "type": "object",
      "properties": {
        "groupIdsForLdapUser": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "example": [
            "123",
            "224"
          ]
        }
      }
    },
    "getKeyVaultStatusResponse__deleted": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/getKeyVaultStatusResponseProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "getKeyVaultStatusResponseProperties__deleted": {
      "type": "object",
      "properties": {
        "keyVaultUri": {
          "type": "string",
          "format": "uri",
          "title": "keyVaultUri",
          "example": "https://my-key-vault.managedhsm.azure.net"
        },
        "keyName": {
          "type": "string",
          "title": "keyName",
          "example": "rsaKeyName"
        },
        "keyVaultResourceId": {
          "type": "string",
          "format": "arm-id",
          "title": "keyVaultResourceId",
          "example": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myRG/providers/Microsoft.KeyVault/managedHSMs/my-hsm",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.KeyVault/vaults"
              }
            ]
          }
        },
        "keyVaultPrivateEndpoints": {
          "type": "array",
          "title": "keyVaultPrivateEndpoints",
          "items": {
            "$ref": "#/definitions/keyVaultPrivateEndpoint"
          },
          "x-ms-identifiers": [
            "virtualNetworkId"
          ]
        }
      }
    },
    "hourlySchedule__deleted": {
      "type": "object",
      "properties": {
        "snapshotsToKeep": {
          "type": "integer",
          "format": "int32"
        },
        "minute": {
          "type": "integer",
          "format": "int32",
          "example": 30
        },
        "usedBytes": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ipAddress__deleted": {
      "type": "string",
      "title": "ipAddress",
      "readOnly": true,
      "example": "1.2.3.4"
    },
    "keyVaultPrivateEndpoint__deleted": {
      "type": "object",
      "title": "keyVaultPrivateEndpoint",
      "properties": {
        "virtualNetworkId": {
          "type": "string",
          "format": "arm-id",
          "title": "virtualNetworkId",
          "example": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myRG/providers/Microsoft.Network/virtualNetworks/vnet1",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Network/virtualNetworks"
              }
            ]
          }
        },
        "privateEndpointId": {
          "type": "string",
          "format": "arm-id",
          "title": "privateEndpointId",
          "example": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myRG/providers/Microsoft.Network/privateEndpoints/privateIP1",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Network/privateEndpoints"
              }
            ]
          }
        }
      }
    },
    "ldapSearchScopeOpt__deleted": {
      "type": "object",
      "properties": {
        "userDN": {
          "type": "string",
          "maxLength": 255,
          "example": "OU=fin,OU=hr,dc=domain,dc=com"
        },
        "groupDN": {
          "type": "string",
          "maxLength": 255,
          "example": "OU=fin,OU=hr,dc=domain,dc=com"
        },
        "groupMembershipFilter": {
          "type": "string",
          "maxLength": 255,
          "example": "cn=*99"
        }
      }
    },
    "listReplications__deleted": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/replication"
          }
        }
      }
    },
    "monthlySchedule__deleted": {
      "type": "object",
      "properties": {
        "snapshotsToKeep": {
          "type": "integer",
          "format": "int32"
        },
        "daysOfMonth": {
          "type": "string",
          "example": "1,11,21"
        },
        "hour": {
          "type": "integer",
          "format": "int32",
          "example": 11
        },
        "minute": {
          "type": "integer",
          "format": "int32",
          "example": 30
        },
        "usedBytes": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "mountTarget__deleted": {
      "type": "object",
      "properties": {
        "location": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "readOnly": true
        },
        "tags": {
          "$ref": "#/definitions/resourceTags",
          "x-ms-client-flatten": true
        },
        "properties": {
          "$ref": "#/definitions/mountTargetProperties",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "location",
        "properties"
      ]
    },
    "mountTargetProperties__deleted": {
      "type": "object",
      "properties": {
        "mountTargetId": {
          "type": "string",
          "title": "mountTargetId",
          "minLength": 36,
          "maxLength": 36,
          "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
          "readOnly": true,
          "example": "9760acf5-4638-11e7-9bdb-020073ca3333"
        },
        "fileSystemId": {
          "type": "string",
          "title": "fileSystemId",
          "minLength": 36,
          "maxLength": 36,
          "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
          "example": "9760acf5-4638-11e7-9bdb-020073ca3333"
        },
        "ipAddress": {
          "type": "string",
          "title": "ipAddress",
          "readOnly": true,
          "example": "1.2.3.4"
        },
        "smbServerFqdn": {
          "type": "string",
          "title": "smbServerFQDN",
          "example": "fullyqualified.domainname.com"
        }
      },
      "required": [
        "fileSystemId"
      ]
    },
    "netAppAccount__deleted": {
      "type": "object",
      "properties": {
        "etag": {
          "type": "string",
          "readOnly": true
        },
        "properties": {
          "$ref": "#/definitions/accountProperties",
          "x-ms-client-flatten": true
        },
        "identity": {
          "$ref": "../../../../../common-types/resource-management/v6/managedidentity.json#/definitions/ManagedServiceIdentity"
        }
      },
      "required": [
        "location"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "netAppAccountList__deleted": {
      "type": "object",
      "description": "[Placeholder] Discription for page model",
      "properties": {
        "value": {
          "type": "array",
          "description": "[Placeholder] Discription for value property",
          "items": {
            "$ref": "#/definitions/netAppAccount"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "[Placeholder] Discription for nextLink property"
        }
      }
    },
    "netAppAccountPatch__deleted": {
      "type": "object",
      "properties": {
        "location": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "readOnly": true
        },
        "tags": {
          "$ref": "#/definitions/resourceTags"
        },
        "properties": {
          "$ref": "#/definitions/accountProperties",
          "x-ms-client-flatten": true
        },
        "identity": {
          "$ref": "../../../../../common-types/resource-management/v6/managedidentity.json#/definitions/ManagedServiceIdentity"
        }
      }
    },
    "networkSiblingSet__deleted": {
      "type": "object",
      "title": "Network sibling set",
      "properties": {
        "networkSiblingSetId": {
          "type": "string",
          "title": "Network Sibling Set ID",
          "minLength": 36,
          "maxLength": 36,
          "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
          "example": "9760acf5-4638-11e7-9bdb-020073ca3333"
        },
        "subnetId": {
          "type": "string",
          "format": "arm-id",
          "title": "Subnet resource Id",
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Network/virtualNetworks/subnets"
              }
            ]
          }
        },
        "networkSiblingSetStateId": {
          "type": "string",
          "title": "Network sibling set state Id",
          "example": "12345_44420.8001578125"
        },
        "networkFeatures": {
          "type": "string",
          "title": "Network features",
          "default": "Basic",
          "enum": [
            "Basic",
            "Standard",
            "Basic_Standard",
            "Standard_Basic"
          ],
          "x-ms-enum": {
            "name": "NetworkFeatures",
            "modelAsString": true
          },
          "example": "Standard"
        },
        "provisioningState": {
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Updating"
          ],
          "x-ms-enum": {
            "name": "NetworkSiblingSetProvisioningState",
            "modelAsString": true
          },
          "readOnly": true
        },
        "nicInfoList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/nicInfo"
          }
        }
      }
    },
    "networkSiblingSetId__deleted": {
      "type": "string",
      "title": "Network Sibling Set ID",
      "minLength": 36,
      "maxLength": 36,
      "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
      "example": "9760acf5-4638-11e7-9bdb-020073ca3333"
    },
    "networkSiblingSetStateId__deleted": {
      "type": "string",
      "title": "Network sibling set state Id",
      "example": "12345_44420.8001578125"
    },
    "nicInfo__deleted": {
      "type": "object",
      "title": "NIC information",
      "properties": {
        "ipAddress": {
          "type": "string",
          "title": "ipAddress",
          "readOnly": true,
          "example": "1.2.3.4"
        },
        "volumeResourceIds": {
          "$ref": "#/definitions/volumeResourceIds"
        }
      }
    },
    "peerClusterForVolumeMigrationRequest__deleted": {
      "type": "object",
      "properties": {
        "peerIpAddresses": {
          "type": "array",
          "minItems": 1,
          "items": {
            "type": "string"
          },
          "example": [
            "0.0.0.1",
            "0.0.0.2",
            "0.0.0.3",
            "0.0.0.4",
            "0.0.0.5",
            "0.0.0.6"
          ]
        }
      },
      "required": [
        "peerIpAddresses"
      ]
    },
    "placementKeyValuePairs__deleted": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "example": "key1"
        },
        "value": {
          "type": "string",
          "example": "value1"
        }
      },
      "required": [
        "key",
        "value"
      ]
    },
    "poolChangeRequest__deleted": {
      "type": "object",
      "properties": {
        "newPoolResourceId": {
          "type": "string"
        }
      },
      "required": [
        "newPoolResourceId"
      ]
    },
    "poolPatchProperties__deleted": {
      "type": "object",
      "properties": {
        "size": {
          "type": "integer",
          "format": "int64",
          "title": "size",
          "default": 4398046511104
        },
        "qosType": {
          "type": "string",
          "title": "qosType",
          "default": "Auto",
          "enum": [
            "Auto",
            "Manual"
          ],
          "x-ms-enum": {
            "name": "QosType",
            "modelAsString": true
          },
          "example": "Manual"
        },
        "coolAccess": {
          "type": "boolean",
          "example": false
        },
        "customThroughputMibps": {
          "type": "number",
          "title": "Maximum throughput in MiB/s that can be achieved by this pool and this will be accepted as input only for manual qosType pool with Flexible service level",
          "x-nullable": true,
          "example": 128
        }
      }
    },
    "poolProperties__deleted": {
      "type": "object",
      "properties": {
        "poolId": {
          "type": "string",
          "title": "poolId",
          "minLength": 36,
          "maxLength": 36,
          "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
          "readOnly": true,
          "example": "9760acf5-4638-11e7-9bdb-020073ca7778"
        },
        "size": {
          "type": "integer",
          "format": "int64",
          "title": "size",
          "default": 4398046511104
        },
        "serviceLevel": {
          "type": "string",
          "title": "serviceLevel",
          "default": "Premium",
          "enum": [
            "Standard",
            "Premium",
            "Ultra",
            "StandardZRS",
            "Flexible"
          ],
          "x-ms-enum": {
            "name": "ServiceLevel",
            "modelAsString": true
          }
        },
        "provisioningState": {
          "type": "string",
          "readOnly": true
        },
        "totalThroughputMibps": {
          "type": "number",
          "readOnly": true,
          "example": 164.221
        },
        "utilizedThroughputMibps": {
          "type": "number",
          "readOnly": true,
          "example": 164.221
        },
        "customThroughputMibps": {
          "type": "number",
          "title": "Maximum throughput in MiB/s that can be achieved by this pool and this will be accepted as input only for manual qosType pool with Flexible service level",
          "x-nullable": true,
          "example": 128
        },
        "qosType": {
          "type": "string",
          "title": "qosType",
          "default": "Auto",
          "enum": [
            "Auto",
            "Manual"
          ],
          "x-ms-enum": {
            "name": "QosType",
            "modelAsString": true
          },
          "example": "Manual"
        },
        "coolAccess": {
          "type": "boolean",
          "default": false,
          "example": false
        },
        "encryptionType": {
          "type": "string",
          "title": "encryptionType",
          "default": "Single",
          "enum": [
            "Single",
            "Double"
          ],
          "x-ms-enum": {
            "name": "EncryptionType",
            "modelAsString": true
          },
          "x-nullable": true,
          "example": "Single",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "required": [
        "serviceLevel",
        "size"
      ]
    },
    "reestablishReplicationRequest__deleted": {
      "type": "object",
      "properties": {
        "sourceVolumeId": {
          "type": "string"
        }
      }
    },
    "regionInfo__deleted": {
      "type": "object",
      "properties": {
        "storageToNetworkProximity": {
          "type": "string",
          "title": "Storage to Network Proximity",
          "enum": [
            "Default",
            "T1",
            "T2",
            "AcrossT2",
            "T1AndT2",
            "T1AndAcrossT2",
            "T2AndAcrossT2",
            "T1AndT2AndAcrossT2"
          ],
          "x-ms-enum": {
            "name": "RegionStorageToNetworkProximity",
            "modelAsString": true
          },
          "example": "T2"
        },
        "availabilityZoneMappings": {
          "type": "array",
          "title": "Logical availability zone mappings.",
          "items": {
            "type": "object",
            "properties": {
              "availabilityZone": {
                "type": "string",
                "description": "Logical availability zone.",
                "example": "1"
              },
              "isAvailable": {
                "type": "boolean",
                "description": "Available availability zone",
                "example": true
              }
            }
          },
          "x-ms-identifiers": [
            "availabilityZone"
          ]
        }
      }
    },
    "regionInfoResource__deleted": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/regionInfo",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "regionInfosList__deleted": {
      "type": "object",
      "description": "[Placeholder] Discription for page model",
      "properties": {
        "value": {
          "type": "array",
          "description": "[Placeholder] Discription for value property",
          "items": {
            "$ref": "#/definitions/regionInfoResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "[Placeholder] Discription for nextLink property"
        }
      }
    },
    "relocateVolumeRequest__deleted": {
      "type": "object",
      "properties": {
        "creationToken": {
          "type": "string"
        }
      }
    },
    "remotePath__deleted": {
      "type": "object",
      "properties": {
        "externalHostName": {
          "type": "string"
        },
        "serverName": {
          "type": "string"
        },
        "volumeName": {
          "type": "string"
        }
      },
      "required": [
        "externalHostName",
        "serverName",
        "volumeName"
      ]
    },
    "replication__deleted": {
      "type": "object",
      "properties": {
        "replicationId": {
          "type": "string",
          "minLength": 36,
          "maxLength": 36,
          "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
          "readOnly": true,
          "example": "5ee41ce4-8f44-4ecd-ad89-8c1e573fe3b8"
        },
        "endpointType": {
          "type": "string",
          "enum": [
            "src",
            "dst"
          ],
          "x-ms-enum": {
            "name": "EndpointType",
            "modelAsString": true
          }
        },
        "replicationSchedule": {
          "type": "string",
          "enum": [
            "_10minutely",
            "hourly",
            "daily"
          ],
          "x-ms-enum": {
            "name": "ReplicationSchedule",
            "modelAsString": true
          }
        },
        "remoteVolumeResourceId": {
          "type": "string"
        },
        "remoteVolumeRegion": {
          "type": "string"
        }
      },
      "required": [
        "remoteVolumeResourceId"
      ]
    },
    "replicationObject__deleted": {
      "type": "object",
      "properties": {
        "replicationId": {
          "type": "string",
          "readOnly": true
        },
        "endpointType": {
          "type": "string",
          "enum": [
            "src",
            "dst"
          ],
          "x-ms-enum": {
            "name": "EndpointType",
            "modelAsString": true
          },
          "readOnly": true
        },
        "replicationSchedule": {
          "type": "string",
          "enum": [
            "_10minutely",
            "hourly",
            "daily"
          ],
          "x-ms-enum": {
            "name": "ReplicationSchedule",
            "modelAsString": true
          }
        },
        "remoteVolumeResourceId": {
          "type": "string"
        },
        "remotePath": {
          "$ref": "#/definitions/remotePath",
          "type": "object",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "remoteVolumeRegion": {
          "type": "string"
        },
        "destinationReplications": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/destinationReplication"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "resourceId"
          ]
        }
      }
    },
    "replicationStatus__deleted": {
      "type": "object",
      "properties": {
        "healthy": {
          "type": "boolean"
        },
        "relationshipStatus": {
          "type": "string",
          "enum": [
            "Idle",
            "Transferring"
          ],
          "x-ms-enum": {
            "name": "RelationshipStatus",
            "modelAsString": true
          }
        },
        "mirrorState": {
          "type": "string",
          "enum": [
            "Uninitialized",
            "Mirrored",
            "Broken"
          ],
          "x-ms-enum": {
            "name": "MirrorState",
            "modelAsString": true
          }
        },
        "totalProgress": {
          "type": "string"
        },
        "errorMessage": {
          "type": "string"
        }
      }
    },
    "resourceIdentity__deleted": {
      "type": "object",
      "properties": {
        "principalId": {
          "type": "string",
          "readOnly": true
        },
        "tenantId": {
          "type": "string",
          "readOnly": true
        },
        "type": {
          "type": "string"
        }
      }
    },
    "resourceTags__deleted": {
      "type": "object",
      "additionalProperties": {
        "type": "string"
      }
    },
    "restoreStatus__deleted": {
      "type": "object",
      "properties": {
        "healthy": {
          "type": "boolean",
          "readOnly": true
        },
        "relationshipStatus": {
          "type": "string",
          "enum": [
            "Idle",
            "Transferring",
            "Failed",
            "Unknown"
          ],
          "x-ms-enum": {
            "name": "RelationshipStatus",
            "modelAsString": true
          },
          "readOnly": true
        },
        "mirrorState": {
          "type": "string",
          "enum": [
            "Uninitialized",
            "Mirrored",
            "Broken"
          ],
          "x-ms-enum": {
            "name": "MirrorState",
            "modelAsString": true
          },
          "readOnly": true
        },
        "unhealthyReason": {
          "type": "string",
          "readOnly": true
        },
        "errorMessage": {
          "type": "string",
          "readOnly": true
        },
        "totalTransferBytes": {
          "type": "integer",
          "format": "int64",
          "readOnly": true
        }
      }
    },
    "snapshot__deleted": {
      "type": "object",
      "properties": {
        "location": {
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "properties": {
          "$ref": "#/definitions/snapshotProperties",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "location"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "snapshotPatch__deleted": {
      "type": "object",
      "properties": {}
    },
    "snapshotPoliciesList__deleted": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/snapshotPolicy"
          }
        }
      }
    },
    "snapshotPolicy__deleted": {
      "type": "object",
      "properties": {
        "etag": {
          "type": "string",
          "readOnly": true
        },
        "properties": {
          "$ref": "#/definitions/snapshotPolicyProperties",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "location",
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "snapshotPolicyDetails__deleted": {
      "type": "object",
      "properties": {
        "location": {
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "id": {
          "type": "string",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "readOnly": true
        },
        "tags": {
          "$ref": "#/definitions/resourceTags"
        },
        "properties": {
          "$ref": "#/definitions/snapshotPolicyProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "snapshotPolicyPatch__deleted": {
      "type": "object",
      "properties": {
        "location": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "readOnly": true
        },
        "tags": {
          "$ref": "#/definitions/resourceTags"
        },
        "properties": {
          "$ref": "#/definitions/snapshotPolicyProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "snapshotPolicyProperties__deleted": {
      "type": "object",
      "properties": {
        "hourlySchedule": {
          "$ref": "#/definitions/hourlySchedule",
          "type": "object",
          "title": "hourlySchedule"
        },
        "dailySchedule": {
          "$ref": "#/definitions/dailySchedule",
          "type": "object",
          "title": "dailySchedule"
        },
        "weeklySchedule": {
          "$ref": "#/definitions/weeklySchedule",
          "type": "object",
          "title": "weeklySchedule"
        },
        "monthlySchedule": {
          "$ref": "#/definitions/monthlySchedule",
          "type": "object",
          "title": "monthlySchedule"
        },
        "enabled": {
          "type": "boolean"
        },
        "provisioningState": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "snapshotPolicyVolumeList__deleted": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/volume"
          }
        }
      }
    },
    "snapshotProperties__deleted": {
      "type": "object",
      "properties": {
        "snapshotId": {
          "type": "string",
          "title": "snapshotId",
          "minLength": 36,
          "maxLength": 36,
          "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
          "readOnly": true,
          "example": "9760acf5-4638-11e7-9bdb-020073ca3333"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "title": "name",
          "readOnly": true,
          "example": "2017-08-15 13:23:33"
        },
        "provisioningState": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "snapshotRestoreFiles__deleted": {
      "type": "object",
      "properties": {
        "filePaths": {
          "type": "array",
          "minItems": 1,
          "maxItems": 10,
          "items": {
            "type": "string",
            "minLength": 1,
            "maxLength": 1024
          },
          "example": [
            "/dir1/customer1.db",
            "/dir1/customer2.db"
          ]
        },
        "destinationPath": {
          "type": "string",
          "example": "/AVSdataStore"
        }
      },
      "required": [
        "filePaths"
      ]
    },
    "snapshotsList__deleted": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/snapshot"
          }
        }
      }
    },
    "subnetId__deleted": {
      "type": "string",
      "format": "arm-id",
      "title": "Subnet resource Id",
      "x-ms-mutability": [
        "read",
        "create"
      ],
      "x-ms-arm-id-details": {
        "allowedResources": [
          {
            "type": "Microsoft.Network/virtualNetworks/subnets"
          }
        ]
      }
    },
    "subvolumeInfo__deleted": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/subvolumeProperties",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "subvolumeModel__deleted": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "readOnly": true
        },
        "properties": {
          "$ref": "#/definitions/subvolumeModelProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "subvolumeModelProperties__deleted": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string",
          "title": "path",
          "example": "/subvolume1"
        },
        "parentPath": {
          "type": "string",
          "title": "parentpath",
          "example": "/parentPath"
        },
        "size": {
          "type": "integer",
          "format": "int64",
          "title": "size",
          "example": 5
        },
        "bytesUsed": {
          "type": "integer",
          "format": "int64",
          "title": "bytesUsed",
          "example": 5
        },
        "permissions": {
          "type": "string",
          "title": "permissions",
          "example": "777"
        },
        "creationTimeStamp": {
          "type": "string",
          "format": "date-time",
          "title": "creationTimeStamp",
          "example": "2017-08-15T13:23:33Z"
        },
        "accessedTimeStamp": {
          "type": "string",
          "format": "date-time",
          "title": "accessedTimeStamp",
          "example": "2017-08-15T13:23:33Z"
        },
        "modifiedTimeStamp": {
          "type": "string",
          "format": "date-time",
          "title": "modifiedTimeStamp",
          "example": "2017-08-15T13:23:33Z"
        },
        "changedTimeStamp": {
          "type": "string",
          "format": "date-time",
          "title": "changedTimeStamp",
          "example": "2017-08-15T13:23:33Z"
        },
        "provisioningState": {
          "type": "string",
          "example": "Available"
        }
      }
    },
    "subvolumePatchParams__deleted": {
      "type": "object",
      "properties": {
        "size": {
          "type": "integer",
          "format": "int64",
          "title": "size",
          "x-nullable": true,
          "example": 5
        },
        "path": {
          "type": "string",
          "title": "path",
          "example": "/pathToSubvolume"
        }
      }
    },
    "subvolumePatchRequest__deleted": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/subvolumePatchParams",
          "x-ms-client-flatten": true
        }
      }
    },
    "subvolumeProperties__deleted": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string",
          "title": "path",
          "example": "/subvolume1"
        },
        "size": {
          "type": "integer",
          "format": "int64",
          "title": "size",
          "x-nullable": true,
          "example": 5
        },
        "parentPath": {
          "type": "string",
          "title": "name",
          "x-nullable": true,
          "example": "/parentPath"
        },
        "provisioningState": {
          "type": "string",
          "readOnly": true,
          "example": "Available"
        }
      }
    },
    "subvolumesList__deleted": {
      "type": "object",
      "description": "[Placeholder] Discription for page model",
      "properties": {
        "value": {
          "type": "array",
          "description": "[Placeholder] Discription for value property",
          "items": {
            "$ref": "#/definitions/subvolumeInfo"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "[Placeholder] Discription for nextLink property"
        }
      }
    },
    "svmPeerCommandResponse__deleted": {
      "type": "object",
      "properties": {
        "svmPeeringCommand": {
          "type": "string"
        }
      }
    },
    "usageName__deleted": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string"
        },
        "localizedValue": {
          "type": "string"
        }
      },
      "readOnly": true
    },
    "usageProperties__deleted": {
      "type": "object",
      "properties": {
        "currentValue": {
          "type": "integer",
          "format": "int32",
          "readOnly": true
        },
        "limit": {
          "type": "integer",
          "format": "int32",
          "readOnly": true
        },
        "unit": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "volume__deleted": {
      "type": "object",
      "properties": {
        "etag": {
          "type": "string",
          "readOnly": true
        },
        "zones": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "example": "1"
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "properties": {
          "$ref": "#/definitions/volumeProperties",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "location",
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "volumeBackupProperties__deleted": {
      "type": "object",
      "properties": {
        "backupPolicyId": {
          "type": "string",
          "format": "arm-id",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.NetApp/netAppAccounts/backupPolicies"
              }
            ]
          }
        },
        "policyEnforced": {
          "type": "boolean"
        },
        "backupVaultId": {
          "type": "string",
          "format": "arm-id",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.NetApp/netAppAccounts/backupVaults"
              }
            ]
          }
        }
      }
    },
    "volumeBackups__deleted": {
      "type": "object",
      "properties": {
        "volumeName": {
          "type": "string"
        },
        "volumeResourceId": {
          "type": "string",
          "format": "arm-id",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.NetApp/netAppAccounts/capacityPools/volumes"
              }
            ]
          }
        },
        "backupsCount": {
          "type": "integer",
          "format": "int32"
        },
        "policyEnabled": {
          "type": "boolean"
        }
      },
      "readOnly": true
    },
    "volumeGroup__deleted": {
      "type": "object",
      "properties": {
        "location": {
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "id": {
          "type": "string",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "readOnly": true
        },
        "properties": {
          "$ref": "#/definitions/volumeGroupListProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "volumeGroupDetails__deleted": {
      "type": "object",
      "properties": {
        "location": {
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "id": {
          "type": "string",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "readOnly": true
        },
        "properties": {
          "$ref": "#/definitions/volumeGroupProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "volumeGroupList__deleted": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/volumeGroup"
          }
        }
      }
    },
    "volumeGroupListProperties__deleted": {
      "type": "object",
      "properties": {
        "provisioningState": {
          "type": "string",
          "readOnly": true,
          "example": "Available"
        },
        "groupMetaData": {
          "$ref": "#/definitions/volumeGroupMetaData",
          "type": "object",
          "title": "groupMetaData"
        }
      }
    },
    "volumeGroupMetaData__deleted": {
      "type": "object",
      "properties": {
        "groupDescription": {
          "type": "string",
          "example": "group description"
        },
        "applicationType": {
          "type": "string",
          "enum": [
            "SAP-HANA",
            "ORACLE"
          ],
          "x-ms-enum": {
            "name": "ApplicationType",
            "modelAsString": true
          },
          "example": "SAP-HANA"
        },
        "applicationIdentifier": {
          "type": "string",
          "example": "SH1"
        },
        "globalPlacementRules": {
          "type": "array",
          "title": "Global volume placement rules",
          "items": {
            "$ref": "#/definitions/placementKeyValuePairs"
          },
          "x-ms-identifiers": [
            "key"
          ]
        },
        "volumesCount": {
          "type": "integer",
          "format": "int64",
          "readOnly": true,
          "example": 5
        }
      }
    },
    "volumeGroupProperties__deleted": {
      "type": "object",
      "properties": {
        "provisioningState": {
          "type": "string",
          "readOnly": true,
          "example": "Available"
        },
        "groupMetaData": {
          "$ref": "#/definitions/volumeGroupMetaData",
          "type": "object",
          "title": "groupMetaData"
        },
        "volumes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/volumeGroupVolumeProperties"
          }
        }
      }
    },
    "volumeGroupVolumeProperties__deleted": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "readOnly": true
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "readOnly": true
        },
        "tags": {
          "$ref": "#/definitions/resourceTags"
        },
        "zones": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "example": "1"
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "properties": {
          "$ref": "#/definitions/volumeProperties",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "properties"
      ]
    },
    "volumeList__deleted": {
      "type": "object",
      "description": "[Placeholder] Discription for page model",
      "properties": {
        "value": {
          "type": "array",
          "description": "[Placeholder] Discription for value property",
          "items": {
            "$ref": "#/definitions/volume"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "[Placeholder] Discription for nextLink property"
        }
      }
    },
    "volumePatch__deleted": {
      "type": "object",
      "properties": {
        "location": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "readOnly": true
        },
        "tags": {
          "$ref": "#/definitions/resourceTags"
        },
        "properties": {
          "$ref": "#/definitions/volumePatchProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "volumePatchProperties__deleted": {
      "type": "object",
      "properties": {
        "serviceLevel": {
          "type": "string",
          "title": "serviceLevel",
          "default": "Premium",
          "enum": [
            "Standard",
            "Premium",
            "Ultra",
            "StandardZRS",
            "Flexible"
          ],
          "x-ms-enum": {
            "name": "ServiceLevel",
            "modelAsString": true
          }
        },
        "usageThreshold": {
          "type": "integer",
          "format": "int64",
          "title": "usageThreshold",
          "default": 107374182400,
          "minimum": 53687091200,
          "maximum": 2638827906662400,
          "example": 107374182400
        },
        "exportPolicy": {
          "type": "object",
          "title": "exportPolicy",
          "properties": {
            "rules": {
              "type": "array",
              "title": "Export policy rule",
              "description": "Export policy rule",
              "items": {
                "$ref": "#/definitions/exportPolicyRule"
              },
              "x-ms-identifiers": [
                "ruleIndex"
              ]
            }
          }
        },
        "protocolTypes": {
          "type": "array",
          "title": "protocolTypes",
          "items": {
            "type": "string"
          },
          "example": [
            "NFSv4.1"
          ]
        },
        "throughputMibps": {
          "type": "number",
          "title": "Maximum throughput in MiB/s that can be achieved by this volume and this will be accepted as input only for manual qosType volume",
          "example": 128.22
        },
        "dataProtection": {
          "type": "object",
          "title": "DataProtection",
          "properties": {
            "backup": {
              "$ref": "#/definitions/volumeBackupProperties",
              "type": "object",
              "title": "Backup",
              "description": "Backup Properties"
            },
            "snapshot": {
              "$ref": "#/definitions/volumeSnapshotProperties",
              "title": "Snapshot",
              "description": "Snapshot properties."
            }
          }
        },
        "isDefaultQuotaEnabled": {
          "type": "boolean",
          "default": false,
          "example": false
        },
        "defaultUserQuotaInKiBs": {
          "type": "integer",
          "format": "int64",
          "default": 0,
          "example": 4
        },
        "defaultGroupQuotaInKiBs": {
          "type": "integer",
          "format": "int64",
          "default": 0,
          "example": 4
        },
        "unixPermissions": {
          "type": "string",
          "minLength": 4,
          "maxLength": 4,
          "x-nullable": true,
          "example": "0770"
        },
        "coolAccess": {
          "type": "boolean",
          "example": false
        },
        "coolnessPeriod": {
          "type": "integer",
          "format": "int32",
          "minimum": 2,
          "maximum": 183,
          "example": 7
        },
        "coolAccessRetrievalPolicy": {
          "type": "string",
          "enum": [
            "Default",
            "OnRead",
            "Never"
          ],
          "x-ms-enum": {
            "name": "CoolAccessRetrievalPolicy",
            "modelAsString": true
          }
        },
        "coolAccessTieringPolicy": {
          "type": "string",
          "enum": [
            "Auto",
            "SnapshotOnly"
          ],
          "x-ms-enum": {
            "name": "CoolAccessTieringPolicy",
            "modelAsString": true
          }
        },
        "snapshotDirectoryVisible": {
          "type": "boolean"
        },
        "smbAccessBasedEnumeration": {
          "type": "string",
          "title": "smbAccessBasedEnumeration",
          "enum": [
            "Disabled",
            "Enabled"
          ],
          "x-ms-enum": {
            "name": "SmbAccessBasedEnumeration",
            "modelAsString": true
          },
          "x-nullable": true,
          "example": "Enabled"
        },
        "smbNonBrowsable": {
          "type": "string",
          "title": "smbNonBrowsable",
          "enum": [
            "Disabled",
            "Enabled"
          ],
          "x-ms-enum": {
            "name": "SmbNonBrowsable",
            "modelAsString": true
          },
          "example": "Enabled"
        }
      }
    },
    "volumeProperties__deleted": {
      "type": "object",
      "properties": {
        "fileSystemId": {
          "type": "string",
          "title": "FileSystem ID",
          "minLength": 36,
          "maxLength": 36,
          "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
          "readOnly": true,
          "example": "9760acf5-4638-11e7-9bdb-020073ca7778"
        },
        "creationToken": {
          "type": "string",
          "title": "Creation Token or File Path",
          "minLength": 1,
          "maxLength": 80,
          "pattern": "^[a-zA-Z][a-zA-Z0-9\\-]{0,79}$",
          "example": "some-amazing-filepath",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "serviceLevel": {
          "type": "string",
          "title": "serviceLevel",
          "default": "Premium",
          "enum": [
            "Standard",
            "Premium",
            "Ultra",
            "StandardZRS",
            "Flexible"
          ],
          "x-ms-enum": {
            "name": "ServiceLevel",
            "modelAsString": true
          }
        },
        "usageThreshold": {
          "type": "integer",
          "format": "int64",
          "title": "usageThreshold",
          "default": 107374182400,
          "minimum": 53687091200,
          "maximum": 2638827906662400,
          "example": 107374182400
        },
        "exportPolicy": {
          "type": "object",
          "title": "exportPolicy",
          "properties": {
            "rules": {
              "type": "array",
              "title": "Export policy rule",
              "description": "Export policy rule",
              "items": {
                "$ref": "#/definitions/exportPolicyRule"
              },
              "x-ms-identifiers": [
                "ruleIndex"
              ]
            }
          }
        },
        "protocolTypes": {
          "type": "array",
          "title": "protocolTypes",
          "items": {
            "type": "string"
          },
          "example": [
            "NFSv4.1"
          ]
        },
        "provisioningState": {
          "type": "string",
          "readOnly": true
        },
        "snapshotId": {
          "type": "string",
          "format": "arm-id",
          "title": "Snapshot ID",
          "x-nullable": true,
          "example": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myRG/providers/Microsoft.NetApp/netAppAccounts/account1/capacityPools/pool1/volumes/volume1/snapshots/snapshot1",
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.NetApp/netAppAccounts/capacityPools/volumes/snapshots"
              }
            ]
          }
        },
        "deleteBaseSnapshot": {
          "type": "boolean"
        },
        "backupId": {
          "type": "string",
          "format": "arm-id",
          "title": "Backup ID",
          "x-nullable": true,
          "example": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myRG/providers/Microsoft.NetApp/netAppAccounts/account1/backupVaults/backupVault1/backups/backup1",
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.NetApp/netAppAccounts/backupVaults/backups"
              }
            ]
          }
        },
        "baremetalTenantId": {
          "type": "string",
          "title": "Baremetal Tenant ID",
          "readOnly": true,
          "example": "9560acf5-4e3a-12e7-9bdb-02007cca7779"
        },
        "subnetId": {
          "type": "string"
        },
        "networkFeatures": {
          "type": "string",
          "title": "Network features",
          "default": "Basic",
          "enum": [
            "Basic",
            "Standard",
            "Basic_Standard",
            "Standard_Basic"
          ],
          "x-ms-enum": {
            "name": "NetworkFeatures",
            "modelAsString": true
          },
          "example": "Standard",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "effectiveNetworkFeatures": {
          "type": "string",
          "title": "Network features",
          "default": "Basic",
          "enum": [
            "Basic",
            "Standard",
            "Basic_Standard",
            "Standard_Basic"
          ],
          "x-ms-enum": {
            "name": "NetworkFeatures",
            "modelAsString": true
          },
          "readOnly": true,
          "example": "Standard"
        },
        "networkSiblingSetId": {
          "type": "string",
          "title": "Network Sibling Set ID",
          "minLength": 36,
          "maxLength": 36,
          "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
          "readOnly": true,
          "example": "9760acf5-4638-11e7-9bdb-020073ca3333"
        },
        "storageToNetworkProximity": {
          "type": "string",
          "title": "Storage to Network Proximity",
          "enum": [
            "Default",
            "T1",
            "T2",
            "AcrossT2"
          ],
          "x-ms-enum": {
            "name": "VolumeStorageToNetworkProximity",
            "modelAsString": true
          },
          "readOnly": true,
          "example": "T1"
        },
        "mountTargets": {
          "type": "array",
          "title": "mountTargets",
          "items": {
            "$ref": "#/definitions/mountTargetProperties"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "fileSystemId"
          ]
        },
        "volumeType": {
          "type": "string",
          "example": "DataProtection",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "dataProtection": {
          "type": "object",
          "title": "DataProtection",
          "properties": {
            "backup": {
              "$ref": "#/definitions/volumeBackupProperties",
              "type": "object",
              "title": "Backup",
              "description": "Backup Properties"
            },
            "replication": {
              "$ref": "#/definitions/replicationObject",
              "type": "object",
              "title": "Replication",
              "description": "Replication properties"
            },
            "snapshot": {
              "$ref": "#/definitions/volumeSnapshotProperties",
              "title": "Snapshot",
              "description": "Snapshot properties."
            },
            "volumeRelocation": {
              "$ref": "#/definitions/volumeRelocationProperties",
              "type": "object",
              "title": "VolumeRelocation",
              "description": "VolumeRelocation properties"
            }
          }
        },
        "acceptGrowCapacityPoolForShortTermCloneSplit": {
          "type": "string",
          "title": "acceptGrowCapacityPoolForShortTermCloneSplit",
          "enum": [
            "Accepted",
            "Declined"
          ],
          "x-ms-enum": {
            "name": "AcceptGrowCapacityPoolForShortTermCloneSplit",
            "modelAsString": true
          },
          "example": "Accepted",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "isRestoring": {
          "type": "boolean",
          "readOnly": true
        },
        "snapshotDirectoryVisible": {
          "type": "boolean",
          "default": true
        },
        "kerberosEnabled": {
          "type": "boolean",
          "default": false,
          "example": false,
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "securityStyle": {
          "type": "string",
          "default": "unix",
          "enum": [
            "ntfs",
            "unix"
          ],
          "x-ms-enum": {
            "name": "SecurityStyle",
            "modelAsString": true
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "smbEncryption": {
          "type": "boolean",
          "default": false,
          "example": false
        },
        "smbAccessBasedEnumeration": {
          "type": "string",
          "title": "smbAccessBasedEnumeration",
          "enum": [
            "Disabled",
            "Enabled"
          ],
          "x-ms-enum": {
            "name": "SmbAccessBasedEnumeration",
            "modelAsString": true
          },
          "x-nullable": true,
          "example": "Enabled"
        },
        "smbNonBrowsable": {
          "type": "string",
          "title": "smbNonBrowsable",
          "enum": [
            "Disabled",
            "Enabled"
          ],
          "x-ms-enum": {
            "name": "SmbNonBrowsable",
            "modelAsString": true
          },
          "example": "Enabled"
        },
        "smbContinuouslyAvailable": {
          "type": "boolean",
          "default": false,
          "example": false
        },
        "throughputMibps": {
          "type": "number",
          "title": "Maximum throughput in MiB/s that can be achieved by this volume and this will be accepted as input only for manual qosType volume",
          "x-nullable": true,
          "example": 128.223
        },
        "actualThroughputMibps": {
          "type": "number",
          "readOnly": true,
          "example": 164.221
        },
        "encryptionKeySource": {
          "type": "string",
          "default": "Microsoft.NetApp",
          "enum": [
            "Microsoft.NetApp",
            "Microsoft.KeyVault"
          ],
          "x-ms-enum": {
            "name": "EncryptionKeySource",
            "modelAsString": true
          }
        },
        "keyVaultPrivateEndpointResourceId": {
          "type": "string"
        },
        "ldapEnabled": {
          "type": "boolean",
          "default": false,
          "example": false,
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "coolAccess": {
          "type": "boolean",
          "default": false,
          "example": false
        },
        "coolnessPeriod": {
          "type": "integer",
          "format": "int32",
          "minimum": 2,
          "maximum": 183,
          "example": 7
        },
        "coolAccessRetrievalPolicy": {
          "type": "string",
          "enum": [
            "Default",
            "OnRead",
            "Never"
          ],
          "x-ms-enum": {
            "name": "CoolAccessRetrievalPolicy",
            "modelAsString": true
          }
        },
        "coolAccessTieringPolicy": {
          "type": "string",
          "enum": [
            "Auto",
            "SnapshotOnly"
          ],
          "x-ms-enum": {
            "name": "CoolAccessTieringPolicy",
            "modelAsString": true
          }
        },
        "unixPermissions": {
          "type": "string",
          "minLength": 4,
          "maxLength": 4,
          "x-nullable": true,
          "example": "0770"
        },
        "cloneProgress": {
          "type": "integer",
          "format": "int32",
          "x-nullable": true,
          "readOnly": true,
          "example": 10
        },
        "fileAccessLogs": {
          "type": "string",
          "default": "Disabled",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "FileAccessLogs",
            "modelAsString": true
          },
          "readOnly": true,
          "example": "Disabled"
        },
        "avsDataStore": {
          "type": "string",
          "title": "avsDataStore",
          "default": "Disabled",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "AvsDataStore",
            "modelAsString": true
          },
          "example": "Enabled",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "dataStoreResourceId": {
          "type": "array",
          "title": "dataStoreResourceId",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "isDefaultQuotaEnabled": {
          "type": "boolean",
          "default": false,
          "example": false
        },
        "defaultUserQuotaInKiBs": {
          "type": "integer",
          "format": "int64",
          "default": 0,
          "example": 4
        },
        "defaultGroupQuotaInKiBs": {
          "type": "integer",
          "format": "int64",
          "default": 0,
          "example": 4
        },
        "maximumNumberOfFiles": {
          "type": "integer",
          "format": "int64",
          "readOnly": true,
          "example": 100000000
        },
        "volumeGroupName": {
          "type": "string",
          "readOnly": true
        },
        "capacityPoolResourceId": {
          "type": "string"
        },
        "proximityPlacementGroup": {
          "type": "string",
          "example": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/testGroup/providers/Microsoft.Compute/proximityPlacementGroups/testppg"
        },
        "t2Network": {
          "type": "string",
          "readOnly": true,
          "example": "Test-T2-Alias"
        },
        "volumeSpecName": {
          "type": "string",
          "example": "Data"
        },
        "encrypted": {
          "type": "boolean",
          "readOnly": true
        },
        "placementRules": {
          "type": "array",
          "title": "Volume placement rules",
          "items": {
            "$ref": "#/definitions/placementKeyValuePairs"
          },
          "x-ms-identifiers": [
            "key"
          ]
        },
        "enableSubvolumes": {
          "type": "string",
          "default": "Disabled",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "EnableSubvolumes",
            "modelAsString": true
          },
          "example": "Enabled"
        },
        "provisionedAvailabilityZone": {
          "type": "string",
          "title": "Provisioned Availability Zone",
          "x-nullable": true,
          "readOnly": true,
          "example": "2"
        },
        "isLargeVolume": {
          "type": "boolean",
          "title": "Is Large Volume",
          "default": false,
          "example": false,
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "originatingResourceId": {
          "type": "string",
          "title": "Originating Resource Id",
          "x-nullable": true,
          "readOnly": true,
          "example": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/testGroup/providers/Microsoft.NetApp/netAppAccounts/accountOriginatingResourceId/capacityPools/originatingResourceIdPool/volumes/theOriginalVolume/snapshots/theSnapshot"
        },
        "inheritedSizeInBytes": {
          "type": "integer",
          "format": "int64",
          "title": "inheritedSizeInBytes",
          "x-nullable": true,
          "readOnly": true
        }
      },
      "required": [
        "creationToken",
        "subnetId",
        "usageThreshold"
      ]
    },
    "volumeQuotaRule__deleted": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/volumeQuotaRulesProperties",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "volumeQuotaRulePatch__deleted": {
      "type": "object",
      "properties": {
        "tags": {
          "$ref": "#/definitions/resourceTags"
        },
        "properties": {
          "$ref": "#/definitions/volumeQuotaRulesProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "volumeQuotaRulesList__deleted": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/volumeQuotaRule"
          }
        }
      }
    },
    "volumeQuotaRulesProperties__deleted": {
      "type": "object",
      "properties": {
        "provisioningState": {
          "type": "string",
          "enum": [
            "Accepted",
            "Creating",
            "Patching",
            "Deleting",
            "Moving",
            "Failed",
            "Succeeded"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": false
          },
          "readOnly": true
        },
        "quotaSizeInKiBs": {
          "type": "integer",
          "format": "int64",
          "example": "100006"
        },
        "quotaType": {
          "type": "string",
          "title": "quotaType",
          "enum": [
            "DefaultUserQuota",
            "DefaultGroupQuota",
            "IndividualUserQuota",
            "IndividualGroupQuota"
          ],
          "x-ms-enum": {
            "name": "Type",
            "modelAsString": true
          },
          "example": "DefaultUserQuota",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "quotaTarget": {
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      }
    },
    "volumeRelocationProperties__deleted": {
      "type": "object",
      "properties": {
        "relocationRequested": {
          "type": "boolean"
        },
        "readyToBeFinalized": {
          "type": "boolean",
          "readOnly": true
        }
      }
    },
    "volumeResourceIds__deleted": {
      "type": "array",
      "title": "Volume resource Ids",
      "items": {
        "type": "string",
        "format": "arm-id",
        "title": "Resource Id of volume",
        "x-ms-arm-id-details": {
          "allowedResources": [
            {
              "type": "Microsoft.NetApp/netAppAccounts/capacityPools/volumes"
            }
          ]
        }
      }
    },
    "volumeRevert__deleted": {
      "type": "object",
      "properties": {
        "snapshotId": {
          "type": "string",
          "format": "arm-id",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.NetApp/netAppAccounts/capacityPools/volumes/snapshots"
              }
            ]
          }
        }
      }
    },
    "volumeSnapshotProperties__deleted": {
      "type": "object",
      "properties": {
        "snapshotPolicyId": {
          "type": "string"
        }
      }
    },
    "weeklySchedule__deleted": {
      "type": "object",
      "properties": {
        "snapshotsToKeep": {
          "type": "integer",
          "format": "int32"
        },
        "day": {
          "type": "string",
          "example": "Sunday,Monday"
        },
        "hour": {
          "type": "integer",
          "format": "int32",
          "example": 11
        },
        "minute": {
          "type": "integer",
          "format": "int32",
          "example": 30
        },
        "usedBytes": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "AccountEncryption__added": {
      "type": "object",
      "properties": {
        "keySource": {
          "type": "string",
          "default": "Microsoft.NetApp",
          "enum": [
            "Microsoft.NetApp",
            "Microsoft.KeyVault"
          ],
          "x-ms-enum": {
            "name": "KeySource",
            "modelAsString": true
          }
        },
        "keyVaultProperties": {
          "$ref": "#/definitions/KeyVaultProperties"
        },
        "identity": {
          "$ref": "#/definitions/EncryptionIdentity"
        }
      }
    },
    "AccountProperties__added": {
      "type": "object",
      "properties": {
        "provisioningState": {
          "type": "string",
          "readOnly": true
        },
        "activeDirectories": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ActiveDirectory"
          },
          "x-ms-identifiers": [
            "activeDirectoryId"
          ]
        },
        "encryption": {
          "$ref": "#/definitions/AccountEncryption"
        },
        "disableShowmount": {
          "type": "boolean",
          "readOnly": true
        },
        "nfsV4IDDomain": {
          "type": "string",
          "maxLength": 255,
          "pattern": "^[a-zA-Z0-9][a-zA-Z0-9.-]{0,253}[a-zA-Z0-9]$"
        },
        "multiAdStatus": {
          "type": "string",
          "enum": [
            "Disabled",
            "Enabled"
          ],
          "x-ms-enum": {
            "name": "MultiAdStatus",
            "modelAsString": true
          },
          "readOnly": true
        }
      }
    },
    "ActiveDirectory__added": {
      "type": "object",
      "properties": {
        "activeDirectoryId": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string",
          "maxLength": 64
        },
        "domain": {
          "type": "string"
        },
        "dns": {
          "type": "string",
          "pattern": "^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)((, ?)(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?))*$"
        },
        "status": {
          "type": "string",
          "enum": [
            "Created",
            "InUse",
            "Deleted",
            "Error",
            "Updating"
          ],
          "x-ms-enum": {
            "name": "ActiveDirectoryStatus",
            "modelAsString": true
          },
          "readOnly": true
        },
        "statusDetails": {
          "type": "string",
          "readOnly": true
        },
        "smbServerName": {
          "type": "string"
        },
        "organizationalUnit": {
          "type": "string",
          "default": "CN=Computers"
        },
        "site": {
          "type": "string"
        },
        "backupOperators": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "administrators": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "kdcIP": {
          "type": "string",
          "pattern": "^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$"
        },
        "adName": {
          "type": "string",
          "minLength": 1,
          "maxLength": 64
        },
        "serverRootCACertificate": {
          "type": "string",
          "minLength": 1,
          "maxLength": 10240
        },
        "aesEncryption": {
          "type": "boolean"
        },
        "ldapSigning": {
          "type": "boolean"
        },
        "securityOperators": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ldapOverTLS": {
          "type": "boolean"
        },
        "allowLocalNfsUsersWithLdap": {
          "type": "boolean"
        },
        "encryptDCConnections": {
          "type": "boolean"
        },
        "ldapSearchScope": {
          "$ref": "#/definitions/LdapSearchScopeOpt"
        },
        "preferredServersForLdapClient": {
          "type": "string",
          "maxLength": 32,
          "pattern": "^((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)((, ?)(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?))?)?$"
        }
      }
    },
    "AuthorizeRequest__added": {
      "type": "object",
      "properties": {
        "remoteVolumeResourceId": {
          "type": "string"
        }
      }
    },
    "Azure.ResourceManager.ArmResponse<ClusterPeerCommandResponse>__added": {
      "type": "object",
      "properties": {
        "body": {
          "$ref": "#/definitions/ClusterPeerCommandResponse"
        }
      },
      "required": [
        "body"
      ]
    },
    "Azure.ResourceManager.ArmResponse<GetGroupIdListForLdapUserResponse>__added": {
      "type": "object",
      "properties": {
        "body": {
          "$ref": "#/definitions/GetGroupIdListForLdapUserResponse"
        }
      },
      "required": [
        "body"
      ]
    },
    "Azure.ResourceManager.ArmResponse<SvmPeerCommandResponse>__added": {
      "type": "object",
      "properties": {
        "body": {
          "$ref": "#/definitions/SvmPeerCommandResponse"
        }
      },
      "required": [
        "body"
      ]
    },
    "Azure.ResourceManager.ArmResponse<Volume>__added": {
      "type": "object",
      "properties": {
        "body": {
          "$ref": "#/definitions/Volume"
        }
      },
      "required": [
        "body"
      ]
    },
    "Backup__added": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/BackupProperties",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "BackupPatch__added": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/BackupPatchProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "BackupPatchProperties__added": {
      "type": "object",
      "properties": {
        "label": {
          "type": "string"
        }
      }
    },
    "BackupPoliciesList__added": {
      "type": "object",
      "description": "[Placeholder] Discription for page model",
      "properties": {
        "value": {
          "type": "array",
          "description": "[Placeholder] Discription for value property",
          "items": {
            "$ref": "#/definitions/BackupPolicy"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "[Placeholder] Discription for nextLink property"
        }
      },
      "required": [
        "value"
      ]
    },
    "BackupPolicy__added": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/BackupPolicyProperties",
          "x-ms-client-flatten": true
        },
        "etag": {
          "type": "string",
          "readOnly": true
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "BackupPolicyPatch__added": {
      "type": "object",
      "properties": {
        "location": {
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "id": {
          "type": "string",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "readOnly": true
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "$ref": "#/definitions/BackupPolicyProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "BackupPolicyProperties__added": {
      "type": "object",
      "properties": {
        "backupPolicyId": {
          "type": "string",
          "readOnly": true
        },
        "provisioningState": {
          "type": "string",
          "readOnly": true
        },
        "dailyBackupsToKeep": {
          "type": "integer",
          "format": "int32"
        },
        "weeklyBackupsToKeep": {
          "type": "integer",
          "format": "int32"
        },
        "monthlyBackupsToKeep": {
          "type": "integer",
          "format": "int32"
        },
        "volumesAssigned": {
          "type": "integer",
          "format": "int32",
          "readOnly": true
        },
        "enabled": {
          "type": "boolean"
        },
        "volumeBackups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VolumeBackups"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "volumeName"
          ]
        }
      }
    },
    "BackupProperties__added": {
      "type": "object",
      "properties": {
        "backupId": {
          "type": "string",
          "minLength": 36,
          "maxLength": 36,
          "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
          "readOnly": true
        },
        "creationDate": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "snapshotCreationDate": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "completionDate": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "provisioningState": {
          "type": "string",
          "readOnly": true
        },
        "size": {
          "type": "integer",
          "format": "int64",
          "readOnly": true
        },
        "label": {
          "type": "string"
        },
        "backupType": {
          "type": "string",
          "enum": [
            "Manual",
            "Scheduled"
          ],
          "x-ms-enum": {
            "name": "BackupType",
            "modelAsString": true
          },
          "readOnly": true
        },
        "failureReason": {
          "type": "string",
          "readOnly": true
        },
        "volumeResourceId": {
          "type": "string",
          "format": "arm-id",
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.NetApp/netAppAccounts/capacityPools/volumes"
              }
            ]
          }
        },
        "useExistingSnapshot": {
          "type": "boolean",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "snapshotName": {
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "backupPolicyResourceId": {
          "type": "string",
          "format": "arm-id",
          "readOnly": true,
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.NetApp/netAppAccounts/backupPolicies"
              }
            ]
          }
        },
        "isLargeVolume": {
          "type": "boolean",
          "readOnly": true
        }
      },
      "required": [
        "volumeResourceId"
      ]
    },
    "BackupRestoreFiles__added": {
      "type": "object",
      "properties": {
        "fileList": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "restoreFilePath": {
          "type": "string",
          "pattern": "^\\/.*$"
        },
        "destinationVolumeId": {
          "type": "string"
        }
      },
      "required": [
        "destinationVolumeId",
        "fileList"
      ]
    },
    "BackupStatus__added": {
      "type": "object",
      "properties": {
        "healthy": {
          "type": "boolean",
          "readOnly": true
        },
        "relationshipStatus": {
          "type": "string",
          "enum": [
            "Idle",
            "Transferring",
            "Failed",
            "Unknown"
          ],
          "x-ms-enum": {
            "name": "RelationshipStatus",
            "modelAsString": true
          },
          "readOnly": true
        },
        "mirrorState": {
          "type": "string",
          "enum": [
            "Uninitialized",
            "Mirrored",
            "Broken"
          ],
          "x-ms-enum": {
            "name": "MirrorState",
            "modelAsString": true
          },
          "readOnly": true
        },
        "unhealthyReason": {
          "type": "string",
          "readOnly": true
        },
        "errorMessage": {
          "type": "string",
          "readOnly": true
        },
        "lastTransferSize": {
          "type": "integer",
          "format": "int64",
          "readOnly": true
        },
        "lastTransferType": {
          "type": "string",
          "readOnly": true
        },
        "totalTransferBytes": {
          "type": "integer",
          "format": "int64",
          "readOnly": true
        },
        "transferProgressBytes": {
          "type": "integer",
          "format": "int64",
          "readOnly": true
        }
      }
    },
    "BackupVault__added": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/BackupVaultProperties",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "BackupVaultPatch__added": {
      "type": "object",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "BackupVaultProperties__added": {
      "type": "object",
      "properties": {
        "provisioningState": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "BackupVaultsList__added": {
      "type": "object",
      "description": "[Placeholder] Discription for page model",
      "properties": {
        "value": {
          "type": "array",
          "description": "[Placeholder] Discription for value property",
          "items": {
            "$ref": "#/definitions/BackupVault"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "[Placeholder] Discription for nextLink property"
        }
      },
      "required": [
        "value"
      ]
    },
    "BackupsList__added": {
      "type": "object",
      "description": "[Placeholder] Discription for page model",
      "properties": {
        "value": {
          "type": "array",
          "description": "[Placeholder] Discription for value property",
          "items": {
            "$ref": "#/definitions/Backup"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "[Placeholder] Discription for nextLink property"
        }
      },
      "required": [
        "value"
      ]
    },
    "BackupsMigrationRequest__added": {
      "type": "object",
      "properties": {
        "backupVaultId": {
          "type": "string",
          "format": "arm-id",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.NetApp/netAppAccounts/backupVaults"
              }
            ]
          }
        }
      },
      "required": [
        "backupVaultId"
      ]
    },
    "BreakFileLocksRequest__added": {
      "type": "object",
      "properties": {
        "clientIp": {
          "type": "string",
          "pattern": "^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$"
        },
        "confirmRunningDisruptiveOperation": {
          "type": "boolean"
        }
      }
    },
    "BreakReplicationRequest__added": {
      "type": "object",
      "properties": {
        "forceBreakReplication": {
          "type": "boolean"
        }
      }
    },
    "CapacityPool__added": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/PoolProperties",
          "x-ms-client-flatten": true
        },
        "etag": {
          "type": "string",
          "readOnly": true
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "CapacityPoolList__added": {
      "type": "object",
      "description": "[Placeholder] Discription for page model",
      "properties": {
        "value": {
          "type": "array",
          "description": "[Placeholder] Discription for value property",
          "items": {
            "$ref": "#/definitions/CapacityPool"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "[Placeholder] Discription for nextLink property"
        }
      },
      "required": [
        "value"
      ]
    },
    "CapacityPoolPatch__added": {
      "type": "object",
      "properties": {
        "location": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "readOnly": true
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "$ref": "#/definitions/PoolPatchProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "ChangeKeyVault__added": {
      "type": "object",
      "properties": {
        "keyVaultUri": {
          "type": "string",
          "format": "uri"
        },
        "keyName": {
          "type": "string"
        },
        "keyVaultResourceId": {
          "type": "string",
          "format": "arm-id",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.KeyVault/vaults"
              }
            ]
          }
        },
        "keyVaultPrivateEndpoints": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KeyVaultPrivateEndpoint"
          },
          "x-ms-identifiers": [
            "virtualNetworkId"
          ]
        }
      },
      "required": [
        "keyName",
        "keyVaultPrivateEndpoints",
        "keyVaultUri"
      ]
    },
    "ClusterPeerCommandResponse__added": {
      "type": "object",
      "properties": {
        "peerAcceptCommand": {
          "type": "string"
        }
      }
    },
    "DailySchedule__added": {
      "type": "object",
      "properties": {
        "snapshotsToKeep": {
          "type": "integer",
          "format": "int32"
        },
        "hour": {
          "type": "integer",
          "format": "int32"
        },
        "minute": {
          "type": "integer",
          "format": "int32"
        },
        "usedBytes": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "DestinationReplication__added": {
      "type": "object",
      "properties": {
        "resourceId": {
          "type": "string",
          "format": "arm-id",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.NetApp/netAppAccounts/capacityPools/volumes"
              }
            ]
          }
        },
        "replicationType": {
          "type": "string",
          "enum": [
            "CrossRegionReplication",
            "CrossZoneReplication"
          ],
          "x-ms-enum": {
            "name": "ReplicationType",
            "modelAsString": true
          }
        },
        "region": {
          "type": "string"
        },
        "zone": {
          "type": "string"
        }
      }
    },
    "EncryptionTransitionRequest__added": {
      "type": "object",
      "properties": {
        "virtualNetworkId": {
          "type": "string",
          "format": "arm-id",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Network/virtualNetworks"
              }
            ]
          }
        },
        "privateEndpointId": {
          "type": "string",
          "format": "arm-id",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Network/privateEndpoints"
              }
            ]
          }
        }
      },
      "required": [
        "privateEndpointId",
        "virtualNetworkId"
      ]
    },
    "ExportPolicyRule__added": {
      "type": "object",
      "properties": {
        "ruleIndex": {
          "type": "integer",
          "format": "int32"
        },
        "unixReadOnly": {
          "type": "boolean"
        },
        "unixReadWrite": {
          "type": "boolean"
        },
        "kerberos5ReadOnly": {
          "type": "boolean"
        },
        "kerberos5ReadWrite": {
          "type": "boolean"
        },
        "kerberos5iReadOnly": {
          "type": "boolean",
          "x-ms-client-name": "kerberos5IReadOnly"
        },
        "kerberos5iReadWrite": {
          "type": "boolean",
          "x-ms-client-name": "kerberos5IReadWrite"
        },
        "kerberos5pReadOnly": {
          "type": "boolean",
          "x-ms-client-name": "kerberos5PReadOnly"
        },
        "kerberos5pReadWrite": {
          "type": "boolean",
          "x-ms-client-name": "kerberos5PReadWrite"
        },
        "cifs": {
          "type": "boolean"
        },
        "nfsv3": {
          "type": "boolean"
        },
        "nfsv41": {
          "type": "boolean"
        },
        "allowedClients": {
          "type": "string"
        },
        "hasRootAccess": {
          "type": "boolean",
          "default": true
        },
        "chownMode": {
          "type": "string",
          "default": "Restricted",
          "enum": [
            "Restricted",
            "Unrestricted"
          ],
          "x-ms-enum": {
            "name": "ChownMode",
            "modelAsString": true
          }
        }
      }
    },
    "GetGroupIdListForLdapUserRequest__added": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255
        }
      },
      "required": [
        "username"
      ]
    },
    "GetGroupIdListForLdapUserResponse__added": {
      "type": "object",
      "properties": {
        "groupIdsForLdapUser": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "GetKeyVaultStatusResponse__added": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/GetKeyVaultStatusResponseProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "GetKeyVaultStatusResponseProperties__added": {
      "type": "object",
      "properties": {
        "keyVaultUri": {
          "type": "string",
          "format": "uri"
        },
        "keyName": {
          "type": "string"
        },
        "keyVaultResourceId": {
          "type": "string",
          "format": "arm-id",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.KeyVault/vaults"
              }
            ]
          }
        },
        "keyVaultPrivateEndpoints": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KeyVaultPrivateEndpoint"
          },
          "x-ms-identifiers": [
            "virtualNetworkId"
          ]
        }
      }
    },
    "HourlySchedule__added": {
      "type": "object",
      "properties": {
        "snapshotsToKeep": {
          "type": "integer",
          "format": "int32"
        },
        "minute": {
          "type": "integer",
          "format": "int32"
        },
        "usedBytes": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "KeyVaultPrivateEndpoint__added": {
      "type": "object",
      "properties": {
        "virtualNetworkId": {
          "type": "string",
          "format": "arm-id",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Network/virtualNetworks"
              }
            ]
          }
        },
        "privateEndpointId": {
          "type": "string",
          "format": "arm-id",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Network/privateEndpoints"
              }
            ]
          }
        }
      }
    },
    "LdapSearchScopeOpt__added": {
      "type": "object",
      "properties": {
        "userDN": {
          "type": "string",
          "maxLength": 255
        },
        "groupDN": {
          "type": "string",
          "maxLength": 255
        },
        "groupMembershipFilter": {
          "type": "string",
          "maxLength": 255
        }
      }
    },
    "ListReplications__added": {
      "type": "object",
      "description": "[Placeholder] Discription for page model",
      "properties": {
        "value": {
          "type": "array",
          "description": "[Placeholder] Discription for value property",
          "items": {
            "$ref": "#/definitions/Replication"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "[Placeholder] Discription for nextLink property"
        }
      },
      "required": [
        "value"
      ]
    },
    "MonthlySchedule__added": {
      "type": "object",
      "properties": {
        "snapshotsToKeep": {
          "type": "integer",
          "format": "int32"
        },
        "daysOfMonth": {
          "type": "string"
        },
        "hour": {
          "type": "integer",
          "format": "int32"
        },
        "minute": {
          "type": "integer",
          "format": "int32"
        },
        "usedBytes": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "MountTargetProperties__added": {
      "type": "object",
      "properties": {
        "mountTargetId": {
          "type": "string",
          "minLength": 36,
          "maxLength": 36,
          "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
          "readOnly": true
        },
        "fileSystemId": {
          "type": "string",
          "minLength": 36,
          "maxLength": 36,
          "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
        },
        "ipAddress": {
          "type": "string",
          "readOnly": true
        },
        "smbServerFqdn": {
          "type": "string"
        }
      },
      "required": [
        "fileSystemId"
      ]
    },
    "NetAppAccount__added": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/AccountProperties",
          "x-ms-client-flatten": true
        },
        "etag": {
          "type": "string",
          "readOnly": true
        },
        "identity": {
          "$ref": "../../../../../common-types/resource-management/v6/managedidentity.json#/definitions/ManagedServiceIdentity"
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "NetAppAccountList__added": {
      "type": "object",
      "description": "[Placeholder] Discription for page model",
      "properties": {
        "value": {
          "type": "array",
          "description": "[Placeholder] Discription for value property",
          "items": {
            "$ref": "#/definitions/NetAppAccount"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "[Placeholder] Discription for nextLink property"
        }
      },
      "required": [
        "value"
      ]
    },
    "NetAppAccountPatch__added": {
      "type": "object",
      "properties": {
        "location": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "readOnly": true
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "$ref": "#/definitions/AccountProperties",
          "x-ms-client-flatten": true
        },
        "identity": {
          "$ref": "../../../../../common-types/resource-management/v6/managedidentity.json#/definitions/ManagedServiceIdentity"
        }
      }
    },
    "NetworkSiblingSet__added": {
      "type": "object",
      "properties": {
        "networkSiblingSetId": {
          "type": "string",
          "minLength": 36,
          "maxLength": 36,
          "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
        },
        "subnetId": {
          "type": "string",
          "format": "arm-id",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Network/virtualNetworks/subnets"
              }
            ]
          }
        },
        "networkSiblingSetStateId": {
          "type": "string"
        },
        "networkFeatures": {
          "type": "string",
          "default": "Basic",
          "enum": [
            "Basic",
            "Standard",
            "Basic_Standard",
            "Standard_Basic"
          ],
          "x-ms-enum": {
            "name": "NetworkFeatures",
            "modelAsString": true
          }
        },
        "provisioningState": {
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Updating"
          ],
          "x-ms-enum": {
            "name": "NetworkSiblingSetProvisioningState",
            "modelAsString": true
          },
          "readOnly": true
        },
        "nicInfoList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NicInfo"
          }
        }
      }
    },
    "NicInfo__added": {
      "type": "object",
      "properties": {
        "ipAddress": {
          "type": "string",
          "readOnly": true
        },
        "volumeResourceIds": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "arm-id",
            "x-ms-arm-id-details": {
              "allowedResources": [
                {
                  "type": "Microsoft.NetApp/netAppAccounts/capacityPools/volumes"
                }
              ]
            }
          }
        }
      }
    },
    "OperationDisplay__added": {
      "type": "object",
      "properties": {
        "provider": {
          "type": "string"
        },
        "resource": {
          "type": "string"
        },
        "operation": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "PeerClusterForVolumeMigrationRequest__added": {
      "type": "object",
      "properties": {
        "peerIpAddresses": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "peerIpAddresses"
      ]
    },
    "PlacementKeyValuePairs__added": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "required": [
        "key",
        "value"
      ]
    },
    "PoolChangeRequest__added": {
      "type": "object",
      "properties": {
        "newPoolResourceId": {
          "type": "string"
        }
      },
      "required": [
        "newPoolResourceId"
      ]
    },
    "PoolPatchProperties__added": {
      "type": "object",
      "properties": {
        "size": {
          "type": "integer",
          "format": "int64",
          "default": 4398046511104
        },
        "qosType": {
          "type": "string",
          "enum": [
            "Auto",
            "Manual"
          ],
          "x-ms-enum": {
            "name": "QosType",
            "modelAsString": true
          }
        },
        "coolAccess": {
          "type": "boolean"
        },
        "customThroughputMibps": {
          "type": "number",
          "format": "float"
        }
      }
    },
    "PoolProperties__added": {
      "type": "object",
      "properties": {
        "poolId": {
          "type": "string",
          "minLength": 36,
          "maxLength": 36,
          "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
          "readOnly": true
        },
        "size": {
          "type": "integer",
          "format": "int64",
          "default": 4398046511104
        },
        "serviceLevel": {
          "type": "string",
          "default": "Premium",
          "enum": [
            "Standard",
            "Premium",
            "Ultra",
            "StandardZRS",
            "Flexible"
          ],
          "x-ms-enum": {
            "name": "ServiceLevel",
            "modelAsString": true
          }
        },
        "provisioningState": {
          "type": "string",
          "readOnly": true
        },
        "totalThroughputMibps": {
          "type": "number",
          "format": "float",
          "readOnly": true
        },
        "utilizedThroughputMibps": {
          "type": "number",
          "format": "float",
          "readOnly": true
        },
        "customThroughputMibps": {
          "type": "number",
          "format": "float"
        },
        "qosType": {
          "type": "string",
          "enum": [
            "Auto",
            "Manual"
          ],
          "x-ms-enum": {
            "name": "QosType",
            "modelAsString": true
          }
        },
        "coolAccess": {
          "type": "boolean"
        },
        "encryptionType": {
          "type": "string",
          "default": "Single",
          "enum": [
            "Single",
            "Double"
          ],
          "x-ms-enum": {
            "name": "EncryptionType",
            "modelAsString": true
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "required": [
        "serviceLevel",
        "size"
      ]
    },
    "ReestablishReplicationRequest__added": {
      "type": "object",
      "properties": {
        "sourceVolumeId": {
          "type": "string"
        }
      }
    },
    "RegionInfo__added": {
      "type": "object",
      "properties": {
        "storageToNetworkProximity": {
          "type": "string",
          "enum": [
            "Default",
            "T1",
            "T2",
            "AcrossT2",
            "T1AndT2",
            "T1AndAcrossT2",
            "T2AndAcrossT2",
            "T1AndT2AndAcrossT2"
          ],
          "x-ms-enum": {
            "name": "RegionStorageToNetworkProximity",
            "modelAsString": true
          }
        },
        "availabilityZoneMappings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RegionInfoAvailabilityZoneMappingsItem"
          },
          "x-ms-identifiers": [
            "availabilityZone"
          ]
        }
      }
    },
    "RegionInfoAvailabilityZoneMappingsItem__added": {
      "type": "object",
      "properties": {
        "availabilityZone": {
          "type": "string"
        },
        "isAvailable": {
          "type": "boolean"
        }
      }
    },
    "RegionInfoResource__added": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/RegionInfo",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "RegionInfosList__added": {
      "type": "object",
      "description": "[Placeholder] Discription for page model",
      "properties": {
        "value": {
          "type": "array",
          "description": "[Placeholder] Discription for value property",
          "items": {
            "$ref": "#/definitions/RegionInfoResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "[Placeholder] Discription for nextLink property"
        }
      },
      "required": [
        "value"
      ]
    },
    "RelocateVolumeRequest__added": {
      "type": "object",
      "properties": {
        "creationToken": {
          "type": "string"
        }
      }
    },
    "RemotePath__added": {
      "type": "object",
      "properties": {
        "externalHostName": {
          "type": "string"
        },
        "serverName": {
          "type": "string"
        },
        "volumeName": {
          "type": "string"
        }
      },
      "required": [
        "externalHostName",
        "serverName",
        "volumeName"
      ]
    },
    "Replication__added": {
      "type": "object",
      "properties": {
        "replicationId": {
          "type": "string",
          "minLength": 36,
          "maxLength": 36,
          "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
          "readOnly": true
        },
        "endpointType": {
          "type": "string",
          "enum": [
            "src",
            "dst"
          ],
          "x-ms-enum": {
            "name": "EndpointType",
            "modelAsString": true
          }
        },
        "replicationSchedule": {
          "type": "string",
          "enum": [
            "_10minutely",
            "hourly",
            "daily"
          ],
          "x-ms-enum": {
            "name": "ReplicationSchedule",
            "modelAsString": true
          }
        },
        "remoteVolumeResourceId": {
          "type": "string"
        },
        "remoteVolumeRegion": {
          "type": "string"
        }
      },
      "required": [
        "remoteVolumeResourceId"
      ]
    },
    "ReplicationObject__added": {
      "type": "object",
      "properties": {
        "replicationId": {
          "type": "string",
          "readOnly": true
        },
        "endpointType": {
          "type": "string",
          "enum": [
            "src",
            "dst"
          ],
          "x-ms-enum": {
            "name": "EndpointType",
            "modelAsString": true
          },
          "readOnly": true
        },
        "replicationSchedule": {
          "type": "string",
          "enum": [
            "_10minutely",
            "hourly",
            "daily"
          ],
          "x-ms-enum": {
            "name": "ReplicationSchedule",
            "modelAsString": true
          }
        },
        "remoteVolumeResourceId": {
          "type": "string"
        },
        "remotePath": {
          "$ref": "#/definitions/RemotePath",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "remoteVolumeRegion": {
          "type": "string"
        },
        "destinationReplications": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DestinationReplication"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "resourceId"
          ]
        }
      }
    },
    "ReplicationStatus__added": {
      "type": "object",
      "properties": {
        "healthy": {
          "type": "boolean"
        },
        "relationshipStatus": {
          "type": "string",
          "enum": [
            "Idle",
            "Transferring",
            "Failed",
            "Unknown"
          ],
          "x-ms-enum": {
            "name": "RelationshipStatus",
            "modelAsString": true
          }
        },
        "mirrorState": {
          "type": "string",
          "enum": [
            "Uninitialized",
            "Mirrored",
            "Broken"
          ],
          "x-ms-enum": {
            "name": "MirrorState",
            "modelAsString": true
          }
        },
        "totalProgress": {
          "type": "string"
        },
        "errorMessage": {
          "type": "string"
        }
      }
    },
    "RestoreStatus__added": {
      "type": "object",
      "properties": {
        "healthy": {
          "type": "boolean",
          "readOnly": true
        },
        "relationshipStatus": {
          "type": "string",
          "enum": [
            "Idle",
            "Transferring",
            "Failed",
            "Unknown"
          ],
          "x-ms-enum": {
            "name": "RelationshipStatus",
            "modelAsString": true
          },
          "readOnly": true
        },
        "mirrorState": {
          "type": "string",
          "enum": [
            "Uninitialized",
            "Mirrored",
            "Broken"
          ],
          "x-ms-enum": {
            "name": "MirrorState",
            "modelAsString": true
          },
          "readOnly": true
        },
        "unhealthyReason": {
          "type": "string",
          "readOnly": true
        },
        "errorMessage": {
          "type": "string",
          "readOnly": true
        },
        "totalTransferBytes": {
          "type": "integer",
          "format": "int64",
          "readOnly": true
        }
      }
    },
    "Snapshot__added": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SnapshotProperties",
          "x-ms-client-flatten": true
        },
        "location": {
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "required": [
        "location"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "SnapshotPatch__added": {
      "type": "object"
    },
    "SnapshotPoliciesList__added": {
      "type": "object",
      "description": "[Placeholder] Discription for page model",
      "properties": {
        "value": {
          "type": "array",
          "description": "[Placeholder] Discription for value property",
          "items": {
            "$ref": "#/definitions/SnapshotPolicy"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "[Placeholder] Discription for nextLink property"
        }
      },
      "required": [
        "value"
      ]
    },
    "SnapshotPolicy__added": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SnapshotPolicyProperties",
          "x-ms-client-flatten": true
        },
        "etag": {
          "type": "string",
          "readOnly": true
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "SnapshotPolicyPatch__added": {
      "type": "object",
      "properties": {
        "location": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "readOnly": true
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "$ref": "#/definitions/SnapshotPolicyProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "SnapshotPolicyProperties__added": {
      "type": "object",
      "properties": {
        "hourlySchedule": {
          "$ref": "#/definitions/HourlySchedule"
        },
        "dailySchedule": {
          "$ref": "#/definitions/DailySchedule"
        },
        "weeklySchedule": {
          "$ref": "#/definitions/WeeklySchedule"
        },
        "monthlySchedule": {
          "$ref": "#/definitions/MonthlySchedule"
        },
        "enabled": {
          "type": "boolean"
        },
        "provisioningState": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "SnapshotPolicyVolumeList__added": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Volume"
          }
        }
      }
    },
    "SnapshotProperties__added": {
      "type": "object",
      "properties": {
        "snapshotId": {
          "type": "string",
          "minLength": 36,
          "maxLength": 36,
          "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
          "readOnly": true
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "provisioningState": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "SnapshotRestoreFiles__added": {
      "type": "object",
      "properties": {
        "filePaths": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "destinationPath": {
          "type": "string"
        }
      },
      "required": [
        "filePaths"
      ]
    },
    "SnapshotsList__added": {
      "type": "object",
      "description": "[Placeholder] Discription for page model",
      "properties": {
        "value": {
          "type": "array",
          "description": "[Placeholder] Discription for value property",
          "items": {
            "$ref": "#/definitions/Snapshot"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "[Placeholder] Discription for nextLink property"
        }
      },
      "required": [
        "value"
      ]
    },
    "SubvolumeInfo__added": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SubvolumeProperties",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "SubvolumeModel__added": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "readOnly": true
        },
        "properties": {
          "$ref": "#/definitions/SubvolumeModelProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "SubvolumeModelProperties__added": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string"
        },
        "parentPath": {
          "type": "string"
        },
        "size": {
          "type": "integer",
          "format": "int64"
        },
        "bytesUsed": {
          "type": "integer",
          "format": "int64"
        },
        "permissions": {
          "type": "string"
        },
        "creationTimeStamp": {
          "type": "string",
          "format": "date-time"
        },
        "accessedTimeStamp": {
          "type": "string",
          "format": "date-time"
        },
        "modifiedTimeStamp": {
          "type": "string",
          "format": "date-time"
        },
        "changedTimeStamp": {
          "type": "string",
          "format": "date-time"
        },
        "provisioningState": {
          "type": "string"
        }
      }
    },
    "SubvolumePatchParams__added": {
      "type": "object",
      "properties": {
        "size": {
          "type": "integer",
          "format": "int64"
        },
        "path": {
          "type": "string"
        }
      }
    },
    "SubvolumePatchRequest__added": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SubvolumePatchParams",
          "x-ms-client-flatten": true
        }
      }
    },
    "SubvolumeProperties__added": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string"
        },
        "size": {
          "type": "integer",
          "format": "int64"
        },
        "parentPath": {
          "type": "string"
        },
        "provisioningState": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "SubvolumesList__added": {
      "type": "object",
      "description": "[Placeholder] Discription for page model",
      "properties": {
        "value": {
          "type": "array",
          "description": "[Placeholder] Discription for value property",
          "items": {
            "$ref": "#/definitions/SubvolumeInfo"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "[Placeholder] Discription for nextLink property"
        }
      },
      "required": [
        "value"
      ]
    },
    "SvmPeerCommandResponse__added": {
      "type": "object",
      "properties": {
        "svmPeeringCommand": {
          "type": "string"
        }
      }
    },
    "TypeSpec.Http.OkResponse__added": {
      "type": "object"
    },
    "UsageName__added": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string"
        },
        "localizedValue": {
          "type": "string"
        }
      }
    },
    "UsageProperties__added": {
      "type": "object",
      "properties": {
        "currentValue": {
          "type": "integer",
          "format": "int32",
          "readOnly": true
        },
        "limit": {
          "type": "integer",
          "format": "int32",
          "readOnly": true
        },
        "unit": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "Volume__added": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/VolumeProperties",
          "x-ms-client-flatten": true
        },
        "etag": {
          "type": "string",
          "readOnly": true
        },
        "zones": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "VolumeBackupProperties__added": {
      "type": "object",
      "properties": {
        "backupPolicyId": {
          "type": "string",
          "format": "arm-id",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.NetApp/netAppAccounts/backupPolicies"
              }
            ]
          }
        },
        "policyEnforced": {
          "type": "boolean"
        },
        "backupVaultId": {
          "type": "string",
          "format": "arm-id",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.NetApp/netAppAccounts/backupVaults"
              }
            ]
          }
        }
      }
    },
    "VolumeBackups__added": {
      "type": "object",
      "properties": {
        "volumeName": {
          "type": "string"
        },
        "volumeResourceId": {
          "type": "string",
          "format": "arm-id",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.NetApp/netAppAccounts/capacityPools/volumes"
              }
            ]
          }
        },
        "backupsCount": {
          "type": "integer",
          "format": "int32"
        },
        "policyEnabled": {
          "type": "boolean"
        }
      }
    },
    "VolumeGroup__added": {
      "type": "object",
      "properties": {
        "location": {
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "id": {
          "type": "string",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "readOnly": true
        },
        "properties": {
          "$ref": "#/definitions/VolumeGroupListProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "VolumeGroupDetails__added": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/VolumeGroupProperties",
          "x-ms-client-flatten": true
        },
        "location": {
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "VolumeGroupList__added": {
      "type": "object",
      "description": "[Placeholder] Discription for page model",
      "properties": {
        "value": {
          "type": "array",
          "description": "[Placeholder] Discription for value property",
          "items": {
            "$ref": "#/definitions/VolumeGroup"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "[Placeholder] Discription for nextLink property"
        }
      },
      "required": [
        "value"
      ]
    },
    "VolumeGroupListProperties__added": {
      "type": "object",
      "properties": {
        "provisioningState": {
          "type": "string",
          "readOnly": true
        },
        "groupMetaData": {
          "$ref": "#/definitions/VolumeGroupMetaData"
        }
      }
    },
    "VolumeGroupMetaData__added": {
      "type": "object",
      "properties": {
        "groupDescription": {
          "type": "string"
        },
        "applicationType": {
          "type": "string",
          "enum": [
            "SAP-HANA",
            "ORACLE"
          ],
          "x-ms-enum": {
            "name": "ApplicationType",
            "modelAsString": true
          }
        },
        "applicationIdentifier": {
          "type": "string"
        },
        "globalPlacementRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PlacementKeyValuePairs"
          },
          "x-ms-identifiers": [
            "key"
          ]
        },
        "volumesCount": {
          "type": "integer",
          "format": "int64",
          "readOnly": true
        }
      }
    },
    "VolumeGroupProperties__added": {
      "type": "object",
      "properties": {
        "provisioningState": {
          "type": "string",
          "readOnly": true
        },
        "groupMetaData": {
          "$ref": "#/definitions/VolumeGroupMetaData"
        },
        "volumes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VolumeGroupVolumeProperties"
          }
        }
      }
    },
    "VolumeGroupVolumeProperties__added": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "readOnly": true
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "readOnly": true
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "zones": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "properties": {
          "$ref": "#/definitions/VolumeProperties",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "properties"
      ]
    },
    "VolumeList__added": {
      "type": "object",
      "description": "[Placeholder] Discription for page model",
      "properties": {
        "value": {
          "type": "array",
          "description": "[Placeholder] Discription for value property",
          "items": {
            "$ref": "#/definitions/Volume"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "[Placeholder] Discription for nextLink property"
        }
      },
      "required": [
        "value"
      ]
    },
    "VolumePatch__added": {
      "type": "object",
      "properties": {
        "location": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "readOnly": true
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "$ref": "#/definitions/VolumePatchProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "VolumePatchProperties__added": {
      "type": "object",
      "properties": {
        "serviceLevel": {
          "type": "string",
          "default": "Premium",
          "enum": [
            "Standard",
            "Premium",
            "Ultra",
            "StandardZRS",
            "Flexible"
          ],
          "x-ms-enum": {
            "name": "ServiceLevel",
            "modelAsString": true
          }
        },
        "usageThreshold": {
          "type": "integer",
          "format": "int64",
          "default": 107374182400,
          "minimum": 53687091200,
          "maximum": 2638827906662400
        },
        "exportPolicy": {
          "$ref": "#/definitions/VolumePatchPropertiesExportPolicy"
        },
        "protocolTypes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "throughputMibps": {
          "type": "number",
          "format": "float"
        },
        "dataProtection": {
          "$ref": "#/definitions/VolumePatchPropertiesDataProtection"
        },
        "isDefaultQuotaEnabled": {
          "type": "boolean"
        },
        "defaultUserQuotaInKiBs": {
          "type": "integer",
          "format": "int64"
        },
        "defaultGroupQuotaInKiBs": {
          "type": "integer",
          "format": "int64"
        },
        "unixPermissions": {
          "type": "string",
          "minLength": 4,
          "maxLength": 4
        },
        "coolAccess": {
          "type": "boolean"
        },
        "coolnessPeriod": {
          "type": "integer",
          "format": "int32",
          "minimum": 2,
          "maximum": 183
        },
        "coolAccessRetrievalPolicy": {
          "type": "string",
          "enum": [
            "Default",
            "OnRead",
            "Never"
          ],
          "x-ms-enum": {
            "name": "CoolAccessRetrievalPolicy",
            "modelAsString": true
          }
        },
        "coolAccessTieringPolicy": {
          "type": "string",
          "enum": [
            "Auto",
            "SnapshotOnly"
          ],
          "x-ms-enum": {
            "name": "CoolAccessTieringPolicy",
            "modelAsString": true
          }
        },
        "snapshotDirectoryVisible": {
          "type": "boolean"
        },
        "smbAccessBasedEnumeration": {
          "type": "string",
          "enum": [
            "Disabled",
            "Enabled"
          ],
          "x-ms-enum": {
            "name": "SmbAccessBasedEnumeration",
            "modelAsString": true
          }
        },
        "smbNonBrowsable": {
          "type": "string",
          "enum": [
            "Disabled",
            "Enabled"
          ],
          "x-ms-enum": {
            "name": "SmbNonBrowsable",
            "modelAsString": true
          }
        }
      }
    },
    "VolumePatchPropertiesDataProtection__added": {
      "type": "object",
      "properties": {
        "backup": {
          "$ref": "#/definitions/VolumeBackupProperties"
        },
        "snapshot": {
          "$ref": "#/definitions/VolumeSnapshotProperties"
        }
      }
    },
    "VolumePatchPropertiesExportPolicy__added": {
      "type": "object",
      "properties": {
        "rules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExportPolicyRule"
          },
          "x-ms-identifiers": [
            "ruleIndex"
          ]
        }
      }
    },
    "VolumeProperties__added": {
      "type": "object",
      "properties": {
        "fileSystemId": {
          "type": "string",
          "minLength": 36,
          "maxLength": 36,
          "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
          "readOnly": true
        },
        "creationToken": {
          "type": "string",
          "minLength": 1,
          "maxLength": 80,
          "pattern": "^[a-zA-Z][a-zA-Z0-9\\-]{0,79}$",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "serviceLevel": {
          "type": "string",
          "default": "Premium",
          "enum": [
            "Standard",
            "Premium",
            "Ultra",
            "StandardZRS",
            "Flexible"
          ],
          "x-ms-enum": {
            "name": "ServiceLevel",
            "modelAsString": true
          }
        },
        "usageThreshold": {
          "type": "integer",
          "format": "int64",
          "default": 107374182400,
          "minimum": 53687091200,
          "maximum": 2638827906662400
        },
        "exportPolicy": {
          "$ref": "#/definitions/VolumePropertiesExportPolicy"
        },
        "protocolTypes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "provisioningState": {
          "type": "string",
          "readOnly": true
        },
        "snapshotId": {
          "type": "string",
          "format": "arm-id",
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.NetApp/netAppAccounts/capacityPools/volumes/snapshots"
              }
            ]
          }
        },
        "deleteBaseSnapshot": {
          "type": "boolean"
        },
        "backupId": {
          "type": "string",
          "format": "arm-id",
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.NetApp/netAppAccounts/backupVaults/backups"
              }
            ]
          }
        },
        "baremetalTenantId": {
          "type": "string",
          "readOnly": true
        },
        "subnetId": {
          "type": "string"
        },
        "networkFeatures": {
          "type": "string",
          "default": "Basic",
          "enum": [
            "Basic",
            "Standard",
            "Basic_Standard",
            "Standard_Basic"
          ],
          "x-ms-enum": {
            "name": "NetworkFeatures",
            "modelAsString": true
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "effectiveNetworkFeatures": {
          "type": "string",
          "default": "Basic",
          "enum": [
            "Basic",
            "Standard",
            "Basic_Standard",
            "Standard_Basic"
          ],
          "x-ms-enum": {
            "name": "NetworkFeatures",
            "modelAsString": true
          },
          "readOnly": true
        },
        "networkSiblingSetId": {
          "type": "string",
          "minLength": 36,
          "maxLength": 36,
          "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
          "readOnly": true
        },
        "storageToNetworkProximity": {
          "type": "string",
          "enum": [
            "Default",
            "T1",
            "T2",
            "AcrossT2"
          ],
          "x-ms-enum": {
            "name": "VolumeStorageToNetworkProximity",
            "modelAsString": true
          },
          "readOnly": true
        },
        "mountTargets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MountTargetProperties"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "fileSystemId"
          ]
        },
        "volumeType": {
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "dataProtection": {
          "$ref": "#/definitions/VolumePropertiesDataProtection"
        },
        "acceptGrowCapacityPoolForShortTermCloneSplit": {
          "type": "string",
          "enum": [
            "Accepted",
            "Declined"
          ],
          "x-ms-enum": {
            "name": "AcceptGrowCapacityPoolForShortTermCloneSplit",
            "modelAsString": true
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "isRestoring": {
          "type": "boolean",
          "readOnly": true
        },
        "snapshotDirectoryVisible": {
          "type": "boolean",
          "default": true
        },
        "kerberosEnabled": {
          "type": "boolean",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "securityStyle": {
          "type": "string",
          "default": "unix",
          "enum": [
            "ntfs",
            "unix"
          ],
          "x-ms-enum": {
            "name": "SecurityStyle",
            "modelAsString": true
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "smbEncryption": {
          "type": "boolean"
        },
        "smbAccessBasedEnumeration": {
          "type": "string",
          "enum": [
            "Disabled",
            "Enabled"
          ],
          "x-ms-enum": {
            "name": "SmbAccessBasedEnumeration",
            "modelAsString": true
          }
        },
        "smbNonBrowsable": {
          "type": "string",
          "enum": [
            "Disabled",
            "Enabled"
          ],
          "x-ms-enum": {
            "name": "SmbNonBrowsable",
            "modelAsString": true
          }
        },
        "smbContinuouslyAvailable": {
          "type": "boolean"
        },
        "throughputMibps": {
          "type": "number",
          "format": "float"
        },
        "actualThroughputMibps": {
          "type": "number",
          "format": "float",
          "readOnly": true
        },
        "encryptionKeySource": {
          "type": "string",
          "default": "Microsoft.NetApp",
          "enum": [
            "Microsoft.NetApp",
            "Microsoft.KeyVault"
          ],
          "x-ms-enum": {
            "name": "EncryptionKeySource",
            "modelAsString": true
          }
        },
        "keyVaultPrivateEndpointResourceId": {
          "type": "string"
        },
        "ldapEnabled": {
          "type": "boolean",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "coolAccess": {
          "type": "boolean"
        },
        "coolnessPeriod": {
          "type": "integer",
          "format": "int32",
          "minimum": 2,
          "maximum": 183
        },
        "coolAccessRetrievalPolicy": {
          "type": "string",
          "enum": [
            "Default",
            "OnRead",
            "Never"
          ],
          "x-ms-enum": {
            "name": "CoolAccessRetrievalPolicy",
            "modelAsString": true
          }
        },
        "coolAccessTieringPolicy": {
          "type": "string",
          "enum": [
            "Auto",
            "SnapshotOnly"
          ],
          "x-ms-enum": {
            "name": "CoolAccessTieringPolicy",
            "modelAsString": true
          }
        },
        "unixPermissions": {
          "type": "string",
          "minLength": 4,
          "maxLength": 4
        },
        "cloneProgress": {
          "type": "integer",
          "format": "int32",
          "readOnly": true
        },
        "fileAccessLogs": {
          "type": "string",
          "default": "Disabled",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "FileAccessLogs",
            "modelAsString": true
          },
          "readOnly": true
        },
        "avsDataStore": {
          "type": "string",
          "default": "Disabled",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "AvsDataStore",
            "modelAsString": true
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "dataStoreResourceId": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "isDefaultQuotaEnabled": {
          "type": "boolean"
        },
        "defaultUserQuotaInKiBs": {
          "type": "integer",
          "format": "int64"
        },
        "defaultGroupQuotaInKiBs": {
          "type": "integer",
          "format": "int64"
        },
        "maximumNumberOfFiles": {
          "type": "integer",
          "format": "int64",
          "readOnly": true
        },
        "volumeGroupName": {
          "type": "string",
          "readOnly": true
        },
        "capacityPoolResourceId": {
          "type": "string"
        },
        "proximityPlacementGroup": {
          "type": "string"
        },
        "t2Network": {
          "type": "string",
          "readOnly": true
        },
        "volumeSpecName": {
          "type": "string"
        },
        "encrypted": {
          "type": "boolean",
          "readOnly": true
        },
        "placementRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PlacementKeyValuePairs"
          },
          "x-ms-identifiers": [
            "key"
          ]
        },
        "enableSubvolumes": {
          "type": "string",
          "default": "Disabled",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "EnableSubvolumes",
            "modelAsString": true
          }
        },
        "provisionedAvailabilityZone": {
          "type": "string",
          "readOnly": true
        },
        "isLargeVolume": {
          "type": "boolean",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "originatingResourceId": {
          "type": "string",
          "readOnly": true
        },
        "inheritedSizeInBytes": {
          "type": "integer",
          "format": "int64",
          "readOnly": true
        }
      },
      "required": [
        "creationToken",
        "subnetId",
        "usageThreshold"
      ]
    },
    "VolumePropertiesDataProtection__added": {
      "type": "object",
      "properties": {
        "backup": {
          "$ref": "#/definitions/VolumeBackupProperties"
        },
        "replication": {
          "$ref": "#/definitions/ReplicationObject"
        },
        "snapshot": {
          "$ref": "#/definitions/VolumeSnapshotProperties"
        },
        "volumeRelocation": {
          "$ref": "#/definitions/VolumeRelocationProperties"
        }
      }
    },
    "VolumePropertiesExportPolicy__added": {
      "type": "object",
      "properties": {
        "rules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExportPolicyRule"
          },
          "x-ms-identifiers": [
            "ruleIndex"
          ]
        }
      }
    },
    "VolumeQuotaRule__added": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/VolumeQuotaRulesProperties",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "VolumeQuotaRulePatch__added": {
      "type": "object",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "$ref": "#/definitions/VolumeQuotaRulesProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "VolumeQuotaRulesList__added": {
      "type": "object",
      "description": "[Placeholder] Discription for page model",
      "properties": {
        "value": {
          "type": "array",
          "description": "[Placeholder] Discription for value property",
          "items": {
            "$ref": "#/definitions/VolumeQuotaRule"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "[Placeholder] Discription for nextLink property"
        }
      },
      "required": [
        "value"
      ]
    },
    "VolumeQuotaRulesProperties__added": {
      "type": "object",
      "properties": {
        "provisioningState": {
          "type": "string",
          "enum": [
            "Accepted",
            "Creating",
            "Patching",
            "Deleting",
            "Moving",
            "Failed",
            "Succeeded"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": false
          },
          "readOnly": true
        },
        "quotaSizeInKiBs": {
          "type": "integer",
          "format": "int64"
        },
        "quotaType": {
          "type": "string",
          "enum": [
            "DefaultUserQuota",
            "DefaultGroupQuota",
            "IndividualUserQuota",
            "IndividualGroupQuota"
          ],
          "x-ms-enum": {
            "name": "Type",
            "modelAsString": true
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "quotaTarget": {
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      }
    },
    "VolumeRelocationProperties__added": {
      "type": "object",
      "properties": {
        "relocationRequested": {
          "type": "boolean"
        },
        "readyToBeFinalized": {
          "type": "boolean",
          "readOnly": true
        }
      }
    },
    "VolumeRevert__added": {
      "type": "object",
      "properties": {
        "snapshotId": {
          "type": "string",
          "format": "arm-id",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.NetApp/netAppAccounts/capacityPools/volumes/snapshots"
              }
            ]
          }
        }
      }
    },
    "VolumeSnapshotProperties__added": {
      "type": "object",
      "properties": {
        "snapshotPolicyId": {
          "type": "string"
        }
      }
    },
    "WeeklySchedule__added": {
      "type": "object",
      "properties": {
        "snapshotsToKeep": {
          "type": "integer",
          "format": "int32"
        },
        "day": {
          "type": "string"
        },
        "hour": {
          "type": "integer",
          "format": "int32"
        },
        "minute": {
          "type": "integer",
          "format": "int32"
        },
        "usedBytes": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "EncryptionIdentity": {
      "properties": {
        "federatedClientId": {
          "example__deleted": "87654321-1234-1234-1234-876543214321"
        }
      }
    },
    "FilePathAvailabilityRequest": {
      "properties": {
        "availabilityZone": {
          "title__deleted": "Logical availability zone",
          "x-nullable__deleted": true,
          "example__deleted": "1"
        }
      }
    },
    "KeyVaultProperties": {
      "properties": {
        "keyVaultId": {
          "example__deleted": "9760acf5-4638-11e7-9bdb-020073ca7778"
        },
        "status": {
          "enum": [
            [
              " "
            ],
            [
              "-",
              "Updating"
            ],
            [
              " "
            ],
            [
              " "
            ],
            [
              " "
            ],
            [
              "+",
              "Updating"
            ]
          ]
        }
      }
    },
    "Operation": {
      "properties": {
        "display": {
          "type__deleted": "object",
          "properties__deleted": {
            "provider": {
              "type": "string",
              "description": "Service provider: Microsoft NetApp."
            },
            "resource": {
              "type": "string",
              "description": "Resource on which the operation is performed etc."
            },
            "operation": {
              "type": "string",
              "description": "Type of operation: get, read, delete, etc."
            },
            "description": {
              "type": "string",
              "description": "Operation description."
            }
          },
          "$ref__added": "#/definitions/OperationDisplay"
        }
      }
    },
    "OperationListResult": {
      "required__added": [
        "value"
      ],
      "properties": {
        "value": {
          "x-ms-identifiers__deleted": [
            "name"
          ]
        }
      }
    },
    "QueryNetworkSiblingSetRequest": {
      "title__deleted": "QueryNetworkSiblingSetRequest",
      "properties": {
        "networkSiblingSetId": {
          "title__deleted": "Network Sibling Set ID",
          "example__deleted": "9760acf5-4638-11e7-9bdb-020073ca3333"
        },
        "subnetId": {
          "title__deleted": "Subnet resource Id",
          "x-ms-mutability__deleted": [
            "create",
            "read"
          ]
        }
      }
    },
    "SubscriptionQuotaItemList": {
      "required__added": [
        "value"
      ]
    },
    "UpdateNetworkSiblingSetRequest": {
      "title__deleted": "UpdateNetworkSiblingSetRequest",
      "properties": {
        "networkSiblingSetId": {
          "title__deleted": "Network Sibling Set ID",
          "example__deleted": "9760acf5-4638-11e7-9bdb-020073ca3333"
        },
        "subnetId": {
          "title__deleted": "Subnet resource Id",
          "x-ms-mutability__deleted": [
            "create",
            "read"
          ]
        },
        "networkSiblingSetStateId": {
          "title__deleted": "Network sibling set state Id",
          "example__deleted": "12345_44420.8001578125"
        },
        "networkFeatures": {
          "title__deleted": "Network features",
          "example__deleted": "Standard"
        }
      }
    },
    "UsageResult": {
      "properties": {
        "name": {
          "readOnly__added": true,
          "$ref": {
            "__old": "#/definitions/usageName",
            "__new": "#/definitions/UsageName"
          }
        },
        "properties": {
          "$ref": {
            "__old": "#/definitions/usageProperties",
            "__new": "#/definitions/UsageProperties"
          }
        }
      }
    },
    "UsagesListResult": {
      "required__added": [
        "value"
      ]
    }
  }
}