{
  "swagger": "2.0",
  "info": {
    "title": "Microsoft NetApp",
    "version": "2025-06-01",
    "description": "Microsoft NetApp Azure Resource Provider specification",
    "x-ms-code-generation-settings": {
      "name": "AzureNetAppFilesManagementClient"
    }
  },
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "paths": {
    "/providers/microsoft.NetApp/operations": {
      "get": {
        "operationId": "Operations_List",
        "parameters": [],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "OperationList": {
            "$ref": "examples/OperationList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/microsoft.NetApp/locations/{location}/checkFilePathAvailability": {
      "post": {
        "operationId": "NetAppResource_CheckFilePathAvailability",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FilePathAvailabilityRequest"
            }
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/LocationParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/CheckAvailabilityResponse"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CheckFilePathAvailability": {
            "$ref": "examples/CheckFilePathAvailability.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/microsoft.NetApp/locations/{location}/checkNameAvailability": {
      "post": {
        "operationId": "NetAppResource_CheckNameAvailability",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ResourceNameAvailabilityRequest"
            }
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/LocationParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/CheckAvailabilityResponse"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CheckNameAvailability": {
            "$ref": "examples/CheckNameAvailability.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/microsoft.NetApp/locations/{location}/checkQuotaAvailability": {
      "post": {
        "operationId": "NetAppResource_CheckQuotaAvailability",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/QuotaAvailabilityRequest"
            }
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/LocationParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/CheckAvailabilityResponse"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CheckQuotaAvailability": {
            "$ref": "examples/CheckQuotaAvailability.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/microsoft.NetApp/locations/{location}/queryNetworkSiblingSet": {
      "post": {
        "operationId": "NetAppResource_QueryNetworkSiblingSet",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/QueryNetworkSiblingSetRequest"
            }
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/LocationParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/networkSiblingSet"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NetworkSiblingSet_Query": {
            "$ref": "examples/NetworkSiblingSet_Query.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/microsoft.NetApp/locations/{location}/quotaLimits": {
      "get": {
        "operationId": "NetAppResourceQuotaLimits_List",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/LocationParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/SubscriptionQuotaItemList"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "QuotaLimits": {
            "$ref": "examples/QuotaLimits_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/microsoft.NetApp/locations/{location}/quotaLimits/{quotaLimitName}": {
      "get": {
        "operationId": "NetAppResourceQuotaLimits_Get",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/LocationParameter"
          },
          {
            "name": "quotaLimitName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-]{0,62}$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/SubscriptionQuotaItem"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "QuotaLimits": {
            "$ref": "examples/QuotaLimits_Get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/microsoft.NetApp/locations/{location}/regionInfo": {
      "get": {
        "operationId": "NetAppResource_QueryRegionInfo",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/LocationParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/regionInfo"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "RegionInfo_Query": {
            "$ref": "examples/RegionInfo.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/microsoft.NetApp/locations/{location}/regionInfos": {
      "get": {
        "operationId": "NetAppResourceRegionInfos_List",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/LocationParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/regionInfosList"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "RegionInfos_List": {
            "$ref": "examples/RegionInfos_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/microsoft.NetApp/locations/{location}/regionInfos/default": {
      "get": {
        "operationId": "NetAppResourceRegionInfos_Get",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/LocationParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/regionInfoResource"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "RegionInfos_Get": {
            "$ref": "examples/RegionInfos_Get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/microsoft.NetApp/locations/{location}/updateNetworkSiblingSet": {
      "post": {
        "operationId": "NetAppResource_UpdateNetworkSiblingSet",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateNetworkSiblingSetRequest"
            }
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/LocationParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/networkSiblingSet"
            }
          },
          "202": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NetworkFeatures_Update": {
            "$ref": "examples/NetworkSiblingSet_Update.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/providers/microsoft.NetApp/locations/{location}/usages": {
      "get": {
        "operationId": "NetAppResourceUsages_List",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/LocationParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/UsagesListResult"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Usages_List": {
            "$ref": "examples/Usages_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/microsoft.NetApp/locations/{location}/usages/{usageType}": {
      "get": {
        "operationId": "NetAppResourceUsages_Get",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/LocationParameter"
          },
          {
            "name": "usageType",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/UsageResult"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Usages_Get": {
            "$ref": "examples/Usages_Get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/microsoft.NetApp/netAppAccounts": {
      "get": {
        "operationId": "Accounts_ListBySubscription",
        "parameters": [],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/netAppAccountList"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Accounts_List": {
            "$ref": "examples/Accounts_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.NetApp/netAppAccounts": {
      "get": {
        "operationId": "Accounts_List",
        "parameters": [],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/netAppAccountList"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Accounts_List": {
            "$ref": "examples/Accounts_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.NetApp/netAppAccounts/{accountName}": {
      "get": {
        "operationId": "Accounts_Get",
        "parameters": [
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/netAppAccount"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Accounts_Get": {
            "$ref": "examples/Accounts_Get.json"
          }
        }
      },
      "put": {
        "operationId": "Accounts_CreateOrUpdate",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/netAppAccount"
            }
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/netAppAccount"
            }
          },
          "201": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/netAppAccount"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Accounts_CreateOrUpdate": {
            "$ref": "examples/Accounts_CreateOrUpdate.json"
          },
          "Accounts_CreateOrUpdateWithActiveDirectory": {
            "$ref": "examples/Accounts_CreateOrUpdateAD.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "Accounts_Update",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/netAppAccountPatch"
            }
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/netAppAccount"
            }
          },
          "202": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/netAppAccount"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Accounts_Update": {
            "$ref": "examples/Accounts_Update.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "Accounts_Delete",
        "parameters": [
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          }
        ],
        "responses": {
          "202": {
            "description": "ignore"
          },
          "204": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Accounts_Delete": {
            "$ref": "examples/Accounts_Delete.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.NetApp/netAppAccounts/{accountName}/backupPolicies": {
      "get": {
        "operationId": "BackupPolicies_List",
        "parameters": [
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/backupPoliciesList"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "BackupPolicies_List": {
            "$ref": "examples/BackupPolicies_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.NetApp/netAppAccounts/{accountName}/backupPolicies/{backupPolicyName}": {
      "get": {
        "operationId": "BackupPolicies_Get",
        "parameters": [
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "backupPolicyName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/backupPolicy"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Backups_Get": {
            "$ref": "examples/BackupPolicies_Get.json"
          }
        }
      },
      "put": {
        "operationId": "BackupPolicies_Create",
        "parameters": [
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "backupPolicyName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/backupPolicy"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/backupPolicy"
            }
          },
          "201": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/backupPolicy"
            }
          },
          "202": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "BackupPolicies_Create": {
            "$ref": "examples/BackupPolicies_Create.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "BackupPolicies_Update",
        "parameters": [
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "backupPolicyName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/backupPolicyPatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/backupPolicy"
            }
          },
          "202": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/backupPolicy"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "BackupPolicies_Update": {
            "$ref": "examples/BackupPolicies_Update.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "BackupPolicies_Delete",
        "parameters": [
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "backupPolicyName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore"
          },
          "202": {
            "description": "ignore"
          },
          "204": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "BackupPolicies_Delete": {
            "$ref": "examples/BackupPolicies_Delete.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.NetApp/netAppAccounts/{accountName}/backupVaults": {
      "get": {
        "operationId": "BackupVaults_ListByNetAppAccount",
        "parameters": [
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/backupVaultsList"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "BackupVaults_List": {
            "$ref": "examples/BackupVaults_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.NetApp/netAppAccounts/{accountName}/backupVaults/{backupVaultName}": {
      "get": {
        "operationId": "BackupVaults_Get",
        "parameters": [
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "backupVaultName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/backupVault"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "BackupVaults_Get": {
            "$ref": "examples/BackupVaults_Get.json"
          }
        }
      },
      "put": {
        "operationId": "BackupVaults_CreateOrUpdate",
        "parameters": [
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "backupVaultName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/backupVault"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/backupVault"
            }
          },
          "201": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/backupVault"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "BackupVault_CreateOrUpdate": {
            "$ref": "examples/BackupVaults_Create.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "BackupVaults_Update",
        "parameters": [
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "backupVaultName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/backupVaultPatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/backupVault"
            }
          },
          "202": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/backupVault"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "BackupVaults_Update": {
            "$ref": "examples/BackupVaults_Update.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "BackupVaults_Delete",
        "parameters": [
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "backupVaultName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$"
          }
        ],
        "responses": {
          "202": {
            "description": "ignore"
          },
          "204": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "BackupVaults_Delete": {
            "$ref": "examples/BackupVaults_Delete.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.NetApp/netAppAccounts/{accountName}/backupVaults/{backupVaultName}/backups": {
      "get": {
        "operationId": "Backups_ListByVault",
        "parameters": [
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "backupVaultName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "$filter",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/backupsList"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Backups_List": {
            "$ref": "examples/BackupsUnderBackupVault_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.NetApp/netAppAccounts/{accountName}/backupVaults/{backupVaultName}/backups/{backupName}": {
      "get": {
        "operationId": "Backups_Get",
        "parameters": [
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "backupVaultName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "backupName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_.]{0,255}$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/backup"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "BackupsUnderBackupVault_Get": {
            "$ref": "examples/BackupsUnderBackupVault_Get.json"
          }
        }
      },
      "put": {
        "operationId": "Backups_Create",
        "parameters": [
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "backupVaultName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "backupName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_.]{0,255}$"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/backup"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/backup"
            }
          },
          "201": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/backup"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "BackupsUnderBackupVault_Create": {
            "$ref": "examples/BackupsUnderBackupVault_Create.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "Backups_Update",
        "parameters": [
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "backupVaultName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "backupName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_.]{0,255}$"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/backupPatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/backup"
            }
          },
          "202": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/backup"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "BackupsUnderBackupVault_Update": {
            "$ref": "examples/BackupsUnderBackupVault_Update.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "Backups_Delete",
        "parameters": [
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "backupVaultName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "backupName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_.]{0,255}$"
          }
        ],
        "responses": {
          "202": {
            "description": "ignore"
          },
          "204": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "BackupsUnderBackupVault_Delete": {
            "$ref": "examples/BackupsUnderBackupVault_Delete.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.NetApp/netAppAccounts/{accountName}/backupVaults/{backupVaultName}/backups/{backupName}/restoreFiles": {
      "post": {
        "operationId": "BackupsUnderBackupVault_RestoreFiles",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/backupRestoreFiles"
            }
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "backupVaultName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "backupName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_.]{0,255}$"
          }
        ],
        "responses": {
          "202": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Backups_SingleFileRestore": {
            "$ref": "examples/BackupsUnderBackupVault_SingleFileRestore.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.NetApp/netAppAccounts/{accountName}/capacityPools": {
      "get": {
        "operationId": "Pools_List",
        "parameters": [
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/capacityPoolList"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Pools_List": {
            "$ref": "examples/Pools_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}": {
      "get": {
        "operationId": "Pools_Get",
        "parameters": [
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "poolName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/capacityPool"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Pools_Get": {
            "$ref": "examples/Pools_Get.json"
          },
          "Pools_Get_CustomThroughput": {
            "$ref": "examples/Pools_Get_CustomThroughput.json"
          }
        }
      },
      "put": {
        "operationId": "Pools_CreateOrUpdate",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/capacityPool"
            }
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "poolName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/capacityPool"
            }
          },
          "201": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/capacityPool"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Pools_CreateOrUpdate": {
            "$ref": "examples/Pools_CreateOrUpdate.json"
          },
          "Pools_CreateOrUpdate_CustomThroughput": {
            "$ref": "examples/Pools_CreateOrUpdate_CustomThroughput.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "Pools_Update",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/capacityPoolPatch"
            }
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "poolName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/capacityPool"
            }
          },
          "202": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Pools_Update": {
            "$ref": "examples/Pools_Update.json"
          },
          "Pools_Update_CustomThroughput": {
            "$ref": "examples/Pools_Update_CustomThroughput.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "Pools_Delete",
        "parameters": [
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "poolName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$"
          }
        ],
        "responses": {
          "202": {
            "description": "ignore"
          },
          "204": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Pools_Delete": {
            "$ref": "examples/Pools_Delete.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes": {
      "get": {
        "operationId": "Volumes_List",
        "parameters": [
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "poolName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/volumeList"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Volumes_List": {
            "$ref": "examples/Volumes_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}": {
      "get": {
        "operationId": "Volumes_Get",
        "parameters": [
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "poolName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "volumeName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/volume"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Volumes_Get": {
            "$ref": "examples/Volumes_Get.json"
          }
        }
      },
      "put": {
        "operationId": "Volumes_CreateOrUpdate",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/volume"
            }
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "poolName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "volumeName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/volume"
            }
          },
          "201": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/volume"
            }
          },
          "202": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Volumes_CreateOrUpdate": {
            "$ref": "examples/Volumes_CreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "Volumes_Update",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/volumePatch"
            }
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "poolName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "volumeName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/volume"
            }
          },
          "202": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Volumes_Update": {
            "$ref": "examples/Volumes_Update.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "Volumes_Delete",
        "parameters": [
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "poolName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "volumeName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "forceDelete",
            "in": "query",
            "type": "boolean"
          }
        ],
        "responses": {
          "202": {
            "description": "ignore"
          },
          "204": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Volumes_Delete": {
            "$ref": "examples/Volumes_Delete.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/authorizeExternalReplication": {
      "post": {
        "operationId": "Volumes_AuthorizeExternalReplication",
        "parameters": [
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "poolName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "volumeName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/svmPeerCommandResponse"
            }
          },
          "202": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Volumes_AuthorizeExternalReplication": {
            "$ref": "examples/Volumes_AuthorizeExternalReplication.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/authorizeReplication": {
      "post": {
        "operationId": "Volumes_AuthorizeReplication",
        "parameters": [
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "poolName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "volumeName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/authorizeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore"
          },
          "202": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Volumes_AuthorizeReplication": {
            "$ref": "examples/Volumes_AuthorizeReplication.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/breakFileLocks": {
      "post": {
        "operationId": "Volumes_BreakFileLocks",
        "parameters": [
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "poolName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "volumeName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/breakFileLocksRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore"
          },
          "202": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Volumes_BreakFileLocks": {
            "$ref": "examples/Volumes_BreakFileLocks.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/breakReplication": {
      "post": {
        "operationId": "Volumes_BreakReplication",
        "parameters": [
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "poolName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "volumeName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/breakReplicationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore"
          },
          "202": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Volumes_BreakReplication": {
            "$ref": "examples/Volumes_BreakReplication.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/deleteReplication": {
      "post": {
        "operationId": "Volumes_DeleteReplication",
        "parameters": [
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "poolName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "volumeName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore"
          },
          "202": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Volumes_DeleteReplication": {
            "$ref": "examples/Volumes_DeleteReplication.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/finalizeExternalReplication": {
      "post": {
        "operationId": "Volumes_FinalizeExternalReplication",
        "parameters": [
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "poolName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "volumeName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$"
          }
        ],
        "responses": {
          "202": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Volumes_FinalizeExternalReplication": {
            "$ref": "examples/Volumes_FinalizeExternalReplication.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/finalizeRelocation": {
      "post": {
        "operationId": "Volumes_FinalizeRelocation",
        "parameters": [
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "poolName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "volumeName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore"
          },
          "202": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Volumes_FinalizeRelocation": {
            "$ref": "examples/Volumes_FinalizeRelocation.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/getGroupIdListForLdapUser": {
      "post": {
        "operationId": "Volumes_ListGetGroupIdListForLdapUser",
        "parameters": [
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "poolName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "volumeName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/getGroupIdListForLDAPUserRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/getGroupIdListForLDAPUserResponse"
            }
          },
          "202": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "GetGroupIdListForUser": {
            "$ref": "examples/GroupIdListForLDAPUser.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/latestBackupStatus/current": {
      "get": {
        "operationId": "Backups_GetLatestStatus",
        "parameters": [
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "poolName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "volumeName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/backupStatus"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Volumes_BackupStatus": {
            "$ref": "examples/Volumes_LatestBackupStatus.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/latestRestoreStatus/current": {
      "get": {
        "operationId": "Backups_GetVolumeLatestRestoreStatus",
        "parameters": [
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "poolName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "volumeName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/restoreStatus"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Volumes_RestoreStatus": {
            "$ref": "examples/Volumes_LatestRestoreStatus.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/listReplications": {
      "post": {
        "operationId": "Volumes_ListReplications",
        "parameters": [
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "poolName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "volumeName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/listReplications"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Volumes_ListReplications": {
            "$ref": "examples/Volumes_ListReplications.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/migrateBackups": {
      "post": {
        "operationId": "BackupsUnderVolume_MigrateBackups",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/backupsMigrationRequest"
            }
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "poolName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "volumeName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$"
          }
        ],
        "responses": {
          "202": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "BackupsUnderVolume_Migrate": {
            "$ref": "examples/BackupsUnderVolume_Migrate.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/peerExternalCluster": {
      "post": {
        "operationId": "Volumes_PeerExternalCluster",
        "parameters": [
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "poolName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "volumeName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/peerClusterForVolumeMigrationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/clusterPeerCommandResponse"
            }
          },
          "202": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Volumes_PeerExternalCluster": {
            "$ref": "examples/Volumes_PeerExternalCluster.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/performReplicationTransfer": {
      "post": {
        "operationId": "Volumes_PerformReplicationTransfer",
        "parameters": [
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "poolName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "volumeName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$"
          }
        ],
        "responses": {
          "202": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Volumes_PerformReplicationTransfer": {
            "$ref": "examples/Volumes_PerformReplicationTransfer.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/poolChange": {
      "post": {
        "operationId": "Volumes_PoolChange",
        "parameters": [
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "poolName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "volumeName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/poolChangeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore"
          },
          "202": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Volumes_AuthorizeReplication": {
            "$ref": "examples/Volumes_PoolChange.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/populateAvailabilityZone": {
      "post": {
        "operationId": "Volumes_PopulateAvailabilityZone",
        "parameters": [
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "poolName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "volumeName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/volume"
            }
          },
          "202": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Volumes_PopulateAvailabilityZones": {
            "$ref": "examples/Volumes_PopulateAvailabilityZones.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/reestablishReplication": {
      "post": {
        "operationId": "Volumes_ReestablishReplication",
        "parameters": [
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "poolName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "volumeName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/reestablishReplicationRequest"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Volumes_ReestablishReplication": {
            "$ref": "examples/Volumes_ReestablishReplication.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/reinitializeReplication": {
      "post": {
        "operationId": "Volumes_ReInitializeReplication",
        "parameters": [
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "poolName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "volumeName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore"
          },
          "202": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Volumes_ReInitializeReplication": {
            "$ref": "examples/Volumes_ReInitializeReplication.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/relocate": {
      "post": {
        "operationId": "Volumes_Relocate",
        "parameters": [
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "poolName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "volumeName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/relocateVolumeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore"
          },
          "202": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Volumes_Relocate": {
            "$ref": "examples/Volumes_Relocate.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/replicationStatus": {
      "get": {
        "operationId": "Volumes_ReplicationStatus",
        "parameters": [
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "poolName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "volumeName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/replicationStatus"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Volumes_ReplicationStatus": {
            "$ref": "examples/Volumes_ReplicationStatus.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/resetCifsPassword": {
      "post": {
        "operationId": "Volumes_ResetCifsPassword",
        "parameters": [
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "poolName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "volumeName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$"
          }
        ],
        "responses": {
          "202": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Volumes_ResetCifsPassword": {
            "$ref": "examples/Volumes_ResetCifsPassword.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/resyncReplication": {
      "post": {
        "operationId": "Volumes_ResyncReplication",
        "parameters": [
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "poolName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "volumeName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore"
          },
          "202": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Volumes_ResyncReplication": {
            "$ref": "examples/Volumes_ResyncReplication.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/revert": {
      "post": {
        "operationId": "Volumes_Revert",
        "parameters": [
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "poolName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "volumeName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/volumeRevert"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore"
          },
          "202": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Volumes_Revert": {
            "$ref": "examples/Volumes_Revert.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/revertRelocation": {
      "post": {
        "operationId": "Volumes_RevertRelocation",
        "parameters": [
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "poolName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "volumeName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore"
          },
          "202": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Volumes_RevertRelocation": {
            "$ref": "examples/Volumes_RevertRelocation.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/snapshots": {
      "get": {
        "operationId": "Snapshots_List",
        "parameters": [
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "poolName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "volumeName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/snapshotsList"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Snapshots_List": {
            "$ref": "examples/Snapshots_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/snapshots/{snapshotName}": {
      "get": {
        "operationId": "Snapshots_Get",
        "parameters": [
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "poolName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "volumeName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "snapshotName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/snapshot"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Snapshots_Get": {
            "$ref": "examples/Snapshots_Get.json"
          }
        }
      },
      "put": {
        "operationId": "Snapshots_Create",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/snapshot"
            }
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "poolName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "volumeName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "snapshotName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/snapshot"
            }
          },
          "202": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Snapshots_Create": {
            "$ref": "examples/Snapshots_Create.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "Snapshots_Update",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/snapshotPatch"
            }
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "poolName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "volumeName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "snapshotName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/snapshot"
            }
          },
          "202": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Snapshots_Update": {
            "$ref": "examples/Snapshots_Update.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "Snapshots_Delete",
        "parameters": [
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "poolName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "volumeName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "snapshotName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore"
          },
          "202": {
            "description": "ignore"
          },
          "204": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Snapshots_Delete": {
            "$ref": "examples/Snapshots_Delete.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/snapshots/{snapshotName}/restoreFiles": {
      "post": {
        "operationId": "Snapshots_RestoreFiles",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/snapshotRestoreFiles"
            }
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "poolName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "volumeName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "snapshotName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore"
          },
          "202": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Snapshots_SingleFileRestore": {
            "$ref": "examples/Snapshots_SingleFileRestore.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/splitCloneFromParent": {
      "post": {
        "operationId": "Volumes_SplitCloneFromParent",
        "parameters": [
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "poolName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "volumeName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/volume"
            }
          },
          "202": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Volumes_SplitClone": {
            "$ref": "examples/Volumes_SplitClone.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/subvolumes": {
      "get": {
        "operationId": "Subvolumes_ListByVolume",
        "parameters": [
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "poolName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "volumeName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/subvolumesList"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Subvolumes_List": {
            "$ref": "examples/Subvolumes_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/subvolumes/{subvolumeName}": {
      "get": {
        "operationId": "Subvolumes_Get",
        "parameters": [
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "poolName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "volumeName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "subvolumeName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/subvolumeInfo"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Subvolumes_Get": {
            "$ref": "examples/Subvolumes_Get.json"
          }
        }
      },
      "put": {
        "operationId": "Subvolumes_Create",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/subvolumeInfo"
            }
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "poolName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "volumeName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "subvolumeName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/subvolumeInfo"
            }
          },
          "201": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/subvolumeInfo"
            }
          },
          "202": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Subvolumes_Create": {
            "$ref": "examples/Subvolumes_Create.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "Subvolumes_Update",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/subvolumePatchRequest"
            }
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "poolName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "volumeName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "subvolumeName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/subvolumeInfo"
            }
          },
          "202": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Subvolumes_Update": {
            "$ref": "examples/Subvolumes_Update.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "Subvolumes_Delete",
        "parameters": [
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "poolName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "volumeName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "subvolumeName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore"
          },
          "202": {
            "description": "ignore"
          },
          "204": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Subvolumes_Delete": {
            "$ref": "examples/Subvolumes_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/subvolumes/{subvolumeName}/getMetadata": {
      "post": {
        "operationId": "Subvolumes_GetMetadata",
        "parameters": [
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "poolName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "volumeName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "subvolumeName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/subvolumeModel"
            }
          },
          "202": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Subvolumes_Metadata": {
            "$ref": "examples/Subvolumes_Metadata.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/volumeQuotaRules": {
      "get": {
        "operationId": "VolumeQuotaRules_ListByVolume",
        "parameters": [
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "poolName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "volumeName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/volumeQuotaRulesList"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "VolumeQuotaRules_List": {
            "$ref": "examples/VolumeQuotaRules_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/volumeQuotaRules/{volumeQuotaRuleName}": {
      "get": {
        "operationId": "VolumeQuotaRules_Get",
        "parameters": [
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "poolName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "volumeName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "volumeQuotaRuleName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/volumeQuotaRule"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "VolumeQuotaRules_Get": {
            "$ref": "examples/VolumeQuotaRules_Get.json"
          }
        }
      },
      "put": {
        "operationId": "VolumeQuotaRules_Create",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/volumeQuotaRule"
            }
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "poolName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "volumeName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "volumeQuotaRuleName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/volumeQuotaRule"
            }
          },
          "201": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/volumeQuotaRule"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "VolumeQuotaRules_Create": {
            "$ref": "examples/VolumeQuotaRules_Create.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "VolumeQuotaRules_Update",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/volumeQuotaRulePatch"
            }
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "poolName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "volumeName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "volumeQuotaRuleName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/volumeQuotaRule"
            }
          },
          "202": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "VolumeQuotaRules_Update": {
            "$ref": "examples/VolumeQuotaRules_Update.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "VolumeQuotaRules_Delete",
        "parameters": [
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "poolName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "volumeName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "volumeQuotaRuleName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore"
          },
          "202": {
            "description": "ignore"
          },
          "204": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "VolumeQuotaRules_Delete": {
            "$ref": "examples/VolumeQuotaRules_Delete.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.NetApp/netAppAccounts/{accountName}/changeKeyVault": {
      "post": {
        "operationId": "Accounts_ChangeKeyVault",
        "parameters": [
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/changeKeyVault"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Accounts_ChangeKeyVault": {
            "$ref": "examples/Accounts_ChangeKeyVault.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.NetApp/netAppAccounts/{accountName}/getKeyVaultStatus": {
      "post": {
        "operationId": "Accounts_GetChangeKeyVaultInformation",
        "parameters": [
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/getKeyVaultStatusResponse"
            }
          },
          "202": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Accounts_GetChangeKeyVaultInformation": {
            "$ref": "examples/Accounts_GetChangeKeyVaultInformation.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.NetApp/netAppAccounts/{accountName}/migrateBackups": {
      "post": {
        "operationId": "BackupsUnderAccount_MigrateBackups",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/backupsMigrationRequest"
            }
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          }
        ],
        "responses": {
          "202": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "BackupsUnderAccount_Migrate": {
            "$ref": "examples/BackupsUnderAccount_Migrate.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.NetApp/netAppAccounts/{accountName}/renewCredentials": {
      "post": {
        "operationId": "Accounts_RenewCredentials",
        "parameters": [
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore"
          },
          "202": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Accounts_RenewCredentials": {
            "$ref": "examples/Accounts_RenewCredentials.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.NetApp/netAppAccounts/{accountName}/snapshotPolicies": {
      "get": {
        "operationId": "SnapshotPolicies_List",
        "parameters": [
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/snapshotPoliciesList"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SnapshotPolicies_List": {
            "$ref": "examples/SnapshotPolicies_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.NetApp/netAppAccounts/{accountName}/snapshotPolicies/{snapshotPolicyName}": {
      "get": {
        "operationId": "SnapshotPolicies_Get",
        "parameters": [
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "snapshotPolicyName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/snapshotPolicy"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SnapshotPolicies_Get": {
            "$ref": "examples/SnapshotPolicies_Get.json"
          }
        }
      },
      "put": {
        "operationId": "SnapshotPolicies_Create",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/snapshotPolicy"
            }
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "snapshotPolicyName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/snapshotPolicy"
            }
          },
          "201": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/snapshotPolicy"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SnapshotPolicies_Create": {
            "$ref": "examples/SnapshotPolicies_Create.json"
          }
        }
      },
      "patch": {
        "operationId": "SnapshotPolicies_Update",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/snapshotPolicyPatch"
            }
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "snapshotPolicyName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/snapshotPolicy"
            }
          },
          "202": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/snapshotPolicy"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SnapshotPolicies_Update": {
            "$ref": "examples/SnapshotPolicies_Update.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "SnapshotPolicies_Delete",
        "parameters": [
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "snapshotPolicyName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore"
          },
          "202": {
            "description": "ignore"
          },
          "204": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SnapshotPolicies_Delete": {
            "$ref": "examples/SnapshotPolicies_Delete.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.NetApp/netAppAccounts/{accountName}/snapshotPolicies/{snapshotPolicyName}/volumes": {
      "get": {
        "operationId": "SnapshotPolicies_ListVolumes",
        "parameters": [
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "snapshotPolicyName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/snapshotPolicyVolumeList"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SnapshotPolicies_ListVolumes": {
            "$ref": "examples/SnapshotPolicies_ListVolumes.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.NetApp/netAppAccounts/{accountName}/transitiontocmk": {
      "post": {
        "operationId": "Accounts_TransitionToCmk",
        "parameters": [
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/encryptionTransitionRequest"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Accounts_MigrateEncryptionKey": {
            "$ref": "examples/Accounts_TransitionEncryptionKey.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.NetApp/netAppAccounts/{accountName}/volumeGroups": {
      "get": {
        "operationId": "VolumeGroups_ListByNetAppAccount",
        "parameters": [
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/volumeGroupList"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "VolumeGroups_List_Oracle": {
            "$ref": "examples/VolumeGroups_List_Oracle.json"
          },
          "VolumeGroups_List_SapHana": {
            "$ref": "examples/VolumeGroups_List_SapHana.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.NetApp/netAppAccounts/{accountName}/volumeGroups/{volumeGroupName}": {
      "get": {
        "operationId": "VolumeGroups_Get",
        "parameters": [
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "volumeGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/volumeGroupDetails"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "VolumeGroups_Get_Oracle": {
            "$ref": "examples/VolumeGroups_Get_Oracle.json"
          },
          "VolumeGroups_Get_SapHana": {
            "$ref": "examples/VolumeGroups_Get_SapHana.json"
          }
        }
      },
      "put": {
        "operationId": "VolumeGroups_Create",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/volumeGroupDetails"
            }
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "volumeGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$"
          }
        ],
        "responses": {
          "201": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/volumeGroupDetails"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "VolumeGroups_Create_Oracle": {
            "$ref": "examples/VolumeGroups_Create_Oracle.json"
          },
          "VolumeGroups_Create_SapHana": {
            "$ref": "examples/VolumeGroups_Create_SapHana.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "VolumeGroups_Delete",
        "parameters": [
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "volumeGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore"
          },
          "202": {
            "description": "ignore"
          },
          "204": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "VolumeGroups_Delete": {
            "$ref": "examples/VolumeGroups_Delete.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    }
  },
  "definitions": {
    "CheckAvailabilityResponse": {
      "type": "object",
      "properties": {
        "isAvailable": {
          "type": "boolean"
        },
        "reason": {
          "type": "string",
          "enum": [
            "Invalid",
            "AlreadyExists"
          ],
          "x-ms-enum": {
            "name": "InAvailabilityReasonType",
            "modelAsString": true
          }
        },
        "message": {
          "type": "string"
        }
      }
    },
    "Dimension": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        }
      }
    },
    "EncryptionIdentity": {
      "type": "object",
      "properties": {
        "principalId": {
          "type": "string",
          "readOnly": true
        },
        "userAssignedIdentity": {
          "type": "string"
        },
        "federatedClientId": {
          "type": "string",
          "example": "87654321-1234-1234-1234-876543214321"
        }
      }
    },
    "FilePathAvailabilityRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "subnetId": {
          "type": "string"
        },
        "availabilityZone": {
          "type": "string",
          "title": "Logical availability zone",
          "x-nullable": true,
          "example": "1"
        }
      },
      "required": [
        "name",
        "subnetId"
      ]
    },
    "KeyVaultProperties": {
      "type": "object",
      "properties": {
        "keyVaultId": {
          "type": "string",
          "minLength": 36,
          "maxLength": 36,
          "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
          "readOnly": true,
          "example": "9760acf5-4638-11e7-9bdb-020073ca7778"
        },
        "keyVaultUri": {
          "type": "string",
          "format": "uri"
        },
        "keyName": {
          "type": "string"
        },
        "keyVaultResourceId": {
          "type": "string",
          "format": "arm-id",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.KeyVault/vaults"
              }
            ]
          }
        },
        "status": {
          "type": "string",
          "enum": [
            "Created",
            "Updating",
            "InUse",
            "Deleted",
            "Error"
          ],
          "x-ms-enum": {
            "name": "KeyVaultStatus",
            "modelAsString": true
          },
          "readOnly": true
        }
      },
      "required": [
        "keyName",
        "keyVaultUri"
      ]
    },
    "LogSpecification": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        }
      }
    },
    "MetricSpecification": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "displayDescription": {
          "type": "string"
        },
        "unit": {
          "type": "string"
        },
        "supportedAggregationTypes": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "Average"
            ],
            "x-ms-enum": {
              "name": "MetricAggregationType",
              "modelAsString": true
            }
          }
        },
        "supportedTimeGrainTypes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "internalMetricName": {
          "type": "string"
        },
        "enableRegionalMdmAccount": {
          "type": "boolean"
        },
        "sourceMdmAccount": {
          "type": "string"
        },
        "sourceMdmNamespace": {
          "type": "string"
        },
        "dimensions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Dimension"
          },
          "x-ms-identifiers": [
            "name"
          ]
        },
        "aggregationType": {
          "type": "string"
        },
        "fillGapWithZero": {
          "type": "boolean"
        },
        "category": {
          "type": "string"
        },
        "resourceIdDimensionNameOverride": {
          "type": "string"
        },
        "isInternal": {
          "type": "boolean"
        }
      }
    },
    "Operation": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "display": {
          "type": "object",
          "properties": {
            "provider": {
              "type": "string",
              "description": "Service provider: Microsoft NetApp."
            },
            "resource": {
              "type": "string",
              "description": "Resource on which the operation is performed etc."
            },
            "operation": {
              "type": "string",
              "description": "Type of operation: get, read, delete, etc."
            },
            "description": {
              "type": "string",
              "description": "Operation description."
            }
          }
        },
        "origin": {
          "type": "string"
        },
        "properties": {
          "$ref": "#/definitions/OperationProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "OperationListResult": {
      "type": "object",
      "description": "[Placeholder] Discription for page model",
      "properties": {
        "value": {
          "type": "array",
          "description": "[Placeholder] Discription for value property",
          "items": {
            "$ref": "#/definitions/Operation"
          },
          "x-ms-identifiers": [
            "name"
          ]
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "[Placeholder] Discription for nextLink property"
        }
      }
    },
    "OperationProperties": {
      "type": "object",
      "properties": {
        "serviceSpecification": {
          "$ref": "#/definitions/ServiceSpecification"
        }
      }
    },
    "QueryNetworkSiblingSetRequest": {
      "type": "object",
      "title": "QueryNetworkSiblingSetRequest",
      "properties": {
        "networkSiblingSetId": {
          "type": "string",
          "title": "Network Sibling Set ID",
          "minLength": 36,
          "maxLength": 36,
          "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
          "example": "9760acf5-4638-11e7-9bdb-020073ca3333"
        },
        "subnetId": {
          "type": "string",
          "format": "arm-id",
          "title": "Subnet resource Id",
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Network/virtualNetworks/subnets"
              }
            ]
          }
        }
      },
      "required": [
        "networkSiblingSetId",
        "subnetId"
      ]
    },
    "QuotaAvailabilityRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.NetApp/netAppAccounts",
            "Microsoft.NetApp/netAppAccounts/capacityPools",
            "Microsoft.NetApp/netAppAccounts/capacityPools/volumes",
            "Microsoft.NetApp/netAppAccounts/capacityPools/volumes/snapshots"
          ],
          "x-ms-enum": {
            "name": "CheckQuotaNameResourceTypes",
            "modelAsString": true
          }
        },
        "resourceGroup": {
          "type": "string"
        }
      },
      "required": [
        "name",
        "resourceGroup",
        "type"
      ]
    },
    "ResourceNameAvailabilityRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.NetApp/netAppAccounts",
            "Microsoft.NetApp/netAppAccounts/capacityPools",
            "Microsoft.NetApp/netAppAccounts/capacityPools/volumes",
            "Microsoft.NetApp/netAppAccounts/capacityPools/volumes/snapshots"
          ],
          "x-ms-enum": {
            "name": "CheckNameResourceTypes",
            "modelAsString": true
          }
        },
        "resourceGroup": {
          "type": "string"
        }
      },
      "required": [
        "name",
        "resourceGroup",
        "type"
      ]
    },
    "ServiceSpecification": {
      "type": "object",
      "properties": {
        "metricSpecifications": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MetricSpecification"
          },
          "x-ms-identifiers": [
            "name"
          ]
        },
        "logSpecifications": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LogSpecification"
          },
          "x-ms-identifiers": [
            "name"
          ]
        }
      }
    },
    "SubscriptionQuotaItem": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SubscriptionQuotaItemProperties",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "SubscriptionQuotaItemList": {
      "type": "object",
      "description": "[Placeholder] Discription for page model",
      "properties": {
        "value": {
          "type": "array",
          "description": "[Placeholder] Discription for value property",
          "items": {
            "$ref": "#/definitions/SubscriptionQuotaItem"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "[Placeholder] Discription for nextLink property"
        }
      }
    },
    "SubscriptionQuotaItemProperties": {
      "type": "object",
      "properties": {
        "current": {
          "type": "integer",
          "format": "int32",
          "readOnly": true
        },
        "default": {
          "type": "integer",
          "format": "int32",
          "readOnly": true
        }
      }
    },
    "UpdateNetworkSiblingSetRequest": {
      "type": "object",
      "title": "UpdateNetworkSiblingSetRequest",
      "properties": {
        "networkSiblingSetId": {
          "type": "string",
          "title": "Network Sibling Set ID",
          "minLength": 36,
          "maxLength": 36,
          "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
          "example": "9760acf5-4638-11e7-9bdb-020073ca3333"
        },
        "subnetId": {
          "type": "string",
          "format": "arm-id",
          "title": "Subnet resource Id",
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Network/virtualNetworks/subnets"
              }
            ]
          }
        },
        "networkSiblingSetStateId": {
          "type": "string",
          "title": "Network sibling set state Id",
          "example": "12345_44420.8001578125"
        },
        "networkFeatures": {
          "type": "string",
          "title": "Network features",
          "default": "Basic",
          "enum": [
            "Basic",
            "Standard",
            "Basic_Standard",
            "Standard_Basic"
          ],
          "x-ms-enum": {
            "name": "NetworkFeatures",
            "modelAsString": true
          },
          "example": "Standard"
        }
      },
      "required": [
        "networkFeatures",
        "networkSiblingSetId",
        "networkSiblingSetStateId",
        "subnetId"
      ]
    },
    "UsageResult": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "readOnly": true
        },
        "name": {
          "$ref": "#/definitions/usageName"
        },
        "properties": {
          "$ref": "#/definitions/usageProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "UsagesListResult": {
      "type": "object",
      "description": "[Placeholder] Discription for page model",
      "properties": {
        "value": {
          "type": "array",
          "description": "[Placeholder] Discription for value property",
          "items": {
            "$ref": "#/definitions/UsageResult"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "[Placeholder] Discription for nextLink property"
        }
      }
    },
    "accountEncryption": {
      "type": "object",
      "properties": {
        "keySource": {
          "type": "string",
          "default": "Microsoft.NetApp",
          "enum": [
            "Microsoft.NetApp",
            "Microsoft.KeyVault"
          ],
          "x-ms-enum": {
            "name": "KeySource",
            "modelAsString": true
          }
        },
        "keyVaultProperties": {
          "$ref": "#/definitions/KeyVaultProperties"
        },
        "identity": {
          "$ref": "#/definitions/EncryptionIdentity"
        }
      }
    },
    "accountProperties": {
      "type": "object",
      "properties": {
        "provisioningState": {
          "type": "string",
          "readOnly": true
        },
        "activeDirectories": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/activeDirectory"
          },
          "x-ms-identifiers": [
            "activeDirectoryId"
          ]
        },
        "encryption": {
          "$ref": "#/definitions/accountEncryption"
        },
        "disableShowmount": {
          "type": "boolean",
          "x-nullable": true,
          "readOnly": true
        },
        "nfsV4IDDomain": {
          "type": "string",
          "maxLength": 255,
          "pattern": "^[a-zA-Z0-9][a-zA-Z0-9.-]{0,253}[a-zA-Z0-9]$",
          "x-nullable": true,
          "example": "defaultv4iddomain.com"
        },
        "multiAdStatus": {
          "type": "string",
          "title": "multiAdStatus",
          "enum": [
            "Disabled",
            "Enabled"
          ],
          "x-ms-enum": {
            "name": "MultiAdStatus",
            "modelAsString": true
          },
          "readOnly": true,
          "example": "Enabled"
        }
      }
    },
    "activeDirectory": {
      "type": "object",
      "properties": {
        "activeDirectoryId": {
          "type": "string",
          "x-nullable": true
        },
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string",
          "maxLength": 64,
          "x-ms-secret": true
        },
        "domain": {
          "type": "string"
        },
        "dns": {
          "type": "string",
          "pattern": "^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)((, ?)(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?))*$",
          "example": "101.102.103.104,101.102.103.105"
        },
        "status": {
          "type": "string",
          "enum": [
            "Created",
            "Updating",
            "InUse",
            "Deleted",
            "Error"
          ],
          "x-ms-enum": {
            "name": "ActiveDirectoryStatus",
            "modelAsString": true
          },
          "readOnly": true
        },
        "statusDetails": {
          "type": "string",
          "readOnly": true
        },
        "smbServerName": {
          "type": "string"
        },
        "organizationalUnit": {
          "type": "string",
          "default": "CN=Computers"
        },
        "site": {
          "type": "string"
        },
        "backupOperators": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255
          },
          "example": [
            "user1",
            "user2"
          ]
        },
        "administrators": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255
          },
          "example": [
            "user1",
            "user2"
          ]
        },
        "kdcIP": {
          "type": "string",
          "pattern": "^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$",
          "example": "101.102.103.104"
        },
        "adName": {
          "type": "string",
          "minLength": 1,
          "maxLength": 64,
          "example": "ADServerName"
        },
        "serverRootCACertificate": {
          "type": "string",
          "minLength": 1,
          "maxLength": 10240,
          "example": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURuVENDQW9XZ0F3SUJBZ0lRR3FXdnRxeHBvSTFJV3Z4VGdJbElWREFOQmdrcWhraUc5dzBCQVFzRkFEQlYKTVJNd0VRWUtDWkltaVpQeUxHUUJHUllEWTI5dE1SY3dGUVlLQ1pJbWlaUHlMR1FCR1JZSGFHRnlhV3R5WWpFbApNQ01HQTFVRUF4TWNhR0Z5YVd0eVlpMVhTVTR0TWtKUFZrRkZTMEkwTkVJdFEwRXRNakFlRncweU1EQTFNRFV3Ck56TTVORGxhRncweU1EQTFNRFl3TnpRNU5EaGFNRlV4RXpBUkJnb0praWFKay9Jc1pBRVpGZ05qYjIweEZ6QVYKQmdvSmtpYUprL0lzWkFFWkZnZG9ZWEpwYTNKaU1TVXdJd1lEVlFRREV4eG9ZWEpwYTNKaUxWZEpUaTB5UWs5VwpRVVZMUWpRMFFpMURRUzB5TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUFqMHByCnhaaXpNaDBqYnRwN1ZOc0JrRVJ2MVpZT0MzMEtqaGRWdEExRm1MeFM2cXlycmpMZUdXOXRSd2ZnUkR0eVBodTIKZVJTcVpTUjF6Z1hZR0s0Nys3Y3F0YnB2UElOektCb0dOWERIVTNxVWlleXJWSjFDVzRKNjJodUdrbUV1VVVkMApKMXBxNTVxbjk1SmRUbWh1dmZlTUxxeHB5c01nbGVnY281ZFhoN0hsQkhwaTNKMFN4ZnhVWmxKMVZiOFJZVEZhCkJiMGFlTVZaRzRKeVREaktiMlR1TmFXOG1aUE5vOFBMRDRocjdndFNZUEQvQ1dVVGV5QlpoZC9LTzNPczlWVEIKYmpLUGtWd0J2WEs2SlFMSGprNFBHS3VYZDhaWVFyajBtOWNIZDNmcWNYTXlQUnQ2TlJ4ak0yMTUxckFzSkVhNgpWZC9ta056akpXalBrT2VZUVFJREFRQUJvMmt3WnpBVEJna3JCZ0VFQVlJM0ZBSUVCaDRFQUVNQVFUQU9CZ05WCkhROEJBZjhFQkFNQ0FZWXdEd1lEVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVVDVEc2ODJSay9kMysKWGtHa0VMakRFMjI4ZjNnd0VBWUpLd1lCQkFHQ054VUJCQU1DQVFBd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQgpBR1RjTTNnWExIU05wS014RHEvUFpZbWZCMmNlN3VhMmxxbXpzZSt4QmthSTE0WXdzZE5ZQjZBVTNFWDM3QWpZCjd3bm9xQzY1N0U2RVhTODVDckoyNXJNTHo4OEtONGI3cUg5RUowSS9XVHg5YTdUT0ZENENWQThuL0xwNGh1Ym4KNlBFalY5NFlZWXBXTG1hTkkvbGFReWsxSHVJbDFSTCttVDFnSWQ4ZWZXZ1UvNmlVVEw3eGMrdjkyNHBuTHhISwpOSnNTV3c0NFk5a0R5SU9KOXFjWUlBN1lhTkxPZTRjSysvQlRvdDh0dVVKT1hHLzdBRmtxR2EyQVA4MmFZOStKCnkwSmU2OG5nTHJ1dVU4VHpneVpqdkFHcTRrVEVOdWFoaFdHVC9KWkEzOXhSNUV4MmNMUUplcE5NdnlZbUZ3Z1UKME8zYlA0OWNBVFVCMXoyQ3Y5aTRQbVk9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
          "x-ms-secret": true
        },
        "aesEncryption": {
          "type": "boolean"
        },
        "ldapSigning": {
          "type": "boolean"
        },
        "securityOperators": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255
          },
          "example": [
            "user1",
            "user2"
          ]
        },
        "ldapOverTLS": {
          "type": "boolean"
        },
        "allowLocalNfsUsersWithLdap": {
          "type": "boolean"
        },
        "encryptDCConnections": {
          "type": "boolean"
        },
        "ldapSearchScope": {
          "$ref": "#/definitions/ldapSearchScopeOpt"
        },
        "preferredServersForLdapClient": {
          "type": "string",
          "maxLength": 32,
          "pattern": "^((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)((, ?)(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?))?)?$",
          "example": "101.102.103.104, 101.102.103.105"
        }
      }
    },
    "authorizeRequest": {
      "type": "object",
      "properties": {
        "remoteVolumeResourceId": {
          "type": "string"
        }
      }
    },
    "backup": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/backupProperties",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "backupPatch": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/backupPatchProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "backupPatchProperties": {
      "type": "object",
      "properties": {
        "label": {
          "type": "string"
        }
      }
    },
    "backupPoliciesList": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/backupPolicy"
          }
        }
      }
    },
    "backupPolicy": {
      "type": "object",
      "properties": {
        "etag": {
          "type": "string",
          "readOnly": true
        },
        "properties": {
          "$ref": "#/definitions/backupPolicyProperties",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "location",
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "backupPolicyPatch": {
      "type": "object",
      "properties": {
        "location": {
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "id": {
          "type": "string",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "readOnly": true
        },
        "tags": {
          "$ref": "#/definitions/resourceTags"
        },
        "properties": {
          "$ref": "#/definitions/backupPolicyProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "backupPolicyProperties": {
      "type": "object",
      "properties": {
        "backupPolicyId": {
          "type": "string",
          "readOnly": true
        },
        "provisioningState": {
          "type": "string",
          "readOnly": true
        },
        "dailyBackupsToKeep": {
          "type": "integer",
          "format": "int32"
        },
        "weeklyBackupsToKeep": {
          "type": "integer",
          "format": "int32"
        },
        "monthlyBackupsToKeep": {
          "type": "integer",
          "format": "int32"
        },
        "volumesAssigned": {
          "type": "integer",
          "format": "int32",
          "readOnly": true
        },
        "enabled": {
          "type": "boolean"
        },
        "volumeBackups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/volumeBackups"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "volumeName"
          ]
        }
      }
    },
    "backupProperties": {
      "type": "object",
      "properties": {
        "backupId": {
          "type": "string",
          "title": "backupId",
          "minLength": 36,
          "maxLength": 36,
          "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
          "readOnly": true,
          "example": "9760acf5-4638-11e7-9bdb-020073ca3333"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time",
          "title": "creationDate",
          "readOnly": true,
          "example": "2017-08-15 13:23:33"
        },
        "snapshotCreationDate": {
          "type": "string",
          "format": "date-time",
          "title": "snapshotCreationDate",
          "x-nullable": true,
          "readOnly": true,
          "example": "2018-11-29T20:32:50.459Z"
        },
        "completionDate": {
          "type": "string",
          "format": "date-time",
          "title": "completionDate",
          "x-nullable": true,
          "readOnly": true,
          "example": "2018-11-29T20:32:50.459Z"
        },
        "provisioningState": {
          "type": "string",
          "readOnly": true
        },
        "size": {
          "type": "integer",
          "format": "int64",
          "readOnly": true
        },
        "label": {
          "type": "string"
        },
        "backupType": {
          "type": "string",
          "title": "backupType",
          "enum": [
            "Manual",
            "Scheduled"
          ],
          "x-ms-enum": {
            "name": "BackupType",
            "modelAsString": true
          },
          "readOnly": true,
          "example": "Manual"
        },
        "failureReason": {
          "type": "string",
          "readOnly": true
        },
        "volumeResourceId": {
          "type": "string",
          "format": "arm-id",
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.NetApp/netAppAccounts/capacityPools/volumes"
              }
            ]
          }
        },
        "useExistingSnapshot": {
          "type": "boolean",
          "default": false,
          "example": true,
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "snapshotName": {
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "backupPolicyResourceId": {
          "type": "string",
          "format": "arm-id",
          "readOnly": true,
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.NetApp/netAppAccounts/backupPolicies"
              }
            ]
          }
        },
        "isLargeVolume": {
          "type": "boolean",
          "readOnly": true,
          "example": false
        }
      },
      "required": [
        "volumeResourceId"
      ]
    },
    "backupRestoreFiles": {
      "type": "object",
      "properties": {
        "fileList": {
          "type": "array",
          "minItems": 1,
          "maxItems": 8,
          "items": {
            "type": "string",
            "minLength": 1,
            "maxLength": 1024
          },
          "example": [
            "/dir1/customer1.db",
            "/dir1/customer2.db"
          ]
        },
        "restoreFilePath": {
          "type": "string",
          "pattern": "^\\/.*$",
          "example": "/AVSdataStore"
        },
        "destinationVolumeId": {
          "type": "string",
          "example": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myRG/providers/Microsoft.NetApp/netAppAccounts/account1/capacityPools/pool1/volumes/volume1"
        }
      },
      "required": [
        "destinationVolumeId",
        "fileList"
      ]
    },
    "backupStatus": {
      "type": "object",
      "properties": {
        "healthy": {
          "type": "boolean",
          "readOnly": true
        },
        "relationshipStatus": {
          "type": "string",
          "enum": [
            "Idle",
            "Transferring",
            "Failed",
            "Unknown"
          ],
          "x-ms-enum": {
            "name": "RelationshipStatus",
            "modelAsString": true
          },
          "readOnly": true
        },
        "mirrorState": {
          "type": "string",
          "enum": [
            "Uninitialized",
            "Mirrored",
            "Broken"
          ],
          "x-ms-enum": {
            "name": "MirrorState",
            "modelAsString": true
          },
          "readOnly": true
        },
        "unhealthyReason": {
          "type": "string",
          "readOnly": true
        },
        "errorMessage": {
          "type": "string",
          "readOnly": true
        },
        "lastTransferSize": {
          "type": "integer",
          "format": "int64",
          "readOnly": true
        },
        "lastTransferType": {
          "type": "string",
          "readOnly": true
        },
        "totalTransferBytes": {
          "type": "integer",
          "format": "int64",
          "readOnly": true
        },
        "transferProgressBytes": {
          "type": "integer",
          "format": "int64",
          "readOnly": true
        }
      }
    },
    "backupVault": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/backupVaultProperties",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "location"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "backupVaultPatch": {
      "type": "object",
      "properties": {
        "tags": {
          "$ref": "#/definitions/resourceTags"
        }
      }
    },
    "backupVaultProperties": {
      "type": "object",
      "properties": {
        "provisioningState": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "backupVaultsList": {
      "type": "object",
      "description": "[Placeholder] Discription for page model",
      "properties": {
        "value": {
          "type": "array",
          "description": "[Placeholder] Discription for value property",
          "items": {
            "$ref": "#/definitions/backupVault"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "[Placeholder] Discription for nextLink property"
        }
      }
    },
    "backupsList": {
      "type": "object",
      "description": "[Placeholder] Discription for page model",
      "properties": {
        "value": {
          "type": "array",
          "description": "[Placeholder] Discription for value property",
          "items": {
            "$ref": "#/definitions/backup"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "[Placeholder] Discription for nextLink property"
        }
      }
    },
    "backupsMigrationRequest": {
      "type": "object",
      "properties": {
        "backupVaultId": {
          "type": "string",
          "format": "arm-id",
          "example": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myRG/providers/Microsoft.NetApp/netAppAccounts/account1/backupVaults/backupVault1",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.NetApp/netAppAccounts/backupVaults"
              }
            ]
          }
        }
      },
      "required": [
        "backupVaultId"
      ]
    },
    "breakFileLocksRequest": {
      "type": "object",
      "properties": {
        "clientIp": {
          "type": "string",
          "pattern": "^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$",
          "example": "101.102.103.104"
        },
        "confirmRunningDisruptiveOperation": {
          "type": "boolean",
          "default": false
        }
      }
    },
    "breakReplicationRequest": {
      "type": "object",
      "properties": {
        "forceBreakReplication": {
          "type": "boolean"
        }
      }
    },
    "capacityPool": {
      "type": "object",
      "properties": {
        "etag": {
          "type": "string",
          "readOnly": true
        },
        "properties": {
          "$ref": "#/definitions/poolProperties",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "location",
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "capacityPoolList": {
      "type": "object",
      "description": "[Placeholder] Discription for page model",
      "properties": {
        "value": {
          "type": "array",
          "description": "[Placeholder] Discription for value property",
          "items": {
            "$ref": "#/definitions/capacityPool"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "[Placeholder] Discription for nextLink property"
        }
      }
    },
    "capacityPoolPatch": {
      "type": "object",
      "properties": {
        "location": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "readOnly": true
        },
        "tags": {
          "$ref": "#/definitions/resourceTags"
        },
        "properties": {
          "$ref": "#/definitions/poolPatchProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "changeKeyVault": {
      "type": "object",
      "properties": {
        "keyVaultUri": {
          "type": "string",
          "format": "uri",
          "title": "keyVaultUri",
          "example": "https://my-key-vault.managedhsm.azure.net"
        },
        "keyName": {
          "type": "string",
          "title": "keyName",
          "example": "rsaKeyName"
        },
        "keyVaultResourceId": {
          "type": "string",
          "format": "arm-id",
          "title": "keyVaultResourceId",
          "example": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myRG/providers/Microsoft.KeyVault/managedHSMs/my-hsm",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.KeyVault/vaults"
              }
            ]
          }
        },
        "keyVaultPrivateEndpoints": {
          "type": "array",
          "title": "keyVaultPrivateEndpoints",
          "items": {
            "$ref": "#/definitions/keyVaultPrivateEndpoint"
          },
          "x-ms-identifiers": [
            "virtualNetworkId"
          ]
        }
      },
      "required": [
        "keyName",
        "keyVaultPrivateEndpoints",
        "keyVaultUri"
      ]
    },
    "cloudError": {
      "type": "object",
      "properties": {
        "error": {
          "$ref": "#/definitions/cloudErrorBody"
        }
      },
      "x-ms-external": true
    },
    "cloudErrorBody": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      },
      "x-ms-external": true
    },
    "clusterPeerCommandResponse": {
      "type": "object",
      "properties": {
        "peerAcceptCommand": {
          "type": "string"
        }
      }
    },
    "dailySchedule": {
      "type": "object",
      "properties": {
        "snapshotsToKeep": {
          "type": "integer",
          "format": "int32"
        },
        "hour": {
          "type": "integer",
          "format": "int32",
          "example": 11
        },
        "minute": {
          "type": "integer",
          "format": "int32",
          "example": 30
        },
        "usedBytes": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "destinationReplication": {
      "type": "object",
      "properties": {
        "resourceId": {
          "type": "string",
          "format": "arm-id",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.NetApp/netAppAccounts/capacityPools/volumes"
              }
            ]
          }
        },
        "replicationType": {
          "type": "string",
          "enum": [
            "CrossRegionReplication",
            "CrossZoneReplication"
          ],
          "x-ms-enum": {
            "name": "ReplicationType",
            "modelAsString": true
          }
        },
        "region": {
          "type": "string"
        },
        "zone": {
          "type": "string"
        }
      }
    },
    "encryptionTransitionRequest": {
      "type": "object",
      "properties": {
        "virtualNetworkId": {
          "type": "string",
          "format": "arm-id",
          "title": "virtualNetworkId",
          "example": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myRG/providers/Microsoft.Network/virtualNetworks/vnet1",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Network/virtualNetworks"
              }
            ]
          }
        },
        "privateEndpointId": {
          "type": "string",
          "format": "arm-id",
          "title": "privateEndpointId",
          "example": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myRG/providers/Microsoft.Network/privateEndpoints/privateIP1",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Network/privateEndpoints"
              }
            ]
          }
        }
      },
      "required": [
        "privateEndpointId",
        "virtualNetworkId"
      ]
    },
    "exportPolicyRule": {
      "type": "object",
      "properties": {
        "ruleIndex": {
          "type": "integer",
          "format": "int32"
        },
        "unixReadOnly": {
          "type": "boolean"
        },
        "unixReadWrite": {
          "type": "boolean"
        },
        "kerberos5ReadOnly": {
          "type": "boolean",
          "default": false,
          "example": false
        },
        "kerberos5ReadWrite": {
          "type": "boolean",
          "default": false,
          "example": false
        },
        "kerberos5iReadOnly": {
          "type": "boolean",
          "default": false,
          "example": false
        },
        "kerberos5iReadWrite": {
          "type": "boolean",
          "default": false,
          "example": false
        },
        "kerberos5pReadOnly": {
          "type": "boolean",
          "default": false,
          "example": false
        },
        "kerberos5pReadWrite": {
          "type": "boolean",
          "default": false,
          "example": false
        },
        "cifs": {
          "type": "boolean"
        },
        "nfsv3": {
          "type": "boolean"
        },
        "nfsv41": {
          "type": "boolean"
        },
        "allowedClients": {
          "type": "string"
        },
        "hasRootAccess": {
          "type": "boolean",
          "default": true,
          "example": true
        },
        "chownMode": {
          "type": "string",
          "default": "Restricted",
          "enum": [
            "Restricted",
            "Unrestricted"
          ],
          "x-ms-enum": {
            "name": "ChownMode",
            "modelAsString": true
          }
        }
      }
    },
    "getGroupIdListForLDAPUserRequest": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255
        }
      },
      "required": [
        "username"
      ]
    },
    "getGroupIdListForLDAPUserResponse": {
      "type": "object",
      "properties": {
        "groupIdsForLdapUser": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "example": [
            "123",
            "224"
          ]
        }
      }
    },
    "getKeyVaultStatusResponse": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/getKeyVaultStatusResponseProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "getKeyVaultStatusResponseProperties": {
      "type": "object",
      "properties": {
        "keyVaultUri": {
          "type": "string",
          "format": "uri",
          "title": "keyVaultUri",
          "example": "https://my-key-vault.managedhsm.azure.net"
        },
        "keyName": {
          "type": "string",
          "title": "keyName",
          "example": "rsaKeyName"
        },
        "keyVaultResourceId": {
          "type": "string",
          "format": "arm-id",
          "title": "keyVaultResourceId",
          "example": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myRG/providers/Microsoft.KeyVault/managedHSMs/my-hsm",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.KeyVault/vaults"
              }
            ]
          }
        },
        "keyVaultPrivateEndpoints": {
          "type": "array",
          "title": "keyVaultPrivateEndpoints",
          "items": {
            "$ref": "#/definitions/keyVaultPrivateEndpoint"
          },
          "x-ms-identifiers": [
            "virtualNetworkId"
          ]
        }
      }
    },
    "hourlySchedule": {
      "type": "object",
      "properties": {
        "snapshotsToKeep": {
          "type": "integer",
          "format": "int32"
        },
        "minute": {
          "type": "integer",
          "format": "int32",
          "example": 30
        },
        "usedBytes": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ipAddress": {
      "type": "string",
      "title": "ipAddress",
      "readOnly": true,
      "example": "1.2.3.4"
    },
    "keyVaultPrivateEndpoint": {
      "type": "object",
      "title": "keyVaultPrivateEndpoint",
      "properties": {
        "virtualNetworkId": {
          "type": "string",
          "format": "arm-id",
          "title": "virtualNetworkId",
          "example": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myRG/providers/Microsoft.Network/virtualNetworks/vnet1",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Network/virtualNetworks"
              }
            ]
          }
        },
        "privateEndpointId": {
          "type": "string",
          "format": "arm-id",
          "title": "privateEndpointId",
          "example": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myRG/providers/Microsoft.Network/privateEndpoints/privateIP1",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Network/privateEndpoints"
              }
            ]
          }
        }
      }
    },
    "ldapSearchScopeOpt": {
      "type": "object",
      "properties": {
        "userDN": {
          "type": "string",
          "maxLength": 255,
          "example": "OU=fin,OU=hr,dc=domain,dc=com"
        },
        "groupDN": {
          "type": "string",
          "maxLength": 255,
          "example": "OU=fin,OU=hr,dc=domain,dc=com"
        },
        "groupMembershipFilter": {
          "type": "string",
          "maxLength": 255,
          "example": "cn=*99"
        }
      }
    },
    "listReplications": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/replication"
          }
        }
      }
    },
    "monthlySchedule": {
      "type": "object",
      "properties": {
        "snapshotsToKeep": {
          "type": "integer",
          "format": "int32"
        },
        "daysOfMonth": {
          "type": "string",
          "example": "1,11,21"
        },
        "hour": {
          "type": "integer",
          "format": "int32",
          "example": 11
        },
        "minute": {
          "type": "integer",
          "format": "int32",
          "example": 30
        },
        "usedBytes": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "mountTarget": {
      "type": "object",
      "properties": {
        "location": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "readOnly": true
        },
        "tags": {
          "$ref": "#/definitions/resourceTags",
          "x-ms-client-flatten": true
        },
        "properties": {
          "$ref": "#/definitions/mountTargetProperties",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "location",
        "properties"
      ]
    },
    "mountTargetProperties": {
      "type": "object",
      "properties": {
        "mountTargetId": {
          "type": "string",
          "title": "mountTargetId",
          "minLength": 36,
          "maxLength": 36,
          "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
          "readOnly": true,
          "example": "9760acf5-4638-11e7-9bdb-020073ca3333"
        },
        "fileSystemId": {
          "type": "string",
          "title": "fileSystemId",
          "minLength": 36,
          "maxLength": 36,
          "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
          "example": "9760acf5-4638-11e7-9bdb-020073ca3333"
        },
        "ipAddress": {
          "type": "string",
          "title": "ipAddress",
          "readOnly": true,
          "example": "1.2.3.4"
        },
        "smbServerFqdn": {
          "type": "string",
          "title": "smbServerFQDN",
          "example": "fullyqualified.domainname.com"
        }
      },
      "required": [
        "fileSystemId"
      ]
    },
    "netAppAccount": {
      "type": "object",
      "properties": {
        "etag": {
          "type": "string",
          "readOnly": true
        },
        "properties": {
          "$ref": "#/definitions/accountProperties",
          "x-ms-client-flatten": true
        },
        "identity": {
          "$ref": "../../../../../common-types/resource-management/v6/managedidentity.json#/definitions/ManagedServiceIdentity"
        }
      },
      "required": [
        "location"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "netAppAccountList": {
      "type": "object",
      "description": "[Placeholder] Discription for page model",
      "properties": {
        "value": {
          "type": "array",
          "description": "[Placeholder] Discription for value property",
          "items": {
            "$ref": "#/definitions/netAppAccount"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "[Placeholder] Discription for nextLink property"
        }
      }
    },
    "netAppAccountPatch": {
      "type": "object",
      "properties": {
        "location": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "readOnly": true
        },
        "tags": {
          "$ref": "#/definitions/resourceTags"
        },
        "properties": {
          "$ref": "#/definitions/accountProperties",
          "x-ms-client-flatten": true
        },
        "identity": {
          "$ref": "../../../../../common-types/resource-management/v6/managedidentity.json#/definitions/ManagedServiceIdentity"
        }
      }
    },
    "networkSiblingSet": {
      "type": "object",
      "title": "Network sibling set",
      "properties": {
        "networkSiblingSetId": {
          "type": "string",
          "title": "Network Sibling Set ID",
          "minLength": 36,
          "maxLength": 36,
          "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
          "example": "9760acf5-4638-11e7-9bdb-020073ca3333"
        },
        "subnetId": {
          "type": "string",
          "format": "arm-id",
          "title": "Subnet resource Id",
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Network/virtualNetworks/subnets"
              }
            ]
          }
        },
        "networkSiblingSetStateId": {
          "type": "string",
          "title": "Network sibling set state Id",
          "example": "12345_44420.8001578125"
        },
        "networkFeatures": {
          "type": "string",
          "title": "Network features",
          "default": "Basic",
          "enum": [
            "Basic",
            "Standard",
            "Basic_Standard",
            "Standard_Basic"
          ],
          "x-ms-enum": {
            "name": "NetworkFeatures",
            "modelAsString": true
          },
          "example": "Standard"
        },
        "provisioningState": {
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Updating"
          ],
          "x-ms-enum": {
            "name": "NetworkSiblingSetProvisioningState",
            "modelAsString": true
          },
          "readOnly": true
        },
        "nicInfoList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/nicInfo"
          }
        }
      }
    },
    "networkSiblingSetId": {
      "type": "string",
      "title": "Network Sibling Set ID",
      "minLength": 36,
      "maxLength": 36,
      "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
      "example": "9760acf5-4638-11e7-9bdb-020073ca3333"
    },
    "networkSiblingSetStateId": {
      "type": "string",
      "title": "Network sibling set state Id",
      "example": "12345_44420.8001578125"
    },
    "nicInfo": {
      "type": "object",
      "title": "NIC information",
      "properties": {
        "ipAddress": {
          "type": "string",
          "title": "ipAddress",
          "readOnly": true,
          "example": "1.2.3.4"
        },
        "volumeResourceIds": {
          "$ref": "#/definitions/volumeResourceIds"
        }
      }
    },
    "peerClusterForVolumeMigrationRequest": {
      "type": "object",
      "properties": {
        "peerIpAddresses": {
          "type": "array",
          "minItems": 1,
          "items": {
            "type": "string"
          },
          "example": [
            "0.0.0.1",
            "0.0.0.2",
            "0.0.0.3",
            "0.0.0.4",
            "0.0.0.5",
            "0.0.0.6"
          ]
        }
      },
      "required": [
        "peerIpAddresses"
      ]
    },
    "placementKeyValuePairs": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "example": "key1"
        },
        "value": {
          "type": "string",
          "example": "value1"
        }
      },
      "required": [
        "key",
        "value"
      ]
    },
    "poolChangeRequest": {
      "type": "object",
      "properties": {
        "newPoolResourceId": {
          "type": "string"
        }
      },
      "required": [
        "newPoolResourceId"
      ]
    },
    "poolPatchProperties": {
      "type": "object",
      "properties": {
        "size": {
          "type": "integer",
          "format": "int64",
          "title": "size",
          "default": 4398046511104
        },
        "qosType": {
          "type": "string",
          "title": "qosType",
          "default": "Auto",
          "enum": [
            "Auto",
            "Manual"
          ],
          "x-ms-enum": {
            "name": "QosType",
            "modelAsString": true
          },
          "example": "Manual"
        },
        "coolAccess": {
          "type": "boolean",
          "example": false
        },
        "customThroughputMibps": {
          "type": "number",
          "title": "Maximum throughput in MiB/s that can be achieved by this pool and this will be accepted as input only for manual qosType pool with Flexible service level",
          "x-nullable": true,
          "example": 128
        }
      }
    },
    "poolProperties": {
      "type": "object",
      "properties": {
        "poolId": {
          "type": "string",
          "title": "poolId",
          "minLength": 36,
          "maxLength": 36,
          "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
          "readOnly": true,
          "example": "9760acf5-4638-11e7-9bdb-020073ca7778"
        },
        "size": {
          "type": "integer",
          "format": "int64",
          "title": "size",
          "default": 4398046511104
        },
        "serviceLevel": {
          "type": "string",
          "title": "serviceLevel",
          "default": "Premium",
          "enum": [
            "Standard",
            "Premium",
            "Ultra",
            "StandardZRS",
            "Flexible"
          ],
          "x-ms-enum": {
            "name": "ServiceLevel",
            "modelAsString": true
          }
        },
        "provisioningState": {
          "type": "string",
          "readOnly": true
        },
        "totalThroughputMibps": {
          "type": "number",
          "readOnly": true,
          "example": 164.221
        },
        "utilizedThroughputMibps": {
          "type": "number",
          "readOnly": true,
          "example": 164.221
        },
        "customThroughputMibps": {
          "type": "number",
          "title": "Maximum throughput in MiB/s that can be achieved by this pool and this will be accepted as input only for manual qosType pool with Flexible service level",
          "x-nullable": true,
          "example": 128
        },
        "qosType": {
          "type": "string",
          "title": "qosType",
          "default": "Auto",
          "enum": [
            "Auto",
            "Manual"
          ],
          "x-ms-enum": {
            "name": "QosType",
            "modelAsString": true
          },
          "example": "Manual"
        },
        "coolAccess": {
          "type": "boolean",
          "default": false,
          "example": false
        },
        "encryptionType": {
          "type": "string",
          "title": "encryptionType",
          "default": "Single",
          "enum": [
            "Single",
            "Double"
          ],
          "x-ms-enum": {
            "name": "EncryptionType",
            "modelAsString": true
          },
          "x-nullable": true,
          "example": "Single",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "required": [
        "serviceLevel",
        "size"
      ]
    },
    "reestablishReplicationRequest": {
      "type": "object",
      "properties": {
        "sourceVolumeId": {
          "type": "string"
        }
      }
    },
    "regionInfo": {
      "type": "object",
      "properties": {
        "storageToNetworkProximity": {
          "type": "string",
          "title": "Storage to Network Proximity",
          "enum": [
            "Default",
            "T1",
            "T2",
            "AcrossT2",
            "T1AndT2",
            "T1AndAcrossT2",
            "T2AndAcrossT2",
            "T1AndT2AndAcrossT2"
          ],
          "x-ms-enum": {
            "name": "RegionStorageToNetworkProximity",
            "modelAsString": true
          },
          "example": "T2"
        },
        "availabilityZoneMappings": {
          "type": "array",
          "title": "Logical availability zone mappings.",
          "items": {
            "type": "object",
            "properties": {
              "availabilityZone": {
                "type": "string",
                "description": "Logical availability zone.",
                "example": "1"
              },
              "isAvailable": {
                "type": "boolean",
                "description": "Available availability zone",
                "example": true
              }
            }
          },
          "x-ms-identifiers": [
            "availabilityZone"
          ]
        }
      }
    },
    "regionInfoResource": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/regionInfo",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "regionInfosList": {
      "type": "object",
      "description": "[Placeholder] Discription for page model",
      "properties": {
        "value": {
          "type": "array",
          "description": "[Placeholder] Discription for value property",
          "items": {
            "$ref": "#/definitions/regionInfoResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "[Placeholder] Discription for nextLink property"
        }
      }
    },
    "relocateVolumeRequest": {
      "type": "object",
      "properties": {
        "creationToken": {
          "type": "string"
        }
      }
    },
    "remotePath": {
      "type": "object",
      "properties": {
        "externalHostName": {
          "type": "string"
        },
        "serverName": {
          "type": "string"
        },
        "volumeName": {
          "type": "string"
        }
      },
      "required": [
        "externalHostName",
        "serverName",
        "volumeName"
      ]
    },
    "replication": {
      "type": "object",
      "properties": {
        "replicationId": {
          "type": "string",
          "minLength": 36,
          "maxLength": 36,
          "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
          "readOnly": true,
          "example": "5ee41ce4-8f44-4ecd-ad89-8c1e573fe3b8"
        },
        "endpointType": {
          "type": "string",
          "enum": [
            "src",
            "dst"
          ],
          "x-ms-enum": {
            "name": "EndpointType",
            "modelAsString": true
          }
        },
        "replicationSchedule": {
          "type": "string",
          "enum": [
            "_10minutely",
            "hourly",
            "daily"
          ],
          "x-ms-enum": {
            "name": "ReplicationSchedule",
            "modelAsString": true
          }
        },
        "remoteVolumeResourceId": {
          "type": "string"
        },
        "remoteVolumeRegion": {
          "type": "string"
        }
      },
      "required": [
        "remoteVolumeResourceId"
      ]
    },
    "replicationObject": {
      "type": "object",
      "properties": {
        "replicationId": {
          "type": "string",
          "readOnly": true
        },
        "endpointType": {
          "type": "string",
          "enum": [
            "src",
            "dst"
          ],
          "x-ms-enum": {
            "name": "EndpointType",
            "modelAsString": true
          },
          "readOnly": true
        },
        "replicationSchedule": {
          "type": "string",
          "enum": [
            "_10minutely",
            "hourly",
            "daily"
          ],
          "x-ms-enum": {
            "name": "ReplicationSchedule",
            "modelAsString": true
          }
        },
        "remoteVolumeResourceId": {
          "type": "string"
        },
        "remotePath": {
          "$ref": "#/definitions/remotePath",
          "type": "object",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "remoteVolumeRegion": {
          "type": "string"
        },
        "destinationReplications": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/destinationReplication"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "resourceId"
          ]
        }
      }
    },
    "replicationStatus": {
      "type": "object",
      "properties": {
        "healthy": {
          "type": "boolean"
        },
        "relationshipStatus": {
          "type": "string",
          "enum": [
            "Idle",
            "Transferring"
          ],
          "x-ms-enum": {
            "name": "RelationshipStatus",
            "modelAsString": true
          }
        },
        "mirrorState": {
          "type": "string",
          "enum": [
            "Uninitialized",
            "Mirrored",
            "Broken"
          ],
          "x-ms-enum": {
            "name": "MirrorState",
            "modelAsString": true
          }
        },
        "totalProgress": {
          "type": "string"
        },
        "errorMessage": {
          "type": "string"
        }
      }
    },
    "resourceIdentity": {
      "type": "object",
      "properties": {
        "principalId": {
          "type": "string",
          "readOnly": true
        },
        "tenantId": {
          "type": "string",
          "readOnly": true
        },
        "type": {
          "type": "string"
        }
      }
    },
    "resourceTags": {
      "type": "object",
      "additionalProperties": {
        "type": "string"
      }
    },
    "restoreStatus": {
      "type": "object",
      "properties": {
        "healthy": {
          "type": "boolean",
          "readOnly": true
        },
        "relationshipStatus": {
          "type": "string",
          "enum": [
            "Idle",
            "Transferring",
            "Failed",
            "Unknown"
          ],
          "x-ms-enum": {
            "name": "RelationshipStatus",
            "modelAsString": true
          },
          "readOnly": true
        },
        "mirrorState": {
          "type": "string",
          "enum": [
            "Uninitialized",
            "Mirrored",
            "Broken"
          ],
          "x-ms-enum": {
            "name": "MirrorState",
            "modelAsString": true
          },
          "readOnly": true
        },
        "unhealthyReason": {
          "type": "string",
          "readOnly": true
        },
        "errorMessage": {
          "type": "string",
          "readOnly": true
        },
        "totalTransferBytes": {
          "type": "integer",
          "format": "int64",
          "readOnly": true
        }
      }
    },
    "snapshot": {
      "type": "object",
      "properties": {
        "location": {
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "properties": {
          "$ref": "#/definitions/snapshotProperties",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "location"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "snapshotPatch": {
      "type": "object",
      "properties": {}
    },
    "snapshotPoliciesList": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/snapshotPolicy"
          }
        }
      }
    },
    "snapshotPolicy": {
      "type": "object",
      "properties": {
        "etag": {
          "type": "string",
          "readOnly": true
        },
        "properties": {
          "$ref": "#/definitions/snapshotPolicyProperties",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "location",
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "snapshotPolicyDetails": {
      "type": "object",
      "properties": {
        "location": {
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "id": {
          "type": "string",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "readOnly": true
        },
        "tags": {
          "$ref": "#/definitions/resourceTags"
        },
        "properties": {
          "$ref": "#/definitions/snapshotPolicyProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "snapshotPolicyPatch": {
      "type": "object",
      "properties": {
        "location": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "readOnly": true
        },
        "tags": {
          "$ref": "#/definitions/resourceTags"
        },
        "properties": {
          "$ref": "#/definitions/snapshotPolicyProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "snapshotPolicyProperties": {
      "type": "object",
      "properties": {
        "hourlySchedule": {
          "$ref": "#/definitions/hourlySchedule",
          "type": "object",
          "title": "hourlySchedule"
        },
        "dailySchedule": {
          "$ref": "#/definitions/dailySchedule",
          "type": "object",
          "title": "dailySchedule"
        },
        "weeklySchedule": {
          "$ref": "#/definitions/weeklySchedule",
          "type": "object",
          "title": "weeklySchedule"
        },
        "monthlySchedule": {
          "$ref": "#/definitions/monthlySchedule",
          "type": "object",
          "title": "monthlySchedule"
        },
        "enabled": {
          "type": "boolean"
        },
        "provisioningState": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "snapshotPolicyVolumeList": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/volume"
          }
        }
      }
    },
    "snapshotProperties": {
      "type": "object",
      "properties": {
        "snapshotId": {
          "type": "string",
          "title": "snapshotId",
          "minLength": 36,
          "maxLength": 36,
          "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
          "readOnly": true,
          "example": "9760acf5-4638-11e7-9bdb-020073ca3333"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "title": "name",
          "readOnly": true,
          "example": "2017-08-15 13:23:33"
        },
        "provisioningState": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "snapshotRestoreFiles": {
      "type": "object",
      "properties": {
        "filePaths": {
          "type": "array",
          "minItems": 1,
          "maxItems": 10,
          "items": {
            "type": "string",
            "minLength": 1,
            "maxLength": 1024
          },
          "example": [
            "/dir1/customer1.db",
            "/dir1/customer2.db"
          ]
        },
        "destinationPath": {
          "type": "string",
          "example": "/AVSdataStore"
        }
      },
      "required": [
        "filePaths"
      ]
    },
    "snapshotsList": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/snapshot"
          }
        }
      }
    },
    "subnetId": {
      "type": "string",
      "format": "arm-id",
      "title": "Subnet resource Id",
      "x-ms-mutability": [
        "read",
        "create"
      ],
      "x-ms-arm-id-details": {
        "allowedResources": [
          {
            "type": "Microsoft.Network/virtualNetworks/subnets"
          }
        ]
      }
    },
    "subvolumeInfo": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/subvolumeProperties",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "subvolumeModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "readOnly": true
        },
        "properties": {
          "$ref": "#/definitions/subvolumeModelProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "subvolumeModelProperties": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string",
          "title": "path",
          "example": "/subvolume1"
        },
        "parentPath": {
          "type": "string",
          "title": "parentpath",
          "example": "/parentPath"
        },
        "size": {
          "type": "integer",
          "format": "int64",
          "title": "size",
          "example": 5
        },
        "bytesUsed": {
          "type": "integer",
          "format": "int64",
          "title": "bytesUsed",
          "example": 5
        },
        "permissions": {
          "type": "string",
          "title": "permissions",
          "example": "777"
        },
        "creationTimeStamp": {
          "type": "string",
          "format": "date-time",
          "title": "creationTimeStamp",
          "example": "2017-08-15T13:23:33Z"
        },
        "accessedTimeStamp": {
          "type": "string",
          "format": "date-time",
          "title": "accessedTimeStamp",
          "example": "2017-08-15T13:23:33Z"
        },
        "modifiedTimeStamp": {
          "type": "string",
          "format": "date-time",
          "title": "modifiedTimeStamp",
          "example": "2017-08-15T13:23:33Z"
        },
        "changedTimeStamp": {
          "type": "string",
          "format": "date-time",
          "title": "changedTimeStamp",
          "example": "2017-08-15T13:23:33Z"
        },
        "provisioningState": {
          "type": "string",
          "example": "Available"
        }
      }
    },
    "subvolumePatchParams": {
      "type": "object",
      "properties": {
        "size": {
          "type": "integer",
          "format": "int64",
          "title": "size",
          "x-nullable": true,
          "example": 5
        },
        "path": {
          "type": "string",
          "title": "path",
          "example": "/pathToSubvolume"
        }
      }
    },
    "subvolumePatchRequest": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/subvolumePatchParams",
          "x-ms-client-flatten": true
        }
      }
    },
    "subvolumeProperties": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string",
          "title": "path",
          "example": "/subvolume1"
        },
        "size": {
          "type": "integer",
          "format": "int64",
          "title": "size",
          "x-nullable": true,
          "example": 5
        },
        "parentPath": {
          "type": "string",
          "title": "name",
          "x-nullable": true,
          "example": "/parentPath"
        },
        "provisioningState": {
          "type": "string",
          "readOnly": true,
          "example": "Available"
        }
      }
    },
    "subvolumesList": {
      "type": "object",
      "description": "[Placeholder] Discription for page model",
      "properties": {
        "value": {
          "type": "array",
          "description": "[Placeholder] Discription for value property",
          "items": {
            "$ref": "#/definitions/subvolumeInfo"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "[Placeholder] Discription for nextLink property"
        }
      }
    },
    "svmPeerCommandResponse": {
      "type": "object",
      "properties": {
        "svmPeeringCommand": {
          "type": "string"
        }
      }
    },
    "usageName": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string"
        },
        "localizedValue": {
          "type": "string"
        }
      },
      "readOnly": true
    },
    "usageProperties": {
      "type": "object",
      "properties": {
        "currentValue": {
          "type": "integer",
          "format": "int32",
          "readOnly": true
        },
        "limit": {
          "type": "integer",
          "format": "int32",
          "readOnly": true
        },
        "unit": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "volume": {
      "type": "object",
      "properties": {
        "etag": {
          "type": "string",
          "readOnly": true
        },
        "zones": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "example": "1"
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "properties": {
          "$ref": "#/definitions/volumeProperties",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "location",
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "volumeBackupProperties": {
      "type": "object",
      "properties": {
        "backupPolicyId": {
          "type": "string",
          "format": "arm-id",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.NetApp/netAppAccounts/backupPolicies"
              }
            ]
          }
        },
        "policyEnforced": {
          "type": "boolean"
        },
        "backupVaultId": {
          "type": "string",
          "format": "arm-id",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.NetApp/netAppAccounts/backupVaults"
              }
            ]
          }
        }
      }
    },
    "volumeBackups": {
      "type": "object",
      "properties": {
        "volumeName": {
          "type": "string"
        },
        "volumeResourceId": {
          "type": "string",
          "format": "arm-id",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.NetApp/netAppAccounts/capacityPools/volumes"
              }
            ]
          }
        },
        "backupsCount": {
          "type": "integer",
          "format": "int32"
        },
        "policyEnabled": {
          "type": "boolean"
        }
      },
      "readOnly": true
    },
    "volumeGroup": {
      "type": "object",
      "properties": {
        "location": {
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "id": {
          "type": "string",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "readOnly": true
        },
        "properties": {
          "$ref": "#/definitions/volumeGroupListProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "volumeGroupDetails": {
      "type": "object",
      "properties": {
        "location": {
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "id": {
          "type": "string",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "readOnly": true
        },
        "properties": {
          "$ref": "#/definitions/volumeGroupProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "volumeGroupList": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/volumeGroup"
          }
        }
      }
    },
    "volumeGroupListProperties": {
      "type": "object",
      "properties": {
        "provisioningState": {
          "type": "string",
          "readOnly": true,
          "example": "Available"
        },
        "groupMetaData": {
          "$ref": "#/definitions/volumeGroupMetaData",
          "type": "object",
          "title": "groupMetaData"
        }
      }
    },
    "volumeGroupMetaData": {
      "type": "object",
      "properties": {
        "groupDescription": {
          "type": "string",
          "example": "group description"
        },
        "applicationType": {
          "type": "string",
          "enum": [
            "SAP-HANA",
            "ORACLE"
          ],
          "x-ms-enum": {
            "name": "ApplicationType",
            "modelAsString": true
          },
          "example": "SAP-HANA"
        },
        "applicationIdentifier": {
          "type": "string",
          "example": "SH1"
        },
        "globalPlacementRules": {
          "type": "array",
          "title": "Global volume placement rules",
          "items": {
            "$ref": "#/definitions/placementKeyValuePairs"
          },
          "x-ms-identifiers": [
            "key"
          ]
        },
        "volumesCount": {
          "type": "integer",
          "format": "int64",
          "readOnly": true,
          "example": 5
        }
      }
    },
    "volumeGroupProperties": {
      "type": "object",
      "properties": {
        "provisioningState": {
          "type": "string",
          "readOnly": true,
          "example": "Available"
        },
        "groupMetaData": {
          "$ref": "#/definitions/volumeGroupMetaData",
          "type": "object",
          "title": "groupMetaData"
        },
        "volumes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/volumeGroupVolumeProperties"
          }
        }
      }
    },
    "volumeGroupVolumeProperties": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "readOnly": true
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "readOnly": true
        },
        "tags": {
          "$ref": "#/definitions/resourceTags"
        },
        "zones": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "example": "1"
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "properties": {
          "$ref": "#/definitions/volumeProperties",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "properties"
      ]
    },
    "volumeList": {
      "type": "object",
      "description": "[Placeholder] Discription for page model",
      "properties": {
        "value": {
          "type": "array",
          "description": "[Placeholder] Discription for value property",
          "items": {
            "$ref": "#/definitions/volume"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "[Placeholder] Discription for nextLink property"
        }
      }
    },
    "volumePatch": {
      "type": "object",
      "properties": {
        "location": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "readOnly": true
        },
        "tags": {
          "$ref": "#/definitions/resourceTags"
        },
        "properties": {
          "$ref": "#/definitions/volumePatchProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "volumePatchProperties": {
      "type": "object",
      "properties": {
        "serviceLevel": {
          "type": "string",
          "title": "serviceLevel",
          "default": "Premium",
          "enum": [
            "Standard",
            "Premium",
            "Ultra",
            "StandardZRS",
            "Flexible"
          ],
          "x-ms-enum": {
            "name": "ServiceLevel",
            "modelAsString": true
          }
        },
        "usageThreshold": {
          "type": "integer",
          "format": "int64",
          "title": "usageThreshold",
          "default": 107374182400,
          "minimum": 53687091200,
          "maximum": 2638827906662400,
          "example": 107374182400
        },
        "exportPolicy": {
          "type": "object",
          "title": "exportPolicy",
          "properties": {
            "rules": {
              "type": "array",
              "title": "Export policy rule",
              "description": "Export policy rule",
              "items": {
                "$ref": "#/definitions/exportPolicyRule"
              },
              "x-ms-identifiers": [
                "ruleIndex"
              ]
            }
          }
        },
        "protocolTypes": {
          "type": "array",
          "title": "protocolTypes",
          "items": {
            "type": "string"
          },
          "example": [
            "NFSv4.1"
          ]
        },
        "throughputMibps": {
          "type": "number",
          "title": "Maximum throughput in MiB/s that can be achieved by this volume and this will be accepted as input only for manual qosType volume",
          "example": 128.22
        },
        "dataProtection": {
          "type": "object",
          "title": "DataProtection",
          "properties": {
            "backup": {
              "$ref": "#/definitions/volumeBackupProperties",
              "type": "object",
              "title": "Backup",
              "description": "Backup Properties"
            },
            "snapshot": {
              "$ref": "#/definitions/volumeSnapshotProperties",
              "title": "Snapshot",
              "description": "Snapshot properties."
            }
          }
        },
        "isDefaultQuotaEnabled": {
          "type": "boolean",
          "default": false,
          "example": false
        },
        "defaultUserQuotaInKiBs": {
          "type": "integer",
          "format": "int64",
          "default": 0,
          "example": 4
        },
        "defaultGroupQuotaInKiBs": {
          "type": "integer",
          "format": "int64",
          "default": 0,
          "example": 4
        },
        "unixPermissions": {
          "type": "string",
          "minLength": 4,
          "maxLength": 4,
          "x-nullable": true,
          "example": "0770"
        },
        "coolAccess": {
          "type": "boolean",
          "example": false
        },
        "coolnessPeriod": {
          "type": "integer",
          "format": "int32",
          "minimum": 2,
          "maximum": 183,
          "example": 7
        },
        "coolAccessRetrievalPolicy": {
          "type": "string",
          "enum": [
            "Default",
            "OnRead",
            "Never"
          ],
          "x-ms-enum": {
            "name": "CoolAccessRetrievalPolicy",
            "modelAsString": true
          }
        },
        "coolAccessTieringPolicy": {
          "type": "string",
          "enum": [
            "Auto",
            "SnapshotOnly"
          ],
          "x-ms-enum": {
            "name": "CoolAccessTieringPolicy",
            "modelAsString": true
          }
        },
        "snapshotDirectoryVisible": {
          "type": "boolean"
        },
        "smbAccessBasedEnumeration": {
          "type": "string",
          "title": "smbAccessBasedEnumeration",
          "enum": [
            "Disabled",
            "Enabled"
          ],
          "x-ms-enum": {
            "name": "SmbAccessBasedEnumeration",
            "modelAsString": true
          },
          "x-nullable": true,
          "example": "Enabled"
        },
        "smbNonBrowsable": {
          "type": "string",
          "title": "smbNonBrowsable",
          "enum": [
            "Disabled",
            "Enabled"
          ],
          "x-ms-enum": {
            "name": "SmbNonBrowsable",
            "modelAsString": true
          },
          "example": "Enabled"
        }
      }
    },
    "volumeProperties": {
      "type": "object",
      "properties": {
        "fileSystemId": {
          "type": "string",
          "title": "FileSystem ID",
          "minLength": 36,
          "maxLength": 36,
          "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
          "readOnly": true,
          "example": "9760acf5-4638-11e7-9bdb-020073ca7778"
        },
        "creationToken": {
          "type": "string",
          "title": "Creation Token or File Path",
          "minLength": 1,
          "maxLength": 80,
          "pattern": "^[a-zA-Z][a-zA-Z0-9\\-]{0,79}$",
          "example": "some-amazing-filepath",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "serviceLevel": {
          "type": "string",
          "title": "serviceLevel",
          "default": "Premium",
          "enum": [
            "Standard",
            "Premium",
            "Ultra",
            "StandardZRS",
            "Flexible"
          ],
          "x-ms-enum": {
            "name": "ServiceLevel",
            "modelAsString": true
          }
        },
        "usageThreshold": {
          "type": "integer",
          "format": "int64",
          "title": "usageThreshold",
          "default": 107374182400,
          "minimum": 53687091200,
          "maximum": 2638827906662400,
          "example": 107374182400
        },
        "exportPolicy": {
          "type": "object",
          "title": "exportPolicy",
          "properties": {
            "rules": {
              "type": "array",
              "title": "Export policy rule",
              "description": "Export policy rule",
              "items": {
                "$ref": "#/definitions/exportPolicyRule"
              },
              "x-ms-identifiers": [
                "ruleIndex"
              ]
            }
          }
        },
        "protocolTypes": {
          "type": "array",
          "title": "protocolTypes",
          "items": {
            "type": "string"
          },
          "example": [
            "NFSv4.1"
          ]
        },
        "provisioningState": {
          "type": "string",
          "readOnly": true
        },
        "snapshotId": {
          "type": "string",
          "format": "arm-id",
          "title": "Snapshot ID",
          "x-nullable": true,
          "example": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myRG/providers/Microsoft.NetApp/netAppAccounts/account1/capacityPools/pool1/volumes/volume1/snapshots/snapshot1",
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.NetApp/netAppAccounts/capacityPools/volumes/snapshots"
              }
            ]
          }
        },
        "deleteBaseSnapshot": {
          "type": "boolean"
        },
        "backupId": {
          "type": "string",
          "format": "arm-id",
          "title": "Backup ID",
          "x-nullable": true,
          "example": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myRG/providers/Microsoft.NetApp/netAppAccounts/account1/backupVaults/backupVault1/backups/backup1",
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.NetApp/netAppAccounts/backupVaults/backups"
              }
            ]
          }
        },
        "baremetalTenantId": {
          "type": "string",
          "title": "Baremetal Tenant ID",
          "readOnly": true,
          "example": "9560acf5-4e3a-12e7-9bdb-02007cca7779"
        },
        "subnetId": {
          "type": "string"
        },
        "networkFeatures": {
          "type": "string",
          "title": "Network features",
          "default": "Basic",
          "enum": [
            "Basic",
            "Standard",
            "Basic_Standard",
            "Standard_Basic"
          ],
          "x-ms-enum": {
            "name": "NetworkFeatures",
            "modelAsString": true
          },
          "example": "Standard",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "effectiveNetworkFeatures": {
          "type": "string",
          "title": "Network features",
          "default": "Basic",
          "enum": [
            "Basic",
            "Standard",
            "Basic_Standard",
            "Standard_Basic"
          ],
          "x-ms-enum": {
            "name": "NetworkFeatures",
            "modelAsString": true
          },
          "readOnly": true,
          "example": "Standard"
        },
        "networkSiblingSetId": {
          "type": "string",
          "title": "Network Sibling Set ID",
          "minLength": 36,
          "maxLength": 36,
          "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
          "readOnly": true,
          "example": "9760acf5-4638-11e7-9bdb-020073ca3333"
        },
        "storageToNetworkProximity": {
          "type": "string",
          "title": "Storage to Network Proximity",
          "enum": [
            "Default",
            "T1",
            "T2",
            "AcrossT2"
          ],
          "x-ms-enum": {
            "name": "VolumeStorageToNetworkProximity",
            "modelAsString": true
          },
          "readOnly": true,
          "example": "T1"
        },
        "mountTargets": {
          "type": "array",
          "title": "mountTargets",
          "items": {
            "$ref": "#/definitions/mountTargetProperties"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "fileSystemId"
          ]
        },
        "volumeType": {
          "type": "string",
          "example": "DataProtection",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "dataProtection": {
          "type": "object",
          "title": "DataProtection",
          "properties": {
            "backup": {
              "$ref": "#/definitions/volumeBackupProperties",
              "type": "object",
              "title": "Backup",
              "description": "Backup Properties"
            },
            "replication": {
              "$ref": "#/definitions/replicationObject",
              "type": "object",
              "title": "Replication",
              "description": "Replication properties"
            },
            "snapshot": {
              "$ref": "#/definitions/volumeSnapshotProperties",
              "title": "Snapshot",
              "description": "Snapshot properties."
            },
            "volumeRelocation": {
              "$ref": "#/definitions/volumeRelocationProperties",
              "type": "object",
              "title": "VolumeRelocation",
              "description": "VolumeRelocation properties"
            }
          }
        },
        "acceptGrowCapacityPoolForShortTermCloneSplit": {
          "type": "string",
          "title": "acceptGrowCapacityPoolForShortTermCloneSplit",
          "enum": [
            "Accepted",
            "Declined"
          ],
          "x-ms-enum": {
            "name": "AcceptGrowCapacityPoolForShortTermCloneSplit",
            "modelAsString": true
          },
          "example": "Accepted",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "isRestoring": {
          "type": "boolean",
          "readOnly": true
        },
        "snapshotDirectoryVisible": {
          "type": "boolean",
          "default": true
        },
        "kerberosEnabled": {
          "type": "boolean",
          "default": false,
          "example": false,
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "securityStyle": {
          "type": "string",
          "default": "unix",
          "enum": [
            "ntfs",
            "unix"
          ],
          "x-ms-enum": {
            "name": "SecurityStyle",
            "modelAsString": true
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "smbEncryption": {
          "type": "boolean",
          "default": false,
          "example": false
        },
        "smbAccessBasedEnumeration": {
          "type": "string",
          "title": "smbAccessBasedEnumeration",
          "enum": [
            "Disabled",
            "Enabled"
          ],
          "x-ms-enum": {
            "name": "SmbAccessBasedEnumeration",
            "modelAsString": true
          },
          "x-nullable": true,
          "example": "Enabled"
        },
        "smbNonBrowsable": {
          "type": "string",
          "title": "smbNonBrowsable",
          "enum": [
            "Disabled",
            "Enabled"
          ],
          "x-ms-enum": {
            "name": "SmbNonBrowsable",
            "modelAsString": true
          },
          "example": "Enabled"
        },
        "smbContinuouslyAvailable": {
          "type": "boolean",
          "default": false,
          "example": false
        },
        "throughputMibps": {
          "type": "number",
          "title": "Maximum throughput in MiB/s that can be achieved by this volume and this will be accepted as input only for manual qosType volume",
          "x-nullable": true,
          "example": 128.223
        },
        "actualThroughputMibps": {
          "type": "number",
          "readOnly": true,
          "example": 164.221
        },
        "encryptionKeySource": {
          "type": "string",
          "default": "Microsoft.NetApp",
          "enum": [
            "Microsoft.NetApp",
            "Microsoft.KeyVault"
          ],
          "x-ms-enum": {
            "name": "EncryptionKeySource",
            "modelAsString": true
          }
        },
        "keyVaultPrivateEndpointResourceId": {
          "type": "string"
        },
        "ldapEnabled": {
          "type": "boolean",
          "default": false,
          "example": false,
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "coolAccess": {
          "type": "boolean",
          "default": false,
          "example": false
        },
        "coolnessPeriod": {
          "type": "integer",
          "format": "int32",
          "minimum": 2,
          "maximum": 183,
          "example": 7
        },
        "coolAccessRetrievalPolicy": {
          "type": "string",
          "enum": [
            "Default",
            "OnRead",
            "Never"
          ],
          "x-ms-enum": {
            "name": "CoolAccessRetrievalPolicy",
            "modelAsString": true
          }
        },
        "coolAccessTieringPolicy": {
          "type": "string",
          "enum": [
            "Auto",
            "SnapshotOnly"
          ],
          "x-ms-enum": {
            "name": "CoolAccessTieringPolicy",
            "modelAsString": true
          }
        },
        "unixPermissions": {
          "type": "string",
          "minLength": 4,
          "maxLength": 4,
          "x-nullable": true,
          "example": "0770"
        },
        "cloneProgress": {
          "type": "integer",
          "format": "int32",
          "x-nullable": true,
          "readOnly": true,
          "example": 10
        },
        "fileAccessLogs": {
          "type": "string",
          "default": "Disabled",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "FileAccessLogs",
            "modelAsString": true
          },
          "readOnly": true,
          "example": "Disabled"
        },
        "avsDataStore": {
          "type": "string",
          "title": "avsDataStore",
          "default": "Disabled",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "AvsDataStore",
            "modelAsString": true
          },
          "example": "Enabled",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "dataStoreResourceId": {
          "type": "array",
          "title": "dataStoreResourceId",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "isDefaultQuotaEnabled": {
          "type": "boolean",
          "default": false,
          "example": false
        },
        "defaultUserQuotaInKiBs": {
          "type": "integer",
          "format": "int64",
          "default": 0,
          "example": 4
        },
        "defaultGroupQuotaInKiBs": {
          "type": "integer",
          "format": "int64",
          "default": 0,
          "example": 4
        },
        "maximumNumberOfFiles": {
          "type": "integer",
          "format": "int64",
          "readOnly": true,
          "example": 100000000
        },
        "volumeGroupName": {
          "type": "string",
          "readOnly": true
        },
        "capacityPoolResourceId": {
          "type": "string"
        },
        "proximityPlacementGroup": {
          "type": "string",
          "example": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/testGroup/providers/Microsoft.Compute/proximityPlacementGroups/testppg"
        },
        "t2Network": {
          "type": "string",
          "readOnly": true,
          "example": "Test-T2-Alias"
        },
        "volumeSpecName": {
          "type": "string",
          "example": "Data"
        },
        "encrypted": {
          "type": "boolean",
          "readOnly": true
        },
        "placementRules": {
          "type": "array",
          "title": "Volume placement rules",
          "items": {
            "$ref": "#/definitions/placementKeyValuePairs"
          },
          "x-ms-identifiers": [
            "key"
          ]
        },
        "enableSubvolumes": {
          "type": "string",
          "default": "Disabled",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "EnableSubvolumes",
            "modelAsString": true
          },
          "example": "Enabled"
        },
        "provisionedAvailabilityZone": {
          "type": "string",
          "title": "Provisioned Availability Zone",
          "x-nullable": true,
          "readOnly": true,
          "example": "2"
        },
        "isLargeVolume": {
          "type": "boolean",
          "title": "Is Large Volume",
          "default": false,
          "example": false,
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "originatingResourceId": {
          "type": "string",
          "title": "Originating Resource Id",
          "x-nullable": true,
          "readOnly": true,
          "example": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/testGroup/providers/Microsoft.NetApp/netAppAccounts/accountOriginatingResourceId/capacityPools/originatingResourceIdPool/volumes/theOriginalVolume/snapshots/theSnapshot"
        },
        "inheritedSizeInBytes": {
          "type": "integer",
          "format": "int64",
          "title": "inheritedSizeInBytes",
          "x-nullable": true,
          "readOnly": true
        }
      },
      "required": [
        "creationToken",
        "subnetId",
        "usageThreshold"
      ]
    },
    "volumeQuotaRule": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/volumeQuotaRulesProperties",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "volumeQuotaRulePatch": {
      "type": "object",
      "properties": {
        "tags": {
          "$ref": "#/definitions/resourceTags"
        },
        "properties": {
          "$ref": "#/definitions/volumeQuotaRulesProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "volumeQuotaRulesList": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/volumeQuotaRule"
          }
        }
      }
    },
    "volumeQuotaRulesProperties": {
      "type": "object",
      "properties": {
        "provisioningState": {
          "type": "string",
          "enum": [
            "Accepted",
            "Creating",
            "Patching",
            "Deleting",
            "Moving",
            "Failed",
            "Succeeded"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": false
          },
          "readOnly": true
        },
        "quotaSizeInKiBs": {
          "type": "integer",
          "format": "int64",
          "example": "100006"
        },
        "quotaType": {
          "type": "string",
          "title": "quotaType",
          "enum": [
            "DefaultUserQuota",
            "DefaultGroupQuota",
            "IndividualUserQuota",
            "IndividualGroupQuota"
          ],
          "x-ms-enum": {
            "name": "Type",
            "modelAsString": true
          },
          "example": "DefaultUserQuota",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "quotaTarget": {
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      }
    },
    "volumeRelocationProperties": {
      "type": "object",
      "properties": {
        "relocationRequested": {
          "type": "boolean"
        },
        "readyToBeFinalized": {
          "type": "boolean",
          "readOnly": true
        }
      }
    },
    "volumeResourceIds": {
      "type": "array",
      "title": "Volume resource Ids",
      "items": {
        "type": "string",
        "format": "arm-id",
        "title": "Resource Id of volume",
        "x-ms-arm-id-details": {
          "allowedResources": [
            {
              "type": "Microsoft.NetApp/netAppAccounts/capacityPools/volumes"
            }
          ]
        }
      }
    },
    "volumeRevert": {
      "type": "object",
      "properties": {
        "snapshotId": {
          "type": "string",
          "format": "arm-id",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.NetApp/netAppAccounts/capacityPools/volumes/snapshots"
              }
            ]
          }
        }
      }
    },
    "volumeSnapshotProperties": {
      "type": "object",
      "properties": {
        "snapshotPolicyId": {
          "type": "string"
        }
      }
    },
    "weeklySchedule": {
      "type": "object",
      "properties": {
        "snapshotsToKeep": {
          "type": "integer",
          "format": "int32"
        },
        "day": {
          "type": "string",
          "example": "Sunday,Monday"
        },
        "hour": {
          "type": "integer",
          "format": "int32",
          "example": 11
        },
        "minute": {
          "type": "integer",
          "format": "int32",
          "example": 30
        },
        "usedBytes": {
          "type": "integer",
          "format": "int64"
        }
      }
    }
  },
  "parameters": {}
}